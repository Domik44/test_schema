{
  "openapi": "3.0.1",
  "info": {
    "title": "Dawiso",
    "description": "Dawiso product by UD4D",
    "version": "v1"
  },
  "paths": {
    "/api/administration/decrypt": {
      "post": {
        "tags": [
          "Administration"
        ],
        "summary": "Decrypt value (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DecryptInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DecryptInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DecryptInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DecryptInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoResultVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/administration/encrypt": {
      "post": {
        "tags": [
          "Administration"
        ],
        "summary": "Encrypt value (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoResultVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/administration/hash": {
      "post": {
        "tags": [
          "Administration"
        ],
        "summary": "Hash value (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HashInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HashInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HashInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HashInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoResultVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/administration/indexer-tokenizer-info": {
      "get": {
        "tags": [
          "Administration"
        ],
        "summary": "Get indexer and tokenizer info (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IndexerTokenizerInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexerTokenizerInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexerTokenizerInfoVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/administration/refresh-frontend": {
      "post": {
        "tags": [
          "Administration"
        ],
        "summary": "Refresh frontend (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/administration/sync-users": {
      "post": {
        "tags": [
          "Administration"
        ],
        "summary": "Sync users from LDAP (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskInfoVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/administration/token": {
      "post": {
        "tags": [
          "Administration"
        ],
        "summary": "Generate token value (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoResultVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/app-applied-permission": {
      "post": {
        "tags": [
          "AppAppliedPermission"
        ],
        "summary": "create permission (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppAppliedPermissionAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppAppliedPermissionAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppAppliedPermissionAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppAppliedPermissionAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-applied-permission/{permissionId}": {
      "delete": {
        "tags": [
          "AppAppliedPermission"
        ],
        "summary": "remove permission (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-applied-permission/all": {
      "post": {
        "tags": [
          "AppAppliedPermission"
        ],
        "summary": "batch add permission (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppAppliedPermissionAllVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppAppliedPermissionAllVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppAppliedPermissionAllVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppAppliedPermissionAllVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/app-applied-permission/branch/{branchId}": {
      "get": {
        "tags": [
          "AppAppliedPermission"
        ],
        "summary": "get branch permissions (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchAppliedPermissionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchAppliedPermissionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchAppliedPermissionVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-applied-permission/effective-branch-rights/{branchId}/filter": {
      "post": {
        "tags": [
          "AppAppliedPermission"
        ],
        "summary": "filter branch effective rights (inherited from group, admin role etc.) (Auth policies: AnyRole, BranchRead)",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserBranchPermissionFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBranchPermissionFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBranchPermissionFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserBranchPermissionFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserBranchPermissionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBranchPermissionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBranchPermissionVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "BranchRead"
            ]
          }
        ]
      }
    },
    "/api/app-applied-permission/effective-folder-rights/{folderId}/filter": {
      "post": {
        "tags": [
          "AppAppliedPermission"
        ],
        "summary": "filter folder effective rights (inherited from group, admin role etc.) (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserFolderPermissionFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFolderPermissionFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFolderPermissionFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserFolderPermissionFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserFolderPermissionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFolderPermissionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFolderPermissionVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/app-applied-permission/effective-space-rights/{spaceId}/filter": {
      "post": {
        "tags": [
          "AppAppliedPermission"
        ],
        "summary": "filter users with permission in space (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserWithSpaceRightsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserWithSpaceRightsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserWithSpaceRightsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserWithSpaceRightsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithSpaceRightsVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithSpaceRightsVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithSpaceRightsVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-applied-permission/filter": {
      "post": {
        "tags": [
          "AppAppliedPermission"
        ],
        "summary": "filter permissions (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppAppliedPermissionFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppAppliedPermissionFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppAppliedPermissionFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppAppliedPermissionFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppAppliedPermissionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAppliedPermissionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAppliedPermissionVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/app-applied-permission/filter-by-folder": {
      "post": {
        "tags": [
          "AppAppliedPermission"
        ],
        "summary": "filter by folder (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VFolderPermissionFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VFolderPermissionFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VFolderPermissionFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VFolderPermissionFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FolderPermissionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderPermissionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderPermissionVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-applied-permission/folder/{folderId}": {
      "get": {
        "tags": [
          "AppAppliedPermission"
        ],
        "summary": "get folder permissions (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppFolderAppliedPermissionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFolderAppliedPermissionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFolderAppliedPermissionVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-applied-permission/space/{spaceId}": {
      "get": {
        "tags": [
          "AppAppliedPermission"
        ],
        "summary": "get space permissions (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceAppliedPermissionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceAppliedPermissionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceAppliedPermissionVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-applied-permission/user/{userId}/permission-type/{permissionTypeId}": {
      "delete": {
        "tags": [
          "AppAppliedPermission"
        ],
        "summary": "batch remove permissions (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permissionTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/branch/{branchId}": {
      "delete": {
        "tags": [
          "AppBranch"
        ],
        "summary": "delete (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BranchCanChangeOwnerVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchCanChangeOwnerVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchCanChangeOwnerVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/branch/{branchId}/can-change-owner": {
      "get": {
        "tags": [
          "AppBranch"
        ],
        "summary": "get info if user can change branch owner (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BranchCanChangeOwnerVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchCanChangeOwnerVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchCanChangeOwnerVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/branch/{branchId}/changeowner": {
      "post": {
        "tags": [
          "AppBranch"
        ],
        "summary": "change branch owner (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserContextVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContextVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContextVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserContextVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/branch/activate/{branchId}": {
      "put": {
        "tags": [
          "AppBranch"
        ],
        "summary": "activate branch (Auth policies: AnyRole, BranchActivate)",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "BranchActivate"
            ]
          }
        ]
      }
    },
    "/api/branch/add": {
      "post": {
        "tags": [
          "AppBranch"
        ],
        "summary": "add branch (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewBranchContextVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBranchContextVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBranchContextVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewBranchContextVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/branch/add-models-versions": {
      "post": {
        "tags": [
          "AppBranch"
        ],
        "summary": "add model version (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddModelsVersionsToBranchVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddModelsVersionsToBranchVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddModelsVersionsToBranchVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddModelsVersionsToBranchVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoContentResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/branch/close/{branchId}": {
      "put": {
        "tags": [
          "AppBranch"
        ],
        "summary": "deactivate branch (Auth policies: AnyRole, BranchActivate)",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "BranchActivate"
            ]
          }
        ]
      }
    },
    "/api/branch/codetable": {
      "post": {
        "tags": [
          "AppBranch"
        ],
        "summary": "get branch codetables (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CodeTableFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeTableFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeTableFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CodeTableFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchCodetableVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchCodetableVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchCodetableVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/branch/codetable/without-rights": {
      "post": {
        "tags": [
          "AppBranch"
        ],
        "summary": "codetable without rights (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CodeTableFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeTableFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeTableFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CodeTableFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchCodetableVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchCodetableVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchCodetableVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/branch/filter": {
      "post": {
        "tags": [
          "AppBranch"
        ],
        "summary": "filter branches (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppBranchFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppBranchFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppBranchFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppBranchFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/branch/view/{branchName}": {
      "get": {
        "tags": [
          "AppBranch"
        ],
        "summary": "get branch by name (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "branchName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/branch/without-rights/filter": {
      "post": {
        "tags": [
          "AppBranch"
        ],
        "summary": "filter without rights (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppBranchFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppBranchFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppBranchFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppBranchFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBranchVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/file/{fileId}": {
      "put": {
        "tags": [
          "AppFile"
        ],
        "summary": "edit file (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppFileEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppFileEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppFileEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppFileEditVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AppFile"
        ],
        "summary": "delete file (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/file/{fileId}/base64": {
      "get": {
        "tags": [
          "AppFile"
        ],
        "summary": "get file in base64 (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppFileDataBase64VM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFileDataBase64VM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFileDataBase64VM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/file/{fileId}/version-number/{versionNumber}/base64": {
      "get": {
        "tags": [
          "AppFile"
        ],
        "summary": "get file in base64 (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionNumber",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppFileDataBase64VM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFileDataBase64VM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFileDataBase64VM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/file/{fileId}/versions": {
      "get": {
        "tags": [
          "AppFile"
        ],
        "summary": "get file versions (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppFileVersionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFileVersionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFileVersionVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/file/{fileName}/folder/{folderId}": {
      "get": {
        "tags": [
          "AppFile"
        ],
        "summary": "get by filename and folderId, name should be url encoded (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppFileVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFileVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFileVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/file/download/{contentType}/{filePath}": {
      "get": {
        "tags": [
          "AppFile"
        ],
        "summary": "download file",
        "parameters": [
          {
            "name": "contentType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filePath",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accessToken",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/file/download/{fileKey}": {
      "get": {
        "tags": [
          "AppFile"
        ],
        "summary": "download file",
        "parameters": [
          {
            "name": "fileKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accessToken",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/file/model/{modelName}/diagram/{diagramName}/binary": {
      "get": {
        "tags": [
          "AppFile"
        ],
        "summary": "binary diagram for model",
        "parameters": [
          {
            "name": "modelName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diagramName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accessToken",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/folder": {
      "post": {
        "tags": [
          "AppFolder"
        ],
        "summary": "create folder (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppFolderAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppFolderAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppFolderAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppFolderAddVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppFolderVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFolderVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFolderVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/folder/{folderId}": {
      "put": {
        "tags": [
          "AppFolder"
        ],
        "summary": "edit folder (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppFolderAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppFolderAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppFolderAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppFolderAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AppFolder"
        ],
        "summary": "delete folder (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/folder/codetable-filter": {
      "post": {
        "tags": [
          "AppFolder"
        ],
        "summary": "code table filter folders (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FolderCodeTableFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderCodeTableFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderCodeTableFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FolderCodeTableFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FolderCodeTableVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderCodeTableVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderCodeTableVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/folder/download": {
      "get": {
        "tags": [
          "AppFolder"
        ],
        "summary": "download folder",
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "folderId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "accessToken",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/folder/filter": {
      "post": {
        "tags": [
          "AppFolder"
        ],
        "summary": "filter folders (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FolderFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FolderFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppContentItemVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppContentItemVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppContentItemVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/folder/item/{itemId}": {
      "get": {
        "tags": [
          "AppFolder"
        ],
        "summary": "return folder detail, same format as in filter endpoint (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppContentItemVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppContentItemVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppContentItemVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/folder/upload/branch/{branchId}/folder/{folderId}": {
      "post": {
        "tags": [
          "AppFolder"
        ],
        "summary": "upload to folder (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/folder/upload/folder/{folderId}": {
      "post": {
        "tags": [
          "AppFolder"
        ],
        "summary": "upload to folder (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/lock/{lockId}": {
      "delete": {
        "tags": [
          "AppLock"
        ],
        "summary": "Delete existing lock (Auth policies: AdminOrContributor, AnyRole)",
        "parameters": [
          {
            "name": "lockId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/lock/{lockId}/change-priority/{priorityChange}": {
      "put": {
        "tags": [
          "AppLock"
        ],
        "summary": "Change lock priority (Auth policies: AdminOrContributor, AnyRole)",
        "parameters": [
          {
            "name": "lockId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "priorityChange",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/lock/add": {
      "post": {
        "tags": [
          "AppLock"
        ],
        "summary": "Add new lock (Auth policies: AdminOrContributor, AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddLockVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddLockVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddLockVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddLockVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/lock/filter": {
      "post": {
        "tags": [
          "AppLock"
        ],
        "summary": "filter locks (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppLockFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppLockFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppLockFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppLockFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppLockVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppLockVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppLockVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/lock/model/{modelId}": {
      "get": {
        "tags": [
          "AppLock"
        ],
        "summary": "get a lock by modelId (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppLockVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppLockVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppLockVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-model/{modelId}/move-to-folder": {
      "put": {
        "tags": [
          "AppModel"
        ],
        "summary": "move (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/app-model/{modelId}/move-to-folder/{folderId}": {
      "put": {
        "tags": [
          "AppModel"
        ],
        "summary": "move (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "folderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/app-model/add": {
      "post": {
        "tags": [
          "AppModel"
        ],
        "summary": "add model (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "folderId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "branchId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "folderId": {
                  "style": "form"
                },
                "branchId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-model/change-owner/model/{modelId}/owner/{newOwnerId}": {
      "put": {
        "tags": [
          "AppModel"
        ],
        "summary": "change owner (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "newOwnerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-model/code-table-filter": {
      "post": {
        "tags": [
          "AppModel"
        ],
        "summary": "code table filter (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModelCodeTableVMFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelCodeTableVMFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelCodeTableVMFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModelCodeTableVMFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelCodeTableVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelCodeTableVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelCodeTableVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-model/commit": {
      "post": {
        "tags": [
          "AppModel"
        ],
        "summary": "commit (Auth policies: AnyRole)",
        "description": "Error code 404 returns parameters, e.g.\r\n{\r\n\"status\": 404,\r\n\"message\": \"MISSING_BASE_MODEL_VERSION\",\r\n\"parameters\": {\r\n\"MISSING_MODELS\": \"model_1\"\r\n}\r\n}",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "branchId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "comment": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "branchId": {
                  "style": "form"
                },
                "comment": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-model/filter": {
      "post": {
        "tags": [
          "AppModel"
        ],
        "summary": "filter (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModelFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModelFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AllModelsModelVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllModelsModelVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllModelsModelVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-model/info/{modelName}": {
      "get": {
        "tags": [
          "AppModel"
        ],
        "summary": "get model info (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelsDetailModelVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelsDetailModelVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelsDetailModelVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-model/version/{modelVersionId}/content": {
      "get": {
        "tags": [
          "AppModel"
        ],
        "summary": "model version binary",
        "parameters": [
          {
            "name": "modelVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "accessToken",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/app-model-version/{modelVersionId}/info": {
      "get": {
        "tags": [
          "AppModelVersion"
        ],
        "summary": "get model version info (Auth policies: AnyRole, ModelVersionRead)",
        "parameters": [
          {
            "name": "modelVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelVersionInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelVersionInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelVersionInfoVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ModelVersionRead"
            ]
          }
        ]
      }
    },
    "/api/app-model-version/change-state/{modelVersionId}": {
      "put": {
        "tags": [
          "AppModelVersion"
        ],
        "summary": "changes state of the full model version.\r\nUsed when a model has too many changes (Auth policies: OnlyAdmin)",
        "description": "If model version is not in the state Approved, it will approve full model version.\r\nOtherwise it sets model version to Waiting state.",
        "parameters": [
          {
            "name": "modelVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/app-model-version/filter": {
      "post": {
        "tags": [
          "AppModelVersion"
        ],
        "summary": "filter (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VModelVersionChangesFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VModelVersionChangesFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VModelVersionChangesFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VModelVersionChangesFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VModelVersionChangesVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VModelVersionChangesVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VModelVersionChangesVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-model-version/latest-models-versions/filter": {
      "post": {
        "tags": [
          "AppModelVersion"
        ],
        "summary": "filter latest models (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LatestModelVersionByBranchFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LatestModelVersionByBranchFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LatestModelVersionByBranchFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LatestModelVersionByBranchFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AllModelsVersionsVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllModelsVersionsVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllModelsVersionsVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-model-version/merge-request-changes/{pullRequestId}/download": {
      "get": {
        "tags": [
          "AppModelVersion"
        ],
        "summary": "download pull request binary",
        "parameters": [
          {
            "name": "pullRequestId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "delimiter",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diagrams",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "accessToken",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/app-model-version/propagate-changes/{modelVersionId}": {
      "put": {
        "tags": [
          "AppModelVersion"
        ],
        "summary": "Propagates changes (simple flow)\r\nAll the changes must be approved in order to complete the operation\r\nSimple flow also must be turned on (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-model-version/version-changes/{modelVersionId}/download": {
      "get": {
        "tags": [
          "AppModelVersion"
        ],
        "summary": "download model version binary",
        "parameters": [
          {
            "name": "modelVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "delimiter",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diagrams",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "accessToken",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/app-notification/filter": {
      "post": {
        "tags": [
          "AppNotification"
        ],
        "summary": "filter notifications (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppNotificationFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppNotificationFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppNotificationFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppNotificationFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedNotificationVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedNotificationVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedNotificationVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-notification/mark": {
      "put": {
        "tags": [
          "AppNotification"
        ],
        "summary": "Mark the notification/s as differentStatus (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppNotificationStatusChangeVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppNotificationStatusChangeVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppNotificationStatusChangeVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppNotificationStatusChangeVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-notification/mark-read/{notificationId}": {
      "put": {
        "tags": [
          "AppNotification"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/app-notification/mark-unread/{notificationId}": {
      "put": {
        "tags": [
          "AppNotification"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/procedure/run": {
      "post": {
        "tags": [
          "AppProcedure"
        ],
        "summary": "call pipeline procedure (Auth policies: AnyRole, AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppPipelineInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPipelineInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPipelineInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppPipelineInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/pull-request/{pullRequestId}": {
      "get": {
        "tags": [
          "AppPullRequest"
        ],
        "summary": "get merge request (also known as pull request) (Auth policies: AnyRole, PullRequestRead)",
        "parameters": [
          {
            "name": "pullRequestId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BranchPullRequestContainerVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchPullRequestContainerVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchPullRequestContainerVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "PullRequestRead"
            ]
          }
        ]
      }
    },
    "/api/pull-request/{pullRequestId}/model-filter": {
      "post": {
        "tags": [
          "AppPullRequest"
        ],
        "summary": "filter models for merge request (Auth policies: AnyRole, PullRequestRead)",
        "parameters": [
          {
            "name": "pullRequestId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BranchPullRequestFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchPullRequestFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchPullRequestFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BranchPullRequestFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BranchPullRequestVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchPullRequestVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchPullRequestVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "PullRequestRead"
            ]
          }
        ]
      }
    },
    "/api/pull-request/approve/{pullRequestId}": {
      "put": {
        "tags": [
          "AppPullRequest"
        ],
        "summary": "approve merge request (Auth policies: AnyRole, PullRequestChangeModelApproval)",
        "parameters": [
          {
            "name": "pullRequestId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppPullRequestVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPullRequestVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPullRequestVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "PullRequestChangeModelApproval"
            ]
          }
        ]
      }
    },
    "/api/pull-request/cancel/{pullRequestId}": {
      "delete": {
        "tags": [
          "AppPullRequest"
        ],
        "summary": "cancel merge request (Auth policies: AnyRole, PullRequestCancel)",
        "parameters": [
          {
            "name": "pullRequestId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "PullRequestCancel"
            ]
          }
        ]
      }
    },
    "/api/pull-request/create": {
      "post": {
        "tags": [
          "AppPullRequest"
        ],
        "summary": "create merge request (Auth policies: AnyRole)",
        "description": "Error code 409 returns parameters, e.g.\r\n{\r\n\"status\": 409,\r\n\"message\": \"MISSING_BASE_MODEL_VERSION\",\r\n\"parameters\": {\r\n\"MISSING_MODELS\": \"model_1, model2\"\r\n}\r\n}",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppPullRequestDefinitionVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPullRequestDefinitionVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPullRequestDefinitionVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppPullRequestDefinitionVM"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PullRequestVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PullRequestVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PullRequestVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/pull-request/disapprove/{pullRequestId}": {
      "put": {
        "tags": [
          "AppPullRequest"
        ],
        "summary": "disapprove merge request (Auth policies: AnyRole, PullRequestChangeModelApproval)",
        "parameters": [
          {
            "name": "pullRequestId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppPullRequestVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPullRequestVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPullRequestVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "PullRequestChangeModelApproval"
            ]
          }
        ]
      }
    },
    "/api/pull-request/filter": {
      "post": {
        "tags": [
          "AppPullRequest"
        ],
        "summary": "filter merge request (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PullRequestFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PullRequestFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PullRequestFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PullRequestFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PullRequestVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PullRequestVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PullRequestVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/pull-request/finish/{pullRequestId}": {
      "put": {
        "tags": [
          "AppPullRequest"
        ],
        "summary": "finish merge request (Auth policies: AnyRole, PullRequestPropagate)",
        "parameters": [
          {
            "name": "pullRequestId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppPullRequestVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPullRequestVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPullRequestVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "PullRequestPropagate"
            ]
          }
        ]
      }
    },
    "/api/pull-request/model-summary/{pullRequestId}": {
      "get": {
        "tags": [
          "AppPullRequest"
        ],
        "summary": "get model summary for merge request (Auth policies: AnyRole, PullRequestRead)",
        "parameters": [
          {
            "name": "pullRequestId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PullRequestSummaryVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PullRequestSummaryVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PullRequestSummaryVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "PullRequestRead"
            ]
          }
        ]
      }
    },
    "/api/pull-request/resolve/{pullRequestId}": {
      "put": {
        "tags": [
          "AppPullRequest"
        ],
        "summary": "resolve merge request (Auth policies: AnyRole, PullRequestResolve)",
        "parameters": [
          {
            "name": "pullRequestId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppPullRequestVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPullRequestVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPullRequestVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "PullRequestResolve"
            ]
          }
        ]
      }
    },
    "/api/pull-request/review/{pullRequestId}": {
      "put": {
        "tags": [
          "AppPullRequest"
        ],
        "summary": "comment model merge request (Auth policies: AnyRole, PullRequestResolve)",
        "parameters": [
          {
            "name": "pullRequestId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PullRequestComment"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PullRequestComment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PullRequestComment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PullRequestComment"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppPullRequestVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPullRequestVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPullRequestVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "PullRequestResolve"
            ]
          }
        ]
      }
    },
    "/api/app-registration/code": {
      "post": {
        "tags": [
          "AppRegistration"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationByCodeIM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationByCodeIM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationByCodeIM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationByCodeIM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationByCodeResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationByCodeResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationByCodeResultVM"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/app-registration/forgotten-password": {
      "post": {
        "tags": [
          "AppRegistration"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgottenPasswordVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgottenPasswordVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgottenPasswordVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgottenPasswordVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/app-registration/register": {
      "post": {
        "tags": [
          "AppRegistration"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/app-registration/set-password": {
      "post": {
        "tags": [
          "AppRegistration"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetPasswordVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPasswordVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPasswordVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetPasswordVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SetPasswordOutputVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetPasswordOutputVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetPasswordOutputVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/app-registration/whitelist": {
      "get": {
        "tags": [
          "AppRegistration"
        ],
        "summary": " (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WhiteListVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhiteListVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhiteListVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "AppRegistration"
        ],
        "summary": " (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddToWhitelistVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToWhitelistVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToWhitelistVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddToWhitelistVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/app-registration/whitelist/{domainEmail}": {
      "delete": {
        "tags": [
          "AppRegistration"
        ],
        "summary": " (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "domainEmail",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tag": {
      "post": {
        "tags": [
          "AppTag"
        ],
        "summary": "create tag (Auth policies: AdminOrContributor, AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewAppTagVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAppTagVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAppTagVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewAppTagVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/tag/{tagId}": {
      "put": {
        "tags": [
          "AppTag"
        ],
        "summary": "edit tag (Auth policies: AnyRole, TagWrite)",
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditAppTagVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditAppTagVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditAppTagVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditAppTagVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "TagWrite"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AppTag"
        ],
        "summary": "delete tag (Auth policies: AnyRole, TagWrite)",
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "TagWrite"
            ]
          }
        ]
      }
    },
    "/api/tag/filter": {
      "post": {
        "tags": [
          "AppTag"
        ],
        "summary": "filter tags (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppTagGetAllFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppTagGetAllFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppTagGetAllFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppTagGetAllFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTagGetAllVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTagGetAllVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTagGetAllVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/tag/verify-existence": {
      "post": {
        "tags": [
          "AppTag"
        ],
        "summary": "verify tag existence (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppTagVerifyInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppTagVerifyInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppTagVerifyInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppTagVerifyInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTagVerifyVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTagVerifyVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTagVerifyVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/transaction/approval-state/{transactionLogId}": {
      "put": {
        "tags": [
          "AppTransactionLog"
        ],
        "summary": "Changes approval state of transaction logs (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "transactionLogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionLogStateVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionLogStateVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionLogStateVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionLogStateVM"
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTransactionLogVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTransactionLogVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTransactionLogVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/transaction/conflict/resolve/{pullRequestId}": {
      "put": {
        "tags": [
          "AppTransactionLog"
        ],
        "summary": "Resolves a conflict (Auth policies: AnyRole, PullRequestResolve)",
        "parameters": [
          {
            "name": "pullRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResolvedConflictVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolvedConflictVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolvedConflictVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResolvedConflictVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppMergeChangeVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppMergeChangeVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppMergeChangeVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "PullRequestResolve"
            ]
          }
        ]
      }
    },
    "/api/transaction/conflict/resolve/tree/{pullRequestId}": {
      "put": {
        "tags": [
          "AppTransactionLog"
        ],
        "summary": "Resolve all conflicts in all nodes under specified pullRequestId (Auth policies: AnyRole, PullRequestResolve)",
        "parameters": [
          {
            "name": "pullRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResolvedConflictVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolvedConflictVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolvedConflictVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResolvedConflictVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppMergeChangeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppMergeChangeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppMergeChangeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "PullRequestResolve"
            ]
          }
        ]
      }
    },
    "/api/transaction/tree/conflicts/{pullRequestId}": {
      "get": {
        "tags": [
          "AppTransactionLog"
        ],
        "summary": "Gets conflict nodes with virtual nodes above them (Auth policies: AnyRole, PullRequestRead)",
        "parameters": [
          {
            "name": "pullRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MergeNodeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeNodeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeNodeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "PullRequestRead"
            ]
          }
        ]
      }
    },
    "/api/transaction/tree/model-summary/{pullRequestId}": {
      "get": {
        "tags": [
          "AppTransactionLog"
        ],
        "summary": "Gets a model tree summary with virtual nodes. Shows only base-local changes,\r\ni.e. changes between previous and newer version (Auth policies: AnyRole, PullRequestRead)",
        "parameters": [
          {
            "name": "pullRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MergeNodeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeNodeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeNodeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "PullRequestRead"
            ]
          }
        ]
      }
    },
    "/api/transaction/tree/resolved-summary/{pullRequestId}": {
      "get": {
        "tags": [
          "AppTransactionLog"
        ],
        "summary": "gets a summary tree (Auth policies: AnyRole, PullRequestRead)",
        "parameters": [
          {
            "name": "pullRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MergeNodeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeNodeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeNodeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "PullRequestRead"
            ]
          }
        ]
      }
    },
    "/api/transaction/tree/version-summary/{modelVersionId}/{includeDiagramChanges}": {
      "get": {
        "tags": [
          "AppTransactionLog"
        ],
        "summary": "Gets a tree of base-local changes in a model version, i.e. changes between previous and newer version (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelVersionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeDiagramChanges",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MergeNodeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeNodeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeNodeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user/{userId}": {
      "get": {
        "tags": [
          "AppUser"
        ],
        "summary": "get by id (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "AppUser"
        ],
        "summary": "edit user (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserEditVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AppUser"
        ],
        "summary": "delete user (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user/{userId}/change-password": {
      "post": {
        "tags": [
          "AppUser"
        ],
        "summary": "change password (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserChangePasswordVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserChangePasswordVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserChangePasswordVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserChangePasswordVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user/{userId}/default-home-page": {
      "get": {
        "tags": [
          "AppUser"
        ],
        "summary": "get user default homepage (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserDefaultHomePageVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserDefaultHomePageVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserDefaultHomePageVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user/create": {
      "post": {
        "tags": [
          "AppUser"
        ],
        "summary": "create user (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserCreateInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserCreateInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserCreateInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserCreateInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserInfoVM"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/user/filter": {
      "post": {
        "tags": [
          "AppUser"
        ],
        "summary": "filter users (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user/info/{userId}": {
      "get": {
        "tags": [
          "AppUser"
        ],
        "summary": "get info for user (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserInfoVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user/object/{objectId}/concept/{branchId}/filter": {
      "post": {
        "tags": [
          "AppUser"
        ],
        "summary": "get user's concepts (Auth policies: AnyRole, ObjectConceptRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectConceptRead"
            ]
          }
        ]
      }
    },
    "/api/user/search": {
      "post": {
        "tags": [
          "AppUser"
        ],
        "summary": "search user codetable (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CodetableSearchInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodetableSearchInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CodetableSearchInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CodetableSearchInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserCodeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCodeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCodeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-group": {
      "post": {
        "tags": [
          "AppUserGroup"
        ],
        "summary": "create group (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserGroupAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserGroupAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserGroupAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserGroupAddVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/user-group/{groupId}": {
      "get": {
        "tags": [
          "AppUserGroup"
        ],
        "summary": "get group by id (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "AppUserGroup"
        ],
        "summary": "edit group (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserGroupAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserGroupAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserGroupAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserGroupAddVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AppUserGroup"
        ],
        "summary": "remove group (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/user-group/{groupId}/add-user/{userId}": {
      "post": {
        "tags": [
          "AppUserGroup"
        ],
        "summary": "add user to group (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/user-group/{groupId}/relations/all": {
      "get": {
        "tags": [
          "AppUserGroup"
        ],
        "summary": "get relations for group (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserRelationVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserRelationVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserRelationVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-group/{groupId}/remove-user/{userId}": {
      "delete": {
        "tags": [
          "AppUserGroup"
        ],
        "summary": "remove user from group (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/user-group/filter": {
      "post": {
        "tags": [
          "AppUserGroup"
        ],
        "summary": "filter groups (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserGroupFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserGroupFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserGroupFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserGroupFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupWithUserInfoVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-group/for-user/{userId}": {
      "get": {
        "tags": [
          "AppUserGroup"
        ],
        "summary": "get groups for user (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserGroupVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-representative": {
      "post": {
        "tags": [
          "AppUserRepresentative"
        ],
        "summary": "create user representative (Auth policies: AdminOrContributor)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserCreateRepresentativeVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserCreateRepresentativeVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserCreateRepresentativeVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserCreateRepresentativeVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserRepresentativeVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserRepresentativeVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserRepresentativeVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/user-representative/{userRepresentativeId}": {
      "put": {
        "tags": [
          "AppUserRepresentative"
        ],
        "summary": "edit user representative (Auth policies: AdminOrContributor)",
        "parameters": [
          {
            "name": "userRepresentativeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserEditRepresentativeVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserEditRepresentativeVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserEditRepresentativeVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserEditRepresentativeVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserRepresentativeVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserRepresentativeVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserRepresentativeVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AdminOrContributor"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AppUserRepresentative"
        ],
        "summary": "delete user representative (Auth policies: AdminOrContributor)",
        "parameters": [
          {
            "name": "userRepresentativeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/user-role/{roleId}/user/{userId}": {
      "post": {
        "tags": [
          "AppUserRole"
        ],
        "summary": "add user to role (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AppUserRole"
        ],
        "summary": "remove user from role (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/user-role/filter": {
      "post": {
        "tags": [
          "AppUserRole"
        ],
        "summary": "filter user roles (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserRoleFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserRoleFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserRoleFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserRoleFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppRoleVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppRoleVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppRoleVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/auth/file/token": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "generates a token for downloading files (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/auth/impersonate": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "impersonate user (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthImpersonateVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthImpersonateVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthImpersonateVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthImpersonateVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Auth"
        ],
        "summary": "cancel impersonating (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "keepMeSignedIn",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "authenticate user",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login-anonymous-guest": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "login Kerberos (Windows Authentication/NTLM)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login-guest": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "login Kerberos (Windows Authentication/NTLM)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthGuestLoginInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthGuestLoginInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthGuestLoginInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthGuestLoginInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login-kerberos": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "login Kerberos (Windows Authentication/NTLM) (Auth)",
        "responses": {
          "307": {
            "description": "Temporary Redirect"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/auth/login-sso": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "SSO authentication",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSsoTokenVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSsoTokenVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSsoTokenVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSsoTokenVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "delete": {
        "tags": [
          "Auth"
        ],
        "summary": "logout user (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-api-url/filter": {
      "post": {
        "tags": [
          "CApiUrl"
        ],
        "summary": "filter (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CApiUrlFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CApiUrlFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CApiUrlFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CApiUrlFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CApiUrlVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApiUrlVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApiUrlVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-application": {
      "post": {
        "tags": [
          "CApplication"
        ],
        "summary": "create application (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationAddVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationGridVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationGridVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationGridVM"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "CApplication"
        ],
        "summary": "edit application (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationEditVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/c-application/filter": {
      "post": {
        "tags": [
          "CApplication"
        ],
        "summary": "filter applications (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationGridFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationGridFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationGridFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationGridFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationGridVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationGridVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationGridVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-application/object-type/filter": {
      "post": {
        "tags": [
          "CApplication"
        ],
        "summary": "filters applications with object types (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationObjectTypeFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationObjectTypeFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationObjectTypeFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationObjectTypeFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationObjectTypeGridVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationObjectTypeGridVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationObjectTypeGridVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-attribute-type": {
      "get": {
        "tags": [
          "CAttributeType"
        ],
        "summary": "get all attribute types (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeWithFeaturesVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeWithFeaturesVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeWithFeaturesVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "CAttributeType"
        ],
        "summary": "create attribute type and default translation (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "user object relation type is not manadatory",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CAttributeTypeAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CAttributeTypeAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CAttributeTypeAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CAttributeTypeAddVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeGridVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeGridVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeGridVM"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "CAttributeType"
        ],
        "summary": "edit attribute type (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CAttributeTypeEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CAttributeTypeEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CAttributeTypeEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CAttributeTypeEditVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/c-attribute-type/{attributeTypeId}": {
      "delete": {
        "tags": [
          "CAttributeType"
        ],
        "summary": "delete attribute type (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "attributeTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/c-attribute-type/filter": {
      "post": {
        "tags": [
          "CAttributeType"
        ],
        "summary": "filters attribute types (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CAttributeTypeGridFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CAttributeTypeGridFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CAttributeTypeGridFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CAttributeTypeGridFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeGridVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeGridVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeGridVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/code/companies": {
      "get": {
        "tags": [
          "CCode"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataMultisetVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataMultisetVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataMultisetVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/code/stereotypes": {
      "get": {
        "tags": [
          "CCode"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataMultisetVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataMultisetVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataMultisetVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/c-color/{enumKey}": {
      "get": {
        "tags": [
          "CColor"
        ],
        "summary": "get color",
        "parameters": [
          {
            "name": "enumKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CColorVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CColorVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CColorVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/c-color/filter": {
      "post": {
        "tags": [
          "CColor"
        ],
        "summary": "get colors (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CColorFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CColorFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CColorFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CColorFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CColorVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CColorVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CColorVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-comment-type-category": {
      "get": {
        "tags": [
          "CCommentTypeCategory"
        ],
        "summary": " (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CCommentTypeCategoryVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CCommentTypeCategoryVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CCommentTypeCategoryVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-comment-type-category/object/{objectId}": {
      "get": {
        "tags": [
          "CCommentTypeCategory"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CCommentTypeCategoryExtendedVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CCommentTypeCategoryExtendedVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CCommentTypeCategoryExtendedVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-display-level/filter": {
      "post": {
        "tags": [
          "CDisplayLevel"
        ],
        "summary": "filter (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphCDisplayLevelFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphCDisplayLevelFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphCDisplayLevelFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphCDisplayLevelFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphCDisplayLevelVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphCDisplayLevelVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphCDisplayLevelVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-domain-type": {
      "get": {
        "tags": [
          "CDomainType"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CDomainTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CDomainTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CDomainTypeVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/c-icon/{id}": {
      "get": {
        "tags": [
          "CIcon"
        ],
        "summary": "get icon by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/c-icon/categories": {
      "get": {
        "tags": [
          "CIcon"
        ],
        "summary": "get icons categories (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CIconCategoryVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CIconCategoryVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CIconCategoryVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-icon/category/{categoryEnumKey}/icon/{enumKey}": {
      "get": {
        "tags": [
          "CIcon"
        ],
        "summary": "get icon by categoryEnumKey and iconEnumKey",
        "parameters": [
          {
            "name": "categoryEnumKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enumKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/c-icon/filter": {
      "post": {
        "tags": [
          "CIcon"
        ],
        "summary": "get icons with filter (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CIconFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CIconFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CIconFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CIconFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CIconVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CIconVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CIconVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-icon/search": {
      "post": {
        "tags": [
          "CIcon"
        ],
        "summary": "search icon by translation (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CIconSearchFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CIconSearchFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CIconSearchFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CIconSearchFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CIconVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CIconVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CIconVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-object-type": {
      "get": {
        "tags": [
          "CObjectType"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CObjectType"
        ],
        "summary": "create (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeAddVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeGridVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeGridVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeGridVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "CObjectType"
        ],
        "summary": "edit (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeEditVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/c-object-type/{objectTypeId}": {
      "delete": {
        "tags": [
          "CObjectType"
        ],
        "summary": " (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "objectTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/c-object-type/application/{applicationId}": {
      "get": {
        "tags": [
          "CObjectType"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/c-object-type/child-types-filter": {
      "post": {
        "tags": [
          "CObjectType"
        ],
        "summary": "filter child types",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeChildFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeChildFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeChildFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeChildFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeChildVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeChildVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeChildVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/c-object-type/filter": {
      "post": {
        "tags": [
          "CObjectType"
        ],
        "summary": "filter",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeGridFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeGridFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeGridFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CObjectTypeGridFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeGridVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeGridVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeGridVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/c-object-type/simple-filter": {
      "post": {
        "tags": [
          "CObjectType"
        ],
        "summary": "simple filter for select component (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectTypeSimpleFilter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectTypeSimpleFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectTypeSimpleFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectTypeSimpleFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeInObjectVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeInObjectVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeInObjectVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-object-type/space/{spaceId}": {
      "get": {
        "tags": [
          "CObjectType"
        ],
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CObjectTypeVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/c-object-type/user-object-relation/features": {
      "get": {
        "tags": [
          "CObjectType"
        ],
        "summary": " (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CObjectTypeFeatureVM"
                      }
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CObjectTypeFeatureVM"
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CObjectTypeFeatureVM"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/code/branch/state": {
      "get": {
        "tags": [
          "Code"
        ],
        "summary": "get branch states",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/code/concept-approval-status": {
      "get": {
        "tags": [
          "Code"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/code/data-source-columns/{windowDefinition}/{dataSource}": {
      "get": {
        "tags": [
          "Code"
        ],
        "summary": "Get all the data source columns",
        "parameters": [
          {
            "name": "windowDefinition",
            "in": "path",
            "description": "ignored",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataSource",
            "in": "path",
            "description": "Id of data sources separated by commas",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/code/data-sources/{windowDefinition}": {
      "get": {
        "tags": [
          "Code"
        ],
        "summary": "Gets all data sources by window definition",
        "parameters": [
          {
            "name": "windowDefinition",
            "in": "path",
            "description": "String name of the windows definition",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/code/data-team-size": {
      "get": {
        "tags": [
          "Code"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/code/element/type": {
      "get": {
        "tags": [
          "Code"
        ],
        "summary": "get element types",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/code/external/{externalDataKey}": {
      "get": {
        "tags": [
          "Code"
        ],
        "summary": "get external, externalDataKey should be url encoded",
        "parameters": [
          {
            "name": "externalDataKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/code/job-position": {
      "get": {
        "tags": [
          "Code"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/code/model-version/state": {
      "get": {
        "tags": [
          "Code"
        ],
        "summary": "Gets all model version states",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeTableVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/code/settings/{windowDefinition}": {
      "get": {
        "tags": [
          "Code"
        ],
        "summary": "Gets all settings for datasources",
        "parameters": [
          {
            "name": "windowDefinition",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WindowDefinitionSettingsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WindowDefinitionSettingsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WindowDefinitionSettingsVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/code/task/result": {
      "get": {
        "tags": [
          "Code"
        ],
        "summary": "get task results",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskResultVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskResultVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskResultVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/code/task/state": {
      "get": {
        "tags": [
          "Code"
        ],
        "summary": "get task states",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskStateVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskStateVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskStateVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/code/task/type": {
      "get": {
        "tags": [
          "Code"
        ],
        "summary": "get task types",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskTypeVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/codelist-data/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "CodeList"
        ],
        "summary": "get rows of codeList by codeListName",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": { }
            },
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/codelist/{modelCode}": {
      "post": {
        "tags": [
          "CodeList"
        ],
        "summary": "get list of codeLists",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CodelistTableFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodelistTableFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CodelistTableFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CodelistTableFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CodelistTableVmPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodelistTableVmPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodelistTableVmPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/collibra/labels": {
      "get": {
        "tags": [
          "Collibra"
        ],
        "summary": " (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraModelVersionGroupedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraModelVersionGroupedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraModelVersionGroupedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/collibra/model/{modelCode}/version/{version}": {
      "get": {
        "tags": [
          "Collibra"
        ],
        "summary": " (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraFullVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraFullVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraFullVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/collibra/model/versions": {
      "get": {
        "tags": [
          "Collibra"
        ],
        "summary": " (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraModelVersionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraModelVersionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraModelVersionVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/collibra/model/versions/grouped": {
      "get": {
        "tags": [
          "Collibra"
        ],
        "summary": " (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraModelVersionGroupedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraModelVersionGroupedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraModelVersionGroupedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/collibra/version/added/{version}": {
      "get": {
        "tags": [
          "Collibra"
        ],
        "summary": " (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraFullVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraFullVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraFullVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/collibra/version/deleted/{version}": {
      "get": {
        "tags": [
          "Collibra"
        ],
        "summary": " (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraFullVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraFullVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollibraFullVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/configuration/synchronize": {
      "post": {
        "tags": [
          "Configuration"
        ],
        "summary": "Synchronize data integration configuration with Ingestion cloud services (Auth policies: OnlyAdmin)",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/connection": {
      "post": {
        "tags": [
          "Connection"
        ],
        "summary": "Create data integration connection (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationConnectionInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationConnectionInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationConnectionInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationConnectionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationConnectionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationConnectionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationConnectionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/connection/{connectionId}": {
      "get": {
        "tags": [
          "Connection"
        ],
        "summary": "Get data integration connection by ConnectionId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationConnectionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationConnectionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationConnectionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Connection"
        ],
        "summary": "Update data integration connection (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationConnectionInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationConnectionInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationConnectionInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationConnectionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationConnectionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationConnectionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationConnectionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Connection"
        ],
        "summary": "Delete data integration connection (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/connection/{connectionId}/activate": {
      "post": {
        "tags": [
          "Connection"
        ],
        "summary": "change state of connection to active (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/connection/{connectionId}/inactivate": {
      "post": {
        "tags": [
          "Connection"
        ],
        "summary": "change state of connection to inactive (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/connection/filter": {
      "post": {
        "tags": [
          "Connection"
        ],
        "summary": "filter ingestion runs (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationConnectionFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationConnectionFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationConnectionFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationConnectionFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationConnectionOverviewVmPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationConnectionOverviewVmPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationConnectionOverviewVmPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/connection/provider": {
      "get": {
        "tags": [
          "Connection"
        ],
        "summary": "Get data integration applications (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationProviderResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationProviderResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationProviderResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/connection/provider/request": {
      "post": {
        "tags": [
          "Connection"
        ],
        "summary": "Get data integration applications (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionConnectorRequestedIm"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionConnectorRequestedIm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionConnectorRequestedIm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionConnectorRequestedIm"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/connection/template/{providerId}": {
      "get": {
        "tags": [
          "Connection"
        ],
        "summary": "Get data integration provider template (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionTemplate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionTemplate"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/connection/test": {
      "post": {
        "tags": [
          "Connection"
        ],
        "summary": "Test data integration connection (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationTestConnectionInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationTestConnectionInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationTestConnectionInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationTestConnectionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/c-page-element/filter": {
      "post": {
        "tags": [
          "CPageElement"
        ],
        "summary": "filter (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CPageElementFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CPageElementFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CPageElementFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CPageElementFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CPageElementVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CPageElementVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CPageElementVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-relation-type": {
      "post": {
        "tags": [
          "CRelationType"
        ],
        "summary": "add relation type (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CRelationTypeEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CRelationTypeEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CRelationTypeEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CRelationTypeEditVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeVM"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "CRelationType"
        ],
        "summary": "edit relation type (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CRelationTypeEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CRelationTypeEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CRelationTypeEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CRelationTypeEditVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-relation-type/{enumKey}": {
      "delete": {
        "tags": [
          "CRelationType"
        ],
        "summary": "delete relation type (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "enumKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-relation-type/filter": {
      "post": {
        "tags": [
          "CRelationType"
        ],
        "summary": "get relation types by filter as pagedVM",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CRelationTypeFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CRelationTypeFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CRelationTypeFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CRelationTypeFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/c-tour-feature/filter": {
      "post": {
        "tags": [
          "CTourFeature"
        ],
        "summary": "filter (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CTourFeatureFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CTourFeatureFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CTourFeatureFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CTourFeatureFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CTourFeatureVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTourFeatureVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTourFeatureVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-tour-step-state/filter": {
      "post": {
        "tags": [
          "CTourStepState"
        ],
        "summary": "filter (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CTourStepStateFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CTourStepStateFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CTourStepStateFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CTourStepStateFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CTourStepStateVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTourStepStateVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTourStepStateVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/c-user-object-relation-type": {
      "get": {
        "tags": [
          "CUserObjectRelationType"
        ],
        "summary": "get all user object relation types",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrUserObjectRelationTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrUserObjectRelationTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrUserObjectRelationTypeVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/c-user-object-relation-type/bulk-edit-options": {
      "post": {
        "tags": [
          "CUserObjectRelationType"
        ],
        "summary": "get bulk edit options (used to check if a user relation type has the same type (single value VS multi value)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectBulkEditOptionsInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectBulkEditOptionsInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectBulkEditOptionsInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectBulkEditOptionsInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BulkEditOptionsVm"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkEditOptionsVm"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkEditOptionsVm"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/applications": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDashboardVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDashboardVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDashboardVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dashboard/dashboards/{pageEnumKey}": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "pageEnumKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PageDashboardVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDashboardVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDashboardVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dashboard/favourites": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dashboard/filtered-object": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dashboard/filtered-root-object": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dashboard/recent": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dashboard/recommended": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmptyFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmptyFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmptyFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmptyFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dashboard/search-object": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FullTextSearchRequestModelFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FullTextSearchRequestModelFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FullTextSearchRequestModelFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FullTextSearchRequestModelFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMFullTextSearchRequestModelPagedVMf"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMFullTextSearchRequestModelPagedVMf"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDashboardVMFullTextSearchRequestModelPagedVMf"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dashboard/spaces": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeDashboardFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceDashboardVMPagedUrlVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceDashboardVMPagedUrlVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceDashboardVMPagedUrlVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/data-integration/data-source": {
      "post": {
        "tags": [
          "DataSource"
        ],
        "summary": "Create data integration connection (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/data-source/{dataSourceId}": {
      "get": {
        "tags": [
          "DataSource"
        ],
        "summary": "Get data integration data source by data source id (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "dataSourceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "DataSource"
        ],
        "summary": "Update data integration connection (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "dataSourceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "DataSource"
        ],
        "summary": "Delete data integration connection (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "dataSourceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/data-source/{dataSourceId}/activate": {
      "post": {
        "tags": [
          "DataSource"
        ],
        "summary": "change state of data source to active (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "dataSourceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/data-source/{dataSourceId}/configuration": {
      "get": {
        "tags": [
          "DataSource"
        ],
        "summary": "Try execute data integration (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "dataSourceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceConfigVm"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceConfigVm"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceConfigVm"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/data-source/{dataSourceId}/execute": {
      "post": {
        "tags": [
          "DataSource"
        ],
        "summary": "Try execute data integration (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "dataSourceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/data-source/{dataSourceId}/inactivate": {
      "post": {
        "tags": [
          "DataSource"
        ],
        "summary": "change state of data source to inactive (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "dataSourceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/data-source/connection": {
      "get": {
        "tags": [
          "DataSource"
        ],
        "summary": "Get data integration connections (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceConnectionVmPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceConnectionVmPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceConnectionVmPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/data-source/filter": {
      "post": {
        "tags": [
          "DataSource"
        ],
        "summary": "Filter data integration data source (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceOverviewVmPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceOverviewVmPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceOverviewVmPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/data-source/space/{applicationId}": {
      "post": {
        "tags": [
          "DataSource"
        ],
        "summary": "Get data integration connections (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceSpaceFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceSpaceFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceSpaceFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataIntegrationDataSourceSpaceFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceSpaceVmPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceSpaceVmPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataIntegrationDataSourceSpaceVmPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/data-source/template/{applicationId}": {
      "get": {
        "tags": [
          "DataSource"
        ],
        "summary": "Get template for application data source (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionTemplate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionTemplate"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary/diagram/description/{modelCode}/{diagramCode}": {
      "get": {
        "tags": [
          "DDiagram"
        ],
        "summary": "Get Diagram detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diagramCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DDiagramDetailVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDiagramDetailVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDiagramDetailVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/diagram/objects/{modelCode}/{diagramCode}": {
      "post": {
        "tags": [
          "DDiagram"
        ],
        "summary": "Get Diagram objects (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diagramCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DDiagramObjectFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DDiagramObjectFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DDiagramObjectFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DDiagramObjectFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DDiagramObjectVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDiagramObjectVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDiagramObjectVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/diagram/{diagramCode}": {
      "get": {
        "tags": [
          "DDiagram"
        ],
        "summary": "Get Diagram detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diagramCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DDiagramDetailVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDiagramDetailVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDiagramDetailVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/diagram/{diagramCode}/objects": {
      "post": {
        "tags": [
          "DDiagram"
        ],
        "summary": "Get Diagram objects (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diagramCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DDiagramObjectFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DDiagramObjectFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DDiagramObjectFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DDiagramObjectFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DDiagramObjectVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDiagramObjectVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDiagramObjectVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/ddl/index-as-parameter/sql": {
      "post": {
        "tags": [
          "Ddl"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseAndIndexInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseAndIndexInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseAndIndexInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseAndIndexInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringSinglePropertyWrapperVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringSinglePropertyWrapperVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringSinglePropertyWrapperVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/ddl/index-as-parameter/sql-html": {
      "post": {
        "tags": [
          "Ddl"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseAndIndexInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseAndIndexInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseAndIndexInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseAndIndexInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/ddl/sql": {
      "post": {
        "tags": [
          "Ddl"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringSinglePropertyWrapperVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringSinglePropertyWrapperVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringSinglePropertyWrapperVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/ddl/sql-html": {
      "post": {
        "tags": [
          "Ddl"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DdlWithDatabaseInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/ddl-data/table": {
      "post": {
        "tags": [
          "DdlData"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DllInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DllInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DllInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DllInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DllVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DllVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DllVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/domain/description/{modelCode}/{domainCode}": {
      "get": {
        "tags": [
          "DDomain"
        ],
        "summary": "Get Domain detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domainCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DDomainDetailVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDomainDetailVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDomainDetailVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/domain/used-ins/{modelCode}/{domainCode}": {
      "post": {
        "tags": [
          "DDomain"
        ],
        "summary": "Get Domain Used-Ins (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domainCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DDomainUsedInFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DDomainUsedInFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DDomainUsedInFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DDomainUsedInFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DDomainUsedInVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDomainUsedInVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDomainUsedInVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/domain/{domainCode}": {
      "get": {
        "tags": [
          "DDomain"
        ],
        "summary": "Get Domain detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domainCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DDomainDetailVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDomainDetailVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDomainDetailVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/domain/{domainCode}/used-ins": {
      "post": {
        "tags": [
          "DDomain"
        ],
        "summary": "Get Domain Used-Ins (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domainCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DDomainUsedInFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DDomainUsedInFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DDomainUsedInFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DDomainUsedInFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DDomainUsedInVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDomainUsedInVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDomainUsedInVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/dwh/columns": {
      "post": {
        "tags": [
          "DDWH"
        ],
        "summary": "Get model columns (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableColumnsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableColumnsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableColumnsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableColumnsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableColumnsVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableColumnsVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableColumnsVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/dwh/tables": {
      "post": {
        "tags": [
          "DDWH"
        ],
        "summary": "Get all Tables of the Model (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTableFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTableFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTableFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTableFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTableVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTableVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTableVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/dwh/views": {
      "post": {
        "tags": [
          "DDWH"
        ],
        "summary": "Get all Views of the Model (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelViewFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelViewFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelViewFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelViewFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelViewVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelViewVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelViewVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/debug/error": {
      "post": {
        "tags": [
          "Debug"
        ],
        "summary": "Throw error for testing error logs (Auth policies: AdminOrContributor)",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/dictionary-element-definition/add/{profileName}/{windowDefinitionName}/{parentElementDefinitionId}": {
      "post": {
        "tags": [
          "DElementDefinition"
        ],
        "summary": "add element definition (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "profileName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "windowDefinitionName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentElementDefinitionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DElementDefinitionOldVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DElementDefinitionOldVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DElementDefinitionOldVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DElementDefinitionOldVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary-element-definition/delete/{profileName}/{windowDefinitionName}/{name}/{parentId}": {
      "post": {
        "tags": [
          "DElementDefinition"
        ],
        "summary": "delete element definition (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "profileName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "windowDefinitionName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary-element-definition/edit/{profileName}/{windowDefinitionName}/{name}/{parentId}": {
      "post": {
        "tags": [
          "DElementDefinition"
        ],
        "summary": "edit element definition (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "profileName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "windowDefinitionName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DElementDefinitionOldVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DElementDefinitionOldVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DElementDefinitionOldVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DElementDefinitionOldVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary-element-definition/element/{profileName}/{windowDefinitionName}/{name}/{parentId}": {
      "get": {
        "tags": [
          "DElementDefinition"
        ],
        "summary": "get element definition (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "profileName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "windowDefinitionName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DElementDefinitionOldVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DElementDefinitionOldVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DElementDefinitionOldVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary-element-definition/filter": {
      "post": {
        "tags": [
          "DElementDefinition"
        ],
        "summary": "filter element definitions (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DElementDefinitionFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DElementDefinitionFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DElementDefinitionFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DElementDefinitionFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DElementDefinitionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DElementDefinitionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DElementDefinitionVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary-element-definition/moveupdown/{profileName}/{windowDefinitionName}/{name}/{parentId}/{position}": {
      "post": {
        "tags": [
          "DElementDefinition"
        ],
        "summary": "move element definition (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "profileName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "windowDefinitionName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary/object-count": {
      "get": {
        "tags": [
          "Dictionary"
        ],
        "summary": "Get dictionary objects count (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DObjectCountVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DObjectCountVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DObjectCountVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/mapping-details": {
      "get": {
        "tags": [
          "DMapping"
        ],
        "summary": "Gets details of all mappings of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/mappings": {
      "post": {
        "tags": [
          "DMapping"
        ],
        "summary": "Gets all mappings (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DMappingDetailFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DMappingDetailFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DMappingDetailFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DMappingDetailFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/mapping-details/{modelCode}/{tableCode}/{mappingCode}": {
      "get": {
        "tags": [
          "DMapping"
        ],
        "summary": "Gets details of all mappings of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mappingCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/mappings/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "DMapping"
        ],
        "summary": "Gets all mappings (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DMappingDetailFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DMappingDetailFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DMappingDetailFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DMappingDetailFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}": {
      "get": {
        "tags": [
          "DModel"
        ],
        "summary": "Get Model detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDescriptionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDescriptionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDescriptionVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/changes": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Changes of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelChangeFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelChangeFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelChangeFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelChangeFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/dg-table-relations": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get table relations (taken from MR Objects) (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/dg-table-relations-filters/{fieldName}": {
      "get": {
        "tags": [
          "DModel"
        ],
        "summary": "Get table relations (taken from MR Objects) select box filter values (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MrObjectRelationFilterVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MrObjectRelationFilterVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MrObjectRelationFilterVM"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/diagrams": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Diagrams of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDiagramFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDiagramFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDiagramFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDiagramFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDiagramVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDiagramVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDiagramVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/domains": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Domains of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDomainFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDomainFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDomainFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDomainFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDomainVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDomainVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDomainVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/procedures": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Procedures of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelProcedureFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelProcedureFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelProcedureFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelProcedureFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelProcedureVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelProcedureVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelProcedureVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/rules": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Rules of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelRuleFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelRuleFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelRuleFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelRuleFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelRuleVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelRuleVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelRuleVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/source-models": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Source Models of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceModelFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceModelFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceModelFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceModelFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelSourceModelVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelSourceModelVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelSourceModelVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/source-tables": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Source Tables of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceTableFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceTableFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceTableFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceTableFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelSourceTableVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelSourceTableVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelSourceTableVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/tables": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Tables of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTableFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTableFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTableFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTableFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTableVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTableVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTableVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/target-models": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Target Models of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetModelFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetModelFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetModelFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetModelFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTargetModelVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTargetModelVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTargetModelVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/target-tables": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Target Tables of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetTableFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetTableFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetTableFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetTableFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTargetTableVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTargetTableVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTargetTableVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/users": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get models where user is owner (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelUsersFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelUsersFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelUsersFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelUsersFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DUserDescriptionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DUserDescriptionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DUserDescriptionVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/views": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Views of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelViewFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelViewFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelViewFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelViewFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelViewVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelViewVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelViewVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/changes/{modelCode}": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Changes of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelChangeFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelChangeFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelChangeFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelChangeFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelChangeVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/description/{modelCode}": {
      "get": {
        "tags": [
          "DModel"
        ],
        "summary": "Get Model detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDescriptionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDescriptionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDescriptionVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/dg-table-relations-filters/{modelCode}/{fieldName}": {
      "get": {
        "tags": [
          "DModel"
        ],
        "summary": "Get table relations (taken from MR Objects) select box filter values (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MrObjectRelationFilterVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MrObjectRelationFilterVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MrObjectRelationFilterVM"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/dg-table-relations/{modelCode}": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get table relations (taken from MR Objects) (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/diagrams/{modelCode}": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Diagrams of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDiagramFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDiagramFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDiagramFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDiagramFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDiagramVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDiagramVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDiagramVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/domains/{modelCode}": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Domains of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDomainFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDomainFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDomainFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelDomainFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDomainVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDomainVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelDomainVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/overview": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get Overview of all Models (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelOverviewVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelOverviewVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelOverviewVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/overview_extended": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get Extended Overview of all Models (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewExtendedFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewExtendedFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewExtendedFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewExtendedFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelOverviewExtendedVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelOverviewExtendedVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelOverviewExtendedVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/procedures/{modelCode}": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Procedures of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelProcedureFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelProcedureFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelProcedureFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelProcedureFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelProcedureVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelProcedureVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelProcedureVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/rules/{modelCode}": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Rules of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelRuleFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelRuleFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelRuleFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelRuleFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelRuleVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelRuleVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelRuleVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/source-models/{modelCode}": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Source Models of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceModelFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceModelFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceModelFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceModelFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelSourceModelVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelSourceModelVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelSourceModelVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/source-tables/{modelCode}": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Source Tables of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceTableFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceTableFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceTableFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelSourceTableFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelSourceTableVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelSourceTableVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelSourceTableVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/tables/{modelCode}": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Tables of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTableFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTableFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTableFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTableFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTableVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTableVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTableVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/target-models/{modelCode}": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Target Models of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetModelFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetModelFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetModelFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetModelFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTargetModelVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTargetModelVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTargetModelVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/target-tables/{modelCode}": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Target Tables of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetTableFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetTableFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetTableFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelTargetTableFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTargetTableVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTargetTableVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelTargetTableVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/users/{modelCode}": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get models where user is owner (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelUsersFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelUsersFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelUsersFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelUsersFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DUserDescriptionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DUserDescriptionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DUserDescriptionVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/views/{modelCode}": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get all Views of the Model (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelViewFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelViewFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelViewFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelViewFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelViewVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelViewVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelViewVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/models": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get Overview of all Models (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelOverviewVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelOverviewVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelOverviewVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/models_extended": {
      "post": {
        "tags": [
          "DModel"
        ],
        "summary": "Get Extended Overview of all Models (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewExtendedFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewExtendedFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewExtendedFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DModelOverviewExtendedFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DModelOverviewExtendedVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelOverviewExtendedVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DModelOverviewExtendedVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dd-object/{path}": {
      "get": {
        "tags": [
          "DObject"
        ],
        "summary": "Get info about DD object\r\n(i.e IsFavourite,IsWatched, Likes, etc) (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DObjectVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DObjectVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DObjectVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dd-object/{path}/add-dislike": {
      "post": {
        "tags": [
          "DObject"
        ],
        "summary": "add like (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dd-object/{path}/add-favourite": {
      "post": {
        "tags": [
          "DObject"
        ],
        "summary": "add favourite (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dd-object/{path}/add-like": {
      "post": {
        "tags": [
          "DObject"
        ],
        "summary": "add like (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dd-object/{path}/add-watched": {
      "post": {
        "tags": [
          "DObject"
        ],
        "summary": "add watched (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dd-object/{path}/remove-dislike": {
      "post": {
        "tags": [
          "DObject"
        ],
        "summary": "remove dislike (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/dd-object/{path}/remove-favourite": {
      "delete": {
        "tags": [
          "DObject"
        ],
        "summary": "remove favourite (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dd-object/{path}/remove-like": {
      "post": {
        "tags": [
          "DObject"
        ],
        "summary": "remove like (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dd-object/{path}/remove-watched": {
      "delete": {
        "tags": [
          "DObject"
        ],
        "summary": "remove watched (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/template-documents": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "get all document templates",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CDocumentTypeVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CDocumentTypeVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CDocumentTypeVM"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Create new document (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File",
                  "Key",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "Key": {
                    "type": "string"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Description": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Key": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "File": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/template-documents/{documentTypeId}": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "get document template content (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "documentTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Document"
        ],
        "summary": "Create new document (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "documentTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string"
                  },
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Description": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "File": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Document"
        ],
        "summary": "delete document template by id (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "documentTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/template-documents/{enumKey}": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "get document template content (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "enumKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/template-documents/{enumKey}/upload-file": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Uploads document file (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "enumKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/template-documents/application/{applicationId}": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "get document templates by application id (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CDocumentTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CDocumentTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CDocumentTypeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/template-documents/applications": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "get all connected applications (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationLabelVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationLabelVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationLabelVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/template-documents/filter": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Filter template documents (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateDocumentFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateDocumentFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateDocumentFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateDocumentFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateDocumentVmPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateDocumentVmPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateDocumentVmPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/procedure/{ProcedureCode}": {
      "get": {
        "tags": [
          "DProcedure"
        ],
        "summary": "Get Procedure detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "procedureCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DProcedureDetailVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DProcedureDetailVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DProcedureDetailVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/procedure/description/{modelCode}/{ProcedureCode}": {
      "get": {
        "tags": [
          "DProcedure"
        ],
        "summary": "Get Procedure detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "procedureCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DProcedureDetailVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DProcedureDetailVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DProcedureDetailVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary-profile/add/{copyOfProfileId}": {
      "post": {
        "tags": [
          "DProfile"
        ],
        "summary": "copy profile (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "copyOfProfileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DProfileAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DProfileAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DProfileAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DProfileAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary-profile/delete/{profileId}": {
      "post": {
        "tags": [
          "DProfile"
        ],
        "summary": "delete profile (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary-profile/edit/{profileId}": {
      "post": {
        "tags": [
          "DProfile"
        ],
        "summary": "edit profile (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DProfileAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DProfileAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DProfileAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DProfileAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary-profile/filter": {
      "post": {
        "tags": [
          "DProfile"
        ],
        "summary": "filter dictionary profiles (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DProfileFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DProfileFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DProfileFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DProfileFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DProfileVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DProfileVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DProfileVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/rule/{ruleCode}": {
      "get": {
        "tags": [
          "DRule"
        ],
        "summary": "Get Rule detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DRuleDetailVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DRuleDetailVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DRuleDetailVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/rule/{ruleCode}/used-ins": {
      "post": {
        "tags": [
          "DRule"
        ],
        "summary": "Get Rule Used-ins (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DRuleUsedInFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DRuleUsedInFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DRuleUsedInFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DRuleUsedInFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DRuleUsedInVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DRuleUsedInVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DRuleUsedInVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/rule/description/{modelCode}/{ruleCode}": {
      "get": {
        "tags": [
          "DRule"
        ],
        "summary": "Get Rule detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DRuleDetailVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DRuleDetailVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DRuleDetailVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/rule/used-ins/{modelCode}/{ruleCode}": {
      "post": {
        "tags": [
          "DRule"
        ],
        "summary": "Get Rule Used-ins (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DRuleUsedInFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DRuleUsedInFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DRuleUsedInFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DRuleUsedInFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DRuleUsedInVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DRuleUsedInVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DRuleUsedInVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary-selected-column/add/{profileName}/{windowDefinitionName}/{elementName}/{parentId}": {
      "post": {
        "tags": [
          "DSelectedColumn"
        ],
        "summary": "add element to profile (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "profileName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "windowDefinitionName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "elementName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DSelectedColumnInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DSelectedColumnInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DSelectedColumnInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DSelectedColumnInputVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary-selected-column/filter": {
      "post": {
        "tags": [
          "DSelectedColumn"
        ],
        "summary": "filter selected columns (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DSelectedColumnFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DSelectedColumnFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DSelectedColumnFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DSelectedColumnFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DSelectedColumnVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSelectedColumnVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSelectedColumnVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary-selected-column/move/{selectedColumnId}/{position}": {
      "post": {
        "tags": [
          "DSelectedColumn"
        ],
        "summary": "move element (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "selectedColumnId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary-selected-column/remove/{selectedColumnId}": {
      "post": {
        "tags": [
          "DSelectedColumn"
        ],
        "summary": "remove column (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "selectedColumnId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get Table detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableDescriptionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableDescriptionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableDescriptionVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/column-details": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get details of all Columns of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTableColumnsVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTableColumnsVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTableColumnsVM"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/column/{columnCode}": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get Column detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "columnCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableColumnsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableColumnsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableColumnsVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/columns": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Columns of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableColumnsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableColumnsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableColumnsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableColumnsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableColumnsVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableColumnsVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableColumnsVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/dg-table-relations": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get table relations (taken from MR Objects) (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/dg-table-relations/{fieldName}": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get table relations (taken from MR Objects) select box filter values (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MrObjectRelationFilterVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MrObjectRelationFilterVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MrObjectRelationFilterVM"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/dg-table-relations/{fromObjectTypeIdsStr}": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get table relations (taken from MR Objects) - filtered by FromObjectTypeIds provided as string '101,102,103' (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromObjectTypeIdsStr",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/diagrams": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Diagrams of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableDiagramsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableDiagramsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableDiagramsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableDiagramsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableDiagramsVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableDiagramsVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableDiagramsVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/incoming-references": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Incoming References of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableIncomingReferencesVM"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableIncomingReferencesVM"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableIncomingReferencesVM"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Incoming References of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIncomingReferencesFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIncomingReferencesFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIncomingReferencesFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIncomingReferencesFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableIncomingReferencesVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableIncomingReferencesVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableIncomingReferencesVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/indexes": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Indexes of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIndexesFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIndexesFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIndexesFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIndexesFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableIndexesVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableIndexesVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableIndexesVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/outgoing-references": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Outgoing References of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableOutgoingReferencesVM"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableOutgoingReferencesVM"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableOutgoingReferencesVM"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Outgoing Refernces of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableOutgoingReferencesFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableOutgoingReferencesFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableOutgoingReferencesFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableOutgoingReferencesFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableOutgoingReferencesVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableOutgoingReferencesVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableOutgoingReferencesVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/rules": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Rules of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableRulesFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableRulesFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableRulesFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableRulesFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableRulesVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableRulesVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableRulesVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/source-columns": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Source Columns of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableSourceColumnsVM"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableSourceColumnsVM"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableSourceColumnsVM"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Source Columns of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceColumnsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceColumnsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceColumnsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceColumnsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableSourceColumnsVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableSourceColumnsVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableSourceColumnsVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/source-tables": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Source Tables of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceTablesFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceTablesFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceTablesFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceTablesFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableSourceTablesVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableSourceTablesVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableSourceTablesVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/target-columns": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Target Columns of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableTargetColumnsVM"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableTargetColumnsVM"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableTargetColumnsVM"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Target Columns of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetColumnsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetColumnsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetColumnsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetColumnsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetColumnsVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetColumnsVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetColumnsVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/target-report-items": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Target Report Items of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportItemsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportItemsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportItemsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportItemsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetReportItemsVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetReportItemsVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetReportItemsVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/target-reports": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Target Reports of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetReportsVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetReportsVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetReportsVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/table/{tableCode}/target-tables": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Target Tables of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetTablesFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetTablesFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetTablesFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetTablesFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetTablesVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetTablesVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetTablesVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/all-dg-table-relations/{modelCode}/{tableCode}/{columnCode}": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get grouped column relations (taken from MR Objects) (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "columnCode",
            "in": "path",
            "description": "ignored, used by FE to remember the scroll position",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/all-incoming-references/{modelCode}/{tableCode}/{columnCode}": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Incoming References of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "columnCode",
            "in": "path",
            "description": "ignored here, just for FE to remember the scroll position",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableIncomingReferencesVM"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableIncomingReferencesVM"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableIncomingReferencesVM"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/all-outgoing-references/{modelCode}/{tableCode}/{columnCode}": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Outgoing References of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "columnCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableOutgoingReferencesVM"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableOutgoingReferencesVM"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableOutgoingReferencesVM"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/all-source-columns/{modelCode}/{tableCode}/{columnCode}": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Source Columns of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "columnCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableSourceColumnsVM"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableSourceColumnsVM"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableSourceColumnsVM"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/all-target-columns/{modelCode}/{tableCode}/{columnCode}": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Target Columns of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "columnCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableTargetColumnsVM"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableTargetColumnsVM"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DTableTargetColumnsVM"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/column-details/{modelCode}/{tableCode}/{columnCode}": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get details of all Columns of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "columnCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTableColumnsVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTableColumnsVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTableColumnsVM"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/column/{modelCode}/{tableCode}/{columnCode}": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get Column detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "columnCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableColumnsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableColumnsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableColumnsVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/columns/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Columns of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableColumnsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableColumnsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableColumnsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableColumnsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableColumnsVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableColumnsVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableColumnsVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/description/{modelCode}/{tableCode}": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get Table detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableDescriptionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableDescriptionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableDescriptionVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/dg-table-relations-filters/{modelCode}/{tableCode}/{fieldName}": {
      "get": {
        "tags": [
          "DTable"
        ],
        "summary": "Get table relations (taken from MR Objects) select box filter values (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MrObjectRelationFilterVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MrObjectRelationFilterVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MrObjectRelationFilterVM"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/dg-table-relations/{fromObjectTypeIdsStr}/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get table relations (taken from MR Objects) - filtered by FromObjectTypeIds provided as string '101,102,103' (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromObjectTypeIdsStr",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/dg-table-relations/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get table relations (taken from MR Objects) (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/diagrams/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Diagrams of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableDiagramsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableDiagramsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableDiagramsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableDiagramsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableDiagramsVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableDiagramsVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableDiagramsVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/incoming-references/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Incoming References of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIncomingReferencesFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIncomingReferencesFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIncomingReferencesFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIncomingReferencesFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableIncomingReferencesVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableIncomingReferencesVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableIncomingReferencesVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/indexes/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Indexes of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIndexesFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIndexesFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIndexesFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableIndexesFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableIndexesVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableIndexesVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableIndexesVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/outgoing-references/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Outgoing Refernces of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableOutgoingReferencesFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableOutgoingReferencesFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableOutgoingReferencesFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableOutgoingReferencesFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableOutgoingReferencesVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableOutgoingReferencesVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableOutgoingReferencesVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/rules/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Rules of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableRulesFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableRulesFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableRulesFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableRulesFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableRulesVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableRulesVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableRulesVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/source-columns/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Source Columns of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceColumnsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceColumnsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceColumnsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceColumnsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableSourceColumnsVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableSourceColumnsVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableSourceColumnsVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/source-tables/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Source Tables of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceTablesFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceTablesFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceTablesFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableSourceTablesFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableSourceTablesVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableSourceTablesVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableSourceTablesVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/target-columns/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Target Columns of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetColumnsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetColumnsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetColumnsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetColumnsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetColumnsVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetColumnsVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetColumnsVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/target-report-items/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Target Report Items of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportItemsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportItemsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportItemsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportItemsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetReportItemsVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetReportItemsVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetReportItemsVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/target-reports/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Target Reports of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetReportsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetReportsVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetReportsVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetReportsVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/table/target-tables/{modelCode}/{tableCode}": {
      "post": {
        "tags": [
          "DTable"
        ],
        "summary": "Get all Target Tables of the Table (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetTablesFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetTablesFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetTablesFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTableTargetTablesFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetTablesVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetTablesVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTableTargetTablesVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/user/{userCode}/description": {
      "get": {
        "tags": [
          "DUser"
        ],
        "summary": "Get user info (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "userCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DUserDescriptionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DUserDescriptionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DUserDescriptionVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/user/{userCode}/models-owned-by": {
      "post": {
        "tags": [
          "DUser"
        ],
        "summary": "Get models where user is owner (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "userCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DUserOwnerInFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DUserOwnerInFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DUserOwnerInFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DUserOwnerInFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DUserOwnerInPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DUserOwnerInPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DUserOwnerInPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/user/description/{modelCode}/{userCode}": {
      "get": {
        "tags": [
          "DUser"
        ],
        "summary": "Get user info (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "userCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DUserDescriptionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DUserDescriptionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DUserDescriptionVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/user/models-owned-by/{modelCode}/{userCode}": {
      "post": {
        "tags": [
          "DUser"
        ],
        "summary": "Get models where user is owner (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "userCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DUserOwnerInFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DUserOwnerInFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DUserOwnerInFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DUserOwnerInFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DUserOwnerInPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DUserOwnerInPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DUserOwnerInPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary-user-defined-page": {
      "get": {
        "tags": [
          "DUserDefinedPage"
        ],
        "summary": "gets all used window definitions and its names (distinct) (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DUserDefinedPageSimplifiedVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DUserDefinedPageSimplifiedVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DUserDefinedPageSimplifiedVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary-user-defined-page/add": {
      "post": {
        "tags": [
          "DUserDefinedPage"
        ],
        "summary": "add new profile (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDefinedPageVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDefinedPageVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDefinedPageVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDefinedPageVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary-user-defined-page/delete/{profileName}/{windowDefinitionName}": {
      "post": {
        "tags": [
          "DUserDefinedPage"
        ],
        "summary": "delete profile (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "profileName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "windowDefinitionName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary-user-defined-page/filter": {
      "post": {
        "tags": [
          "DUserDefinedPage"
        ],
        "summary": "filter user defined pages (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DUserDefinedPageFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DUserDefinedPageFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DUserDefinedPageFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DUserDefinedPageFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDefinedPageVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDefinedPageVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDefinedPageVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/view/{viewCode}": {
      "get": {
        "tags": [
          "DView"
        ],
        "summary": "Get View detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viewCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DViewDetailVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DViewDetailVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DViewDetailVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/model/{modelCode}/view/{viewCode}/columns": {
      "post": {
        "tags": [
          "DView"
        ],
        "summary": "Get View Columns (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viewCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DViewColumnFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DViewColumnFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DViewColumnFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DViewColumnFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DViewColumnVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DViewColumnVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DViewColumnVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/view/columns/{modelCode}/{viewCode}": {
      "post": {
        "tags": [
          "DView"
        ],
        "summary": "Get View Columns (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viewCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DViewColumnFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DViewColumnFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DViewColumnFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DViewColumnFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DViewColumnVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DViewColumnVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DViewColumnVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/dictionary/view/description/{modelCode}/{viewCode}": {
      "get": {
        "tags": [
          "DView"
        ],
        "summary": "Get View detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viewCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DViewDetailVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DViewDetailVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DViewDetailVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/environment": {
      "put": {
        "tags": [
          "EnvConfiguration"
        ],
        "summary": " (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EnvPkgSettingsRootVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvPkgSettingsRootVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvPkgSettingsRootVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EnvPkgSettingsRootVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/environment/all": {
      "get": {
        "tags": [
          "EnvConfiguration"
        ],
        "summary": "Get all environment variables for FE",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          }
        }
      }
    },
    "/api/environment/export": {
      "post": {
        "tags": [
          "EnvConfiguration"
        ],
        "summary": " (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EnvPkgSettingsRootVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvPkgSettingsRootVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvPkgSettingsRootVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/environment/filter": {
      "post": {
        "tags": [
          "EnvConfiguration"
        ],
        "summary": "Filter (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EnvConfigurationFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvConfigurationFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvConfigurationFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EnvConfigurationFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EnvConfigurationVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvConfigurationVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvConfigurationVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/environment/profile-map": {
      "get": {
        "tags": [
          "EnvConfiguration"
        ],
        "summary": "Get ProfileMap",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DictionaryMapObjectVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DictionaryMapObjectVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DictionaryMapObjectVM"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/environment/reload-configuration": {
      "get": {
        "tags": [
          "EnvConfiguration"
        ],
        "summary": "Reload EnvConfiguration from DB and File (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/explorer/filter": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "Return path of the selected ExplorerItem (Auth policies: AnyRole, AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExplorerFilter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExplorerFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExplorerFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExplorerFilter"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExplorerVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExplorerVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExplorerVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/explorer/search": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "Searches ExplorerItem without restriction to one level (Auth policies: AnyRole, AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExplorerSearchFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExplorerSearchFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExplorerSearchFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExplorerSearchFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExplorerVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExplorerVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExplorerVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/external-data/import/job/{jobId}/add-data": {
      "post": {
        "tags": [
          "ExternalData"
        ],
        "summary": "Starts job of given jobId (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrImportDataBatchInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrImportDataBatchInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrImportDataBatchInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrImportDataBatchInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrImportJobVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrImportJobVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrImportJobVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/external-data/import/job/{jobId}/error": {
      "post": {
        "tags": [
          "ExternalData"
        ],
        "summary": "Gets paged errors of given jobId (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponsePagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponsePagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponsePagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/external-data/import/job/{jobId}/execute": {
      "post": {
        "tags": [
          "ExternalData"
        ],
        "summary": "Starts job of given jobId (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrImportJobVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrImportJobVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrImportJobVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/external-data/import/job/create": {
      "post": {
        "tags": [
          "ExternalData"
        ],
        "summary": "Creates job (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrImportJobInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrImportJobInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrImportJobInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrImportJobInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrImportJobVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrImportJobVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrImportJobVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/external-url/info": {
      "post": {
        "tags": [
          "ExternalUrl"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalUrlInfoIM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalUrlInfoIM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalUrlInfoIM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalUrlInfoIM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalUrlInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalUrlInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalUrlInfoVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/compare": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Get changes in diagram compared to DB (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphDiagramInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphDiagramInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphDiagramInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphDiagramInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphDiagramChangesVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphDiagramChangesVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphDiagramChangesVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/export/{nodeId}/incoming": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Exports excel incoming flow of chosen node",
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "accessToken",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/graph/export/{nodeId}/outgoing": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Exports excel outgoing flow of chosen node",
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "accessToken",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/graph/inner-flow": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Get inner flow of collapsed object (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InnerFlowInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InnerFlowInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InnerFlowInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InnerFlowInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/metamodel/{metamodelId}/relations/filter": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Get all allowed combinations (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "metamodelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphRObjectRelationFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphRObjectRelationFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphRObjectRelationFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphRObjectRelationFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphRObjectRelationFilterVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphRObjectRelationFilterVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphRObjectRelationFilterVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/metamodel/default-labels": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": " (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMetamodelDefaultLabelsVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMetamodelDefaultLabelsVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMetamodelDefaultLabelsVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/metamodel/filter": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Get graph metamodels (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphCMetamodelFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphCMetamodelFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphCMetamodelFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphCMetamodelFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMetamodelVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMetamodelVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMetamodelVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/node/search": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Find objects in direction (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphNodeSearchInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphNodeSearchInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphNodeSearchInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphNodeSearchInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeSearchVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeSearchVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeSearchVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/nodes/detail": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Get details of nodes and their hierarchical parents by nodeIds (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphNodeDetailInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphNodeDetailInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphNodeDetailInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphNodeDetailInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/object/{objectId}": {
      "put": {
        "tags": [
          "Graph"
        ],
        "summary": "Saves a diagram layout and generates relations\r\nbetween the object and objects in diagrams (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphDiagramLayoutInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphDiagramLayoutInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphDiagramLayoutInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphDiagramLayoutInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/object/{objectId}/export": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Get exported diagram (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphDiagramExportInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphDiagramExportInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphDiagramExportInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphDiagramExportInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphDiagramExportVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphDiagramExportVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphDiagramExportVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/object/{objectId}/metamodel/{metamodelId}/children": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Get all children of object (one level) (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metamodelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/object/{objectId}/metamodel/{metamodelId}/children-connections": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Get visible children of an object (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metamodelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphChildrenVisibleInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphChildrenVisibleInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphChildrenVisibleInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphChildrenVisibleInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphNodeVisibleVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphNodeVisibleVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphNodeVisibleVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/object/{objectId}/metamodel/{metamodelId}/detail": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Get detail of object and his hierarchical parents (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metamodelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/object/{objectId}/metamodel/{metamodelId}/incoming-relations": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Get incoming related objects and their parents (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metamodelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/object/{objectId}/metamodel/{metamodelId}/incoming-relations/depth/{depth}": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Get incoming related objects and their parents within the given depth (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metamodelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "depth",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/object/{objectId}/metamodel/{metamodelId}/outgoing-relations": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Get outgoing related objects and their parents (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metamodelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/object/{objectId}/metamodel/{metamodelId}/outgoing-relations/depth/{depth}": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Get outgoing related objects and their parents within the given depth (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metamodelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "depth",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/object/{objectId}/metamodel/{metamodelId}/relations": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Get all related objects and their parents within the given depth (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metamodelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "incomingDepth",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "outgoingDepth",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/object/{objectId}/metamodel/{metamodelId}/relations/depth/{depth}": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Get all related objects and their parents within the given depth (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "depth",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metamodelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/object/{objectId}/metamodel/{metamodelId}/relations/strategy/{strategy}": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Get related objects and their parents with some open strategy (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metamodelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "strategy",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/relations/strategy": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Get related objects and their parents with some open strategy (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FlowStrategyInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowStrategyInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowStrategyInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FlowStrategyInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/shortest-path": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Get shortest path between two nodes. Gets also relations of all new nodes with rest (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShortestPathInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShortestPathInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShortestPathInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShortestPathInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphObjectRelationsVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/source-leaves": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Get source leaves (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphFlowInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphFlowInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphFlowInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphFlowInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeLeafVMPagedGraphVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeLeafVMPagedGraphVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeLeafVMPagedGraphVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/subgraph/relations": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Get subgraph relations (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SubgraphRelationsInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubgraphRelationsInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubgraphRelationsInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubgraphRelationsInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphFlowToVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphFlowToVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphFlowToVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/graph/target-leaves": {
      "post": {
        "tags": [
          "Graph"
        ],
        "summary": "Get target leaves (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphFlowInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphFlowInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphFlowInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphFlowInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeLeafVMPagedGraphVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeLeafVMPagedGraphVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphMrNodeLeafVMPagedGraphVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/health/check": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "summary": "health check for service",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/help": {
      "get": {
        "tags": [
          "Help"
        ],
        "summary": "get application help (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelpVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelpVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelpVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Help"
        ],
        "summary": "edit application help (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HelpEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelpEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HelpEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HelpEditVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelpVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelpVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelpVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/check-index": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "check updated/deleted object in last 7 days in ES (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/create-index/{indexEnumKey}": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "Create ES index (\"All_Indices\" create all configured indices) (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "indexEnumKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/delete-index/{indexEnumKey}": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "Delete ES index (\"All_Indices\" delete all configured indices) (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "indexEnumKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/delete/{objectId}": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "delete MrObject from ES by ObjectId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/delete/data/{objectDataId}": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "delete MrObjectData from ES by ObjectDataId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "objectDataId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/delete/space/{spaceId}": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "delete MrObjects and MrSpace from ES by SpaceId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/delete/space/{spaceId}/application/{appId}/forced": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "delete MrObjects from ES by SpaceId and AppId - even if object are not deleted in MrObject (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/delete/space/{spaceId}/forced": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "delete MrObjects and MrSpace from ES by SpaceId - even if object are not deleted in MrObject (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/index": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "import all MeObject into ES (except DataDictionary objects) (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/index-space": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "import all MrSpace into ES (MrObject are not imported) (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/index-space/{spaceId}": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "import MrSpace into ES by SpaceId (MrObject are not imported) (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/index/{objectId}": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "import MrObject into ES by ObjectId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/index/model-changes/{modelCode}/{modelVersionId}": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "import Model Last Changes into ES by ModelCode (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelVersionId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/index/model/{modelCode}/{modelVersionId}": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "import MrObject into ES by ModelCode (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "modelCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelVersionId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/index/parent/{parentObjectId}": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "import MrObjects into ES by ParentObjectId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "parentObjectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/index/space/{spaceId}": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "import MrObjects into ES by SpaceId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/index/space/{spaceId}/application/{appId}": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "import MrObjects into ES by SpaceId and ApplicationId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/refresh-index": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "delete and recreate all indexes in ES and perform import all MrObjects and MrSpaces (Models data included) (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/indexer/refresh-index/{indexEnumKey}": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "summary": "delete and recreate index in ES and perform import all MrObjects and MrSpaces (Models data included) (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "indexEnumKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/data-integration/ingestion/{ingestionId}": {
      "get": {
        "tags": [
          "Ingestion"
        ],
        "summary": "get ingestion run by id",
        "parameters": [
          {
            "name": "ingestionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionOverviewVm"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionOverviewVm"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionOverviewVm"
                }
              }
            }
          }
        }
      }
    },
    "/api/data-integration/ingestion/{ingestionId}/log/severity-values": {
      "get": {
        "tags": [
          "Ingestion"
        ],
        "summary": "get possible severity values for filter by severity",
        "parameters": [
          {
            "name": "ingestionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionLogSeverityVmPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionLogSeverityVmPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionLogSeverityVmPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/data-integration/ingestion/filter": {
      "post": {
        "tags": [
          "Ingestion"
        ],
        "summary": "filter ingestion runs",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionOverviewVmPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionOverviewVmPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionOverviewVmPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/data-integration/ingestion/log/filter": {
      "post": {
        "tags": [
          "Ingestion"
        ],
        "summary": "start load to mr via worker async task (webhook address for cloud ingestion",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionLogFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionLogFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionLogFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionLogFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionLogOverviewVmPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionLogOverviewVmPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionLogOverviewVmPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/data-integration/ingestion/progress": {
      "post": {
        "tags": [
          "Ingestion"
        ],
        "summary": "filter ingestion runs",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionProgressInfoInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionProgressInfoInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionProgressInfoInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionProgressInfoInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionProgressInfoVm"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionProgressInfoVm"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionProgressInfoVm"
                }
              }
            }
          }
        }
      }
    },
    "/api/data-integration/ingestion/state-change": {
      "post": {
        "tags": [
          "Ingestion"
        ],
        "summary": "start load to mr via worker async task (webhook address for cloud ingestion",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CloudIngestionToMrInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudIngestionToMrInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudIngestionToMrInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CloudIngestionToMrInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/instance": {
      "get": {
        "tags": [
          "Instance"
        ],
        "summary": "Gets an instance info from the license service",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseServerInstanceInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseServerInstanceInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseServerInstanceInfoVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/instance/register": {
      "post": {
        "tags": [
          "Instance"
        ],
        "summary": "Assigns registration guid",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceIM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceIM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceIM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceIM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/jira/filter": {
      "post": {
        "tags": [
          "Jira"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JiraTaskInfoFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JiraTaskInfoFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JiraTaskInfoFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JiraTaskInfoFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JiraTaskInfoVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraTaskInfoVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraTaskInfoVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/language-translation": {
      "put": {
        "tags": [
          "LanguageTranslation"
        ],
        "summary": "batch create or edit translations (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationEditBatchVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationEditBatchVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationEditBatchVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationEditBatchVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/language-translation/{languageCode}/namespace/{languageNamespace}": {
      "get": {
        "tags": [
          "LanguageTranslation"
        ],
        "summary": "get translations for namespace",
        "parameters": [
          {
            "name": "languageCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languageNamespace",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "convertToLowercase",
            "in": "query",
            "description": "Should translation keys be converted to lowercase?",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          }
        }
      }
    },
    "/api/language-translation/filter": {
      "post": {
        "tags": [
          "LanguageTranslation"
        ],
        "summary": "filter translations",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CTranslationFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CTranslationFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CTranslationFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CTranslationFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CTranslationVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTranslationVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTranslationVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/language-translation/language": {
      "post": {
        "tags": [
          "LanguageTranslation"
        ],
        "summary": "create language (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageAddVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/language-translation/language/{languageId}/namespace/{namespaceId}": {
      "post": {
        "tags": [
          "LanguageTranslation"
        ],
        "summary": "create single translation (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "languageId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "namespaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "LanguageTranslation"
        ],
        "summary": "edit single translation (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "languageId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "namespaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationEditVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/language-translation/languages": {
      "get": {
        "tags": [
          "LanguageTranslation"
        ],
        "summary": "Get all languages",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/language-translation/namespace": {
      "post": {
        "tags": [
          "LanguageTranslation"
        ],
        "summary": "create namespace (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationNamespaceAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationNamespaceAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationNamespaceAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationNamespaceAddVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationNamespaceVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationNamespaceVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationNamespaceVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/language-translation/namespace/{namespaceId}/key/{keyName}": {
      "delete": {
        "tags": [
          "LanguageTranslation"
        ],
        "summary": "delete single translation (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "namespaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/language-translation/namespaces": {
      "get": {
        "tags": [
          "LanguageTranslation"
        ],
        "summary": "get all namespaces",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationNamespaceVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationNamespaceVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationNamespaceVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/license": {
      "get": {
        "tags": [
          "License"
        ],
        "summary": "returns backend licenses",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/master-data-hash": {
      "get": {
        "tags": [
          "MasterDataHash"
        ],
        "summary": "get all master data hashes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MasterDataHashVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterDataHashVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterDataHashVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/metadata/import/{importQueueId}": {
      "get": {
        "tags": [
          "MetadataImport"
        ],
        "summary": "get Metadata Import by ImportQueueId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "importQueueId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/metadata/import/{importQueueId}/cancel": {
      "get": {
        "tags": [
          "MetadataImport"
        ],
        "summary": "cancel Metadata Import Job (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "importQueueId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/metadata/import/{importQueueId}/finish-upload": {
      "get": {
        "tags": [
          "MetadataImport"
        ],
        "summary": "finish Metadata Import files upload (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "importQueueId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/metadata/import/{importQueueId}/start": {
      "get": {
        "tags": [
          "MetadataImport"
        ],
        "summary": "start Metadata Import Job (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "importQueueId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/metadata/import/create": {
      "post": {
        "tags": [
          "MetadataImport"
        ],
        "summary": "creates Metadata Import Job (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MDImportJobVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MDImportJobVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MDImportJobVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MDImportJobVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/metadata/import/script-definition": {
      "post": {
        "tags": [
          "MetadataImport"
        ],
        "summary": "get script definition by SourceUid (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MDScriptDefinitionVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MDScriptDefinitionVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MDScriptDefinitionVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MDScriptDefinitionVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MDScriptDefinitionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MDScriptDefinitionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MDScriptDefinitionVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/metadata/import/upload-item": {
      "post": {
        "tags": [
          "MetadataImport"
        ],
        "summary": "upload Metadata Import file (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MDImportJobVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/mr-application": {
      "get": {
        "tags": [
          "MrApplication"
        ],
        "summary": "Get all applications (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationWithSpaceVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationWithSpaceVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationWithSpaceVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-application/{appId}": {
      "get": {
        "tags": [
          "MrApplication"
        ],
        "summary": "Get application by id (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationDetailsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationDetailsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationDetailsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-application/{applicationId}/add-favourite": {
      "post": {
        "tags": [
          "MrApplication"
        ],
        "summary": "Add favourite application (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-application/{applicationId}/add-watched": {
      "post": {
        "tags": [
          "MrApplication"
        ],
        "summary": "Add watched application (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-application/{applicationId}/remove-favourite": {
      "delete": {
        "tags": [
          "MrApplication"
        ],
        "summary": "Remove favourite application (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-application/{applicationId}/remove-watched": {
      "delete": {
        "tags": [
          "MrApplication"
        ],
        "summary": "Removed watched application (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-application/count-filter": {
      "post": {
        "tags": [
          "MrApplication"
        ],
        "summary": "Get object count for applications (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationCountFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationCountFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationCountFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationCountFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationCountVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationCountVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationCountVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-application/filter": {
      "post": {
        "tags": [
          "MrApplication"
        ],
        "summary": "Filter applications (Auth policies: AnyRole, AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CApplicationFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-application/filter-available": {
      "post": {
        "tags": [
          "MrApplication"
        ],
        "summary": "Get available applications with any object (Auth policies: AnyRole, AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTableFilterInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTableFilterInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTableFilterInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTableFilterInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-application/in-space/filter": {
      "post": {
        "tags": [
          "MrApplication"
        ],
        "summary": "Filter applications in space (Auth policies: AnyRole, AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrApplicationInSpaceFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrApplicationInSpaceFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrApplicationInSpaceFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrApplicationInSpaceFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationInSpaceVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationInSpaceVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationInSpaceVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-application/space/{spaceId}": {
      "get": {
        "tags": [
          "MrApplication"
        ],
        "summary": "Get space applications (Auth policies: AnyRole, SpaceRead)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationWithWorkflowVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationWithWorkflowVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationWithWorkflowVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceRead"
            ]
          }
        ]
      }
    },
    "/api/mr-application/space/{spaceId}/application/{applicationId}/add-favourite": {
      "post": {
        "tags": [
          "MrApplication"
        ],
        "summary": "Add favourite application in space (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-application/space/{spaceId}/application/{applicationId}/add-watched": {
      "post": {
        "tags": [
          "MrApplication"
        ],
        "summary": "Add watched application in space (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-application/space/{spaceId}/application/{applicationId}/remove-favourite": {
      "delete": {
        "tags": [
          "MrApplication"
        ],
        "summary": "Remove favourite application in space (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-application/space/{spaceId}/application/{applicationId}/remove-watched": {
      "delete": {
        "tags": [
          "MrApplication"
        ],
        "summary": "Remove watched application in space (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-change-log/dependency/{objectDependencyChangeLogId}": {
      "put": {
        "tags": [
          "MrChangeLog"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectDependencyChangeLogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDependencyEditInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDependencyEditInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDependencyEditInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDependencyEditInputVM"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-change-log/dependency/filter": {
      "post": {
        "tags": [
          "MrChangeLog"
        ],
        "summary": "filter object dependency changes (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDependencyChangeFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDependencyChangeFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDependencyChangeFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDependencyChangeFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDependencyChangeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDependencyChangeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDependencyChangeVMPagedVM"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-change-log/filter": {
      "post": {
        "tags": [
          "MrChangeLog"
        ],
        "summary": "filter change logs (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrChangeLogFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrChangeLogFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrChangeLogFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrChangeLogFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrChangeLogVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrChangeLogVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrChangeLogVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-change-log/types": {
      "get": {
        "tags": [
          "MrChangeLog"
        ],
        "summary": "get change log types (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CChangeLogTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CChangeLogTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CChangeLogTypeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-comment": {
      "post": {
        "tags": [
          "MrComment"
        ],
        "summary": "create (Auth policies: AnyRole, NotGuest)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentAddInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentAddInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentAddInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentAddInputVM"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RawMrCommentVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawMrCommentVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawMrCommentVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "NotGuest"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/{commentId}": {
      "put": {
        "tags": [
          "MrComment"
        ],
        "summary": "edit comment (Auth policies: AnyRole, CommentEdit)",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentEditInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentEditInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentEditInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentEditInputVM"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RawMrCommentVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawMrCommentVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawMrCommentVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "CommentEdit"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MrComment"
        ],
        "summary": "delete comment (Auth policies: AnyRole, CommentWrite)",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "CommentWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/{commentId}/concept/{branchId}": {
      "put": {
        "tags": [
          "MrComment"
        ],
        "summary": "edit concept comment (Auth policies: AnyRole, CommentConceptWrite)",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentEditInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentEditInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentEditInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentEditInputVM"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RawMrCommentVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawMrCommentVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawMrCommentVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "CommentConceptWrite"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MrComment"
        ],
        "summary": "remove concept comment (Auth policies: AnyRole, CommentConceptWrite)",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "CommentConceptWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/{commentId}/concept/{branchId}/reaction/{reactionTypeId}": {
      "post": {
        "tags": [
          "MrComment"
        ],
        "summary": "add concept reaction (Auth policies: AnyRole, CommentConceptRead)",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reactionTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "CommentConceptRead"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MrComment"
        ],
        "summary": "remove concept reaction (Auth policies: AnyRole, CommentConceptRead)",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reactionTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "CommentConceptRead"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/{commentId}/concept/{branchId}/tag-user/{userId}": {
      "post": {
        "tags": [
          "MrComment"
        ],
        "summary": "tag user in concept comment (Auth policies: AnyRole, CommentConceptRead)",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "CommentConceptRead"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/{commentId}/reaction/{reactionTypeId}": {
      "post": {
        "tags": [
          "MrComment"
        ],
        "summary": "add reaction (Auth policies: AnyRole, CommentRead)",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reactionTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "CommentRead"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MrComment"
        ],
        "summary": "remove reaction (Auth policies: AnyRole, CommentRead)",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reactionTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "CommentRead"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/{commentId}/state/{stateId}": {
      "put": {
        "tags": [
          "MrComment"
        ],
        "summary": "edit comment state (Auth policies: AnyRole, NotGuest)",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stateId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "NotGuest"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/{commentId}/tag-user/{userId}": {
      "post": {
        "tags": [
          "MrComment"
        ],
        "summary": "tag user in comment (Auth policies: AnyRole, CommentRead)",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "CommentRead"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/concept/{branchId}": {
      "post": {
        "tags": [
          "MrComment"
        ],
        "summary": "create concept (Auth policies: AnyRole, NotGuest)",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentAddInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentAddInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentAddInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentAddInputVM"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RawMrCommentVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawMrCommentVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawMrCommentVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "NotGuest"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/filter": {
      "post": {
        "tags": [
          "MrComment"
        ],
        "summary": "filter (Auth policies: AnyRole)",
        "description": "There is special behaviour for filtering by TextValue:\r\nFilter by TextValue filters by comment TextValue OR name of the comment Creator",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrCommentFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/object/{objectId}/category/{categoryId}/selectable-comment-types": {
      "get": {
        "tags": [
          "MrComment"
        ],
        "summary": "get all available comment types to add (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentTypeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/object/{objectId}/comment-types": {
      "get": {
        "tags": [
          "MrComment"
        ],
        "summary": "get all comment types used in object comments (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentTypeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/object/{objectId}/filter": {
      "post": {
        "tags": [
          "MrComment"
        ],
        "summary": " (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCommentFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCommentFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCommentFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCommentFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectCommentWithReactionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectCommentWithReactionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectCommentWithReactionVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/object/{objectId}/states": {
      "get": {
        "tags": [
          "MrComment"
        ],
        "summary": "get all comment states used in object comments (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentWorkflowStateVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentWorkflowStateVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentWorkflowStateVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/object/{objectId}/version/{versionId}/comment-types": {
      "get": {
        "tags": [
          "MrComment"
        ],
        "summary": "get all comment types used in object comments (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentTypeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/object/{objectId}/version/{versionId}/filter": {
      "post": {
        "tags": [
          "MrComment"
        ],
        "summary": " (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCommentFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCommentFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCommentFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCommentFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectCommentWithReactionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectCommentWithReactionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectCommentWithReactionVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-comment/object/{objectId}/version/{versionId}/states": {
      "get": {
        "tags": [
          "MrComment"
        ],
        "summary": "get all comment states used in object comments in a specific version (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentWorkflowStateVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentWorkflowStateVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrCommentWorkflowStateVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-dynamic-hierarchy/{objectId}/path/level/{hierarchyLevelId}": {
      "post": {
        "tags": [
          "MrDynamicHierarchy"
        ],
        "summary": " (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hierarchyLevelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyPathInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyPathInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyPathInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyPathInputVM"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrDynamicHierarchyVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrDynamicHierarchyVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrDynamicHierarchyVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-dynamic-hierarchy/filter": {
      "post": {
        "tags": [
          "MrDynamicHierarchy"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrDynamicHierarchyVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrDynamicHierarchyVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrDynamicHierarchyVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-dynamic-hierarchy/search": {
      "post": {
        "tags": [
          "MrDynamicHierarchy"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrDynamicHierarchyVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrDynamicHierarchyVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrDynamicHierarchyVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-embedded-text/source-attribute/{sourceAttributeId}/target-attribute/{targetAttributeId}/status": {
      "get": {
        "tags": [
          "MrEmbeddedText"
        ],
        "summary": "Checks status before creating an embedding (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "sourceAttributeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "targetAttributeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrEmbeddedTextStatusVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrEmbeddedTextStatusVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrEmbeddedTextStatusVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-hybrid-hierarchy/{hierarchyId}/path": {
      "post": {
        "tags": [
          "MrHybridHierarchy"
        ],
        "summary": " (Auth policies: AnyRole, HierarchyRead)",
        "parameters": [
          {
            "name": "hierarchyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyPathInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyPathInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyPathInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrDynamicHierarchyPathInputVM"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrHybridHierarchyVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrHybridHierarchyVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrHybridHierarchyVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "HierarchyRead"
            ]
          }
        ]
      }
    },
    "/api/mr-hybrid-hierarchy/filter": {
      "post": {
        "tags": [
          "MrHybridHierarchy"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrHybridHierarchyFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrHybridHierarchyFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrHybridHierarchyFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrHybridHierarchyFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrHybridHierarchyVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrHybridHierarchyVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrHybridHierarchyVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-hybrid-hierarchy/search": {
      "post": {
        "tags": [
          "MrHybridHierarchy"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrHybridHierarchyFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrHybridHierarchyFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrHybridHierarchyFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrHybridHierarchyFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrHybridHierarchyVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrHybridHierarchyVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrHybridHierarchyVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-multirelation/filter": {
      "post": {
        "tags": [
          "MrMultirelation"
        ],
        "summary": "Filters multirelation. (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrMultirelationApiFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrMultirelationApiFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrMultirelationApiFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrMultirelationApiFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrMultirelationRowVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrMultirelationRowVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrMultirelationRowVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "create object (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectAddPrivatableInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectAddPrivatableInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectAddPrivatableInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectAddPrivatableInputVM"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "get object by id (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeHiddenSpace",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "MrObject"
        ],
        "summary": "edit object (Auth policies: AnyRole, ObjectWriteWithWorkflow)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectEditInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectEditInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectEditInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectEditInputVM"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWriteWithWorkflow"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MrObject"
        ],
        "summary": "delete object (Auth policies: AdminOrContributor, AnyRole, ObjectWriteWithWorkflow)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWriteWithWorkflow",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/add-dislike": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "add like (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/add-favourite": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "add favourite (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/add-like": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "add like (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/add-user-relation": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "Adds user object relation (Auth policies: AdminOrContributor, AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectAddUserRelationVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectAddUserRelationVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectAddUserRelationVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectAddUserRelationVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/add-user-relation-batch": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "Adds user object relation (Auth policies: AnyRole, ObjectWrite)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/add-watched": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "add watched (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/attribute-type/{attributeTypeId}": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "get latest attribute version (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attributeTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrAttributeLatestChangeVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrAttributeLatestChangeVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrAttributeLatestChangeVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "creates empty attribute (used in embedded texts) (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attributeTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrEmptyAttributeResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrEmptyAttributeResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrEmptyAttributeResultVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/attribute-type/{attributeTypeId}/version/{versionId}/revert": {
      "put": {
        "tags": [
          "MrObject"
        ],
        "summary": "Reverts attribute value to the previous version of the versionId (Auth policies: AnyRole, ObjectWriteWithWorkflow)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attributeTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWriteWithWorkflow"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/attribute-type/{attributeTypeId}/version/{versionId}/revert-preview": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "Get attribute revert preview before applying it (Auth policies: AnyRole, ObjectWriteWithWorkflow)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attributeTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectAttributeRevertPreviewVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectAttributeRevertPreviewVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectAttributeRevertPreviewVM"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWriteWithWorkflow"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/attribute/{attributeTypeId}": {
      "put": {
        "tags": [
          "MrObject"
        ],
        "summary": "edit single attribute (Auth policies: AnyRole, ObjectWriteWithWorkflow)",
        "description": "If you set attributeValueReferenceId the textValue is ignored and value will be taken from space or parent.\r\nReturns 409 if attribute was edited from sent last version id",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attributeTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrAttributeEditInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrAttributeEditInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrAttributeEditInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrAttributeEditInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWriteWithWorkflow"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/attribute/{attributeTypeId}/propagate": {
      "put": {
        "tags": [
          "MrObject"
        ],
        "summary": "propagate single attribute value to children (Auth policies: AnyRole, ObjectWriteWithWorkflow)",
        "description": "If you set attributeValueReferenceId the textValue is ignored and value will be taken from space.\r\nReturns 409 if attribute was edited from sent last version id",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attributeTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWriteWithWorkflow"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/attribute/{attributeTypeId}/references": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "get reference os an Attribute of an Object (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attributeTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EsKeyWordResultReferencePagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EsKeyWordResultReferencePagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EsKeyWordResultReferencePagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/changes/attribute-types": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "filter attribute types (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeSimpleVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeSimpleVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeSimpleVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/changes/filter": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "filter changes (Auth policies: AnyRole, ObjectRead)",
        "description": "Sort predicates: username, created",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectPropertyChangeFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectPropertyChangeFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectPropertyChangeFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectPropertyChangeFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectPropertyChangeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectPropertyChangeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectPropertyChangeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/changes/relation-types": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "filter object relations types (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeSimpleVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeSimpleVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeSimpleVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/changes/relationtypes": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "filter object relations types (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeSimpleVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeSimpleVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeSimpleVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/changes/user-object-relation-types": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "filter user relation types (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/changes/userobjectrelationtypes": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "filter user relation types (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/changes/users/filter": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "filter users that made a change to the object (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserSimpleFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserSimpleFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserSimpleFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserSimpleFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserSimpleVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserSimpleVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserSimpleVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/concept": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "create concept (Auth policies: AnyRole, ObjectReadWithoutViewer)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptAddVM"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectReadWithoutViewer"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/concept/{branchId}": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "get concept by id (Auth policies: AnyRole, ObjectConceptRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectConceptRead"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "MrObject"
        ],
        "summary": "edit concept (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptEditVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptVM"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MrObject"
        ],
        "summary": "delete concept (Auth policies: AdminOrContributor, AnyRole, ObjectConceptDelete)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor",
              "ObjectConceptDelete"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/concept/{branchId}/add-user-relation-batch": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "Adds user object relation (Auth policies: AnyRole, ObjectWrite)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/concept/{branchId}/apply": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "apply concept to source object (Auth policies: AnyRole, ObjectConceptApply)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectConceptApply"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/concept/{branchId}/approve": {
      "put": {
        "tags": [
          "MrObject"
        ],
        "summary": " (Auth policies: AnyRole, ObjectConceptApply)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectApproveConceptInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectApproveConceptInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectApproveConceptInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectApproveConceptInputVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectConceptApply"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/concept/{branchId}/attribute-type/{attributeTypeId}": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "get latest concept attribute version (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attributeTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrAttributeLatestChangeVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrAttributeLatestChangeVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrAttributeLatestChangeVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/concept/{branchId}/attribute/{attributeTypeId}": {
      "put": {
        "tags": [
          "MrObject"
        ],
        "summary": "edit concept attribute (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attributeTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrAttributeEditInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrAttributeEditInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrAttributeEditInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrAttributeEditInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/concept/{branchId}/decline": {
      "put": {
        "tags": [
          "MrObject"
        ],
        "summary": " (Auth policies: AnyRole, ObjectConceptApply)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDeclineConceptInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDeclineConceptInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDeclineConceptInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDeclineConceptInputVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectConceptApply"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/concept/{branchId}/remove-user-relation-batch": {
      "delete": {
        "tags": [
          "MrObject"
        ],
        "summary": "Delete user object relation (Auth policies: AdminOrContributor, AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/concept/{branchId}/search": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "search objects from concept\r\nIf filter by ExcludeObjectsWithAllPossibleDefinedRelationTypes\r\ndo not use Skip > 0 as it will not work correctly.\r\nIt is used recursion if all object are filtered by this filter item. (Auth policies: AnyRole, ObjectConceptRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectConceptRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/concept/{branchId}/send-to-approval": {
      "put": {
        "tags": [
          "MrObject"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSendToApprovalInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSendToApprovalInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSendToApprovalInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSendToApprovalInputVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/concept/{branchId}/tag-user/{userId}": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "tag user in concept description (Auth policies: AnyRole, ObjectConceptRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectConceptRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/edit-info": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "gets info about object (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHierarchyEditInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHierarchyEditInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHierarchyEditInfoVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/from-version/{fromVersionId}/to-version/{toVersionId}": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "get information if object changed between versions (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHasChangedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHasChangedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHasChangedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/last-version-before-delete": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "get object by id before delete (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/move": {
      "put": {
        "tags": [
          "MrObject"
        ],
        "summary": "move object in object hierarchy (Auth policies: AnyRole, ObjectWrite)",
        "description": "Set \"InsertBeforeObjectId\" to null to move the object to the end.\r\nThis also changes the way new objects are ordered. New objects will be added to the end.\r\nThis behaviour can be reverted by \"reorder\" endpoint",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMoveVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMoveVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMoveVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMoveVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/remove-dislike": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "remove dislike (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/remove-favourite": {
      "delete": {
        "tags": [
          "MrObject"
        ],
        "summary": "remove favourite (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/remove-like": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "remove like (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/remove-user-relation": {
      "delete": {
        "tags": [
          "MrObject"
        ],
        "summary": "Removes user object relation (Auth policies: AdminOrContributor, AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDeleteUserRelationVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDeleteUserRelationVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDeleteUserRelationVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDeleteUserRelationVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/remove-user-relation-batch": {
      "delete": {
        "tags": [
          "MrObject"
        ],
        "summary": "Delete user object relation (Auth policies: AdminOrContributor, AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectMultipleUserRelationVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/remove-watched": {
      "delete": {
        "tags": [
          "MrObject"
        ],
        "summary": "remove watched (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/replace-user-relation": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "Replace relation by userId (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MRObjectReplaceUserRelationVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRObjectReplaceUserRelationVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRObjectReplaceUserRelationVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MRObjectReplaceUserRelationVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/search": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "search objects\r\nIf filter by ExcludeObjectsWithAllPossibleDefinedRelationTypes\r\ndo not use Skip > 0 as it will not work correctly.\r\nIt is used recursion if all object are filtered by this filter item. (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/share": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "share object - sends notification to another users (Auth policies: AdminOrContributor, AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectShareVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectShareVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectShareVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectShareVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/state/{stateId}": {
      "put": {
        "tags": [
          "MrObject"
        ],
        "summary": "change object status (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stateId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectWorkflowStateEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectWorkflowStateEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectWorkflowStateEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectWorkflowStateEditVM"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoContentResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/sub-objects/filter": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "get subobjects for object (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSubObjectFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSubObjectFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSubObjectFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSubObjectFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSubObjectVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSubObjectVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSubObjectVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/tag-user/{userId}": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "tag user in object description (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/tooltip": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "get object tooltip (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectTooltipVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectTooltipVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectTooltipVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/user-relation-type/{userObjectRelationTypeId}/version/{versionId}/revert": {
      "put": {
        "tags": [
          "MrObject"
        ],
        "summary": "Reverts user relation value to the previous version of the versionId (Auth policies: AnyRole, ObjectWriteWithWorkflow)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userObjectRelationTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWriteWithWorkflow"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/user-relation-type/{userObjectRelationTypeId}/version/{versionId}/revert-preview": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "Get user relation revert preview before applying it (Auth policies: AnyRole, ObjectWriteWithWorkflow)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userObjectRelationTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectUserObjectRelationRevertPreviewVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectUserObjectRelationRevertPreviewVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectUserObjectRelationRevertPreviewVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWriteWithWorkflow"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/user-relation/{userObjectRelationTypeId}/propagate": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "Propagate userObjectRelation to children (Auth policies: AnyRole, ObjectWrite)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userObjectRelationTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/version/{version}": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "get object in specific version (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVersionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVersionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVersionVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/version/{versionId}/changes/attribute-types": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "filter attribute types (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeSimpleVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeSimpleVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeSimpleVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/version/{versionId}/changes/filter": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "filter changes (Auth policies: AnyRole, ObjectRead)",
        "description": "Sort predicates: username, created",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectPropertyChangeFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectPropertyChangeFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectPropertyChangeFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectPropertyChangeFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectPropertyChangeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectPropertyChangeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectPropertyChangeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/version/{versionId}/changes/relation-types": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "historical filter object relations types (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeSimpleVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeSimpleVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeSimpleVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/version/{versionId}/changes/relationtypes": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "historical filter object relations types (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeSimpleVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeSimpleVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeSimpleVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/version/{versionId}/changes/user-object-relation-types": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "historical filter of user relation types (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/version/{versionId}/changes/userobjectrelationtypes": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "historical filter of user relation types (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/version/{versionId}/changes/users/filter": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "filter users that made a change to the object (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserSimpleFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserSimpleFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserSimpleFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserSimpleFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserSimpleVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserSimpleVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserSimpleVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/version/{versionId}/last-version-before-delete": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "get object by id and version before delete (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVersionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVersionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVersionVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/{objectId}/version/{versionId}/sub-objects/filter": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "get subobjects for object (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSubObjectFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSubObjectFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSubObjectFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSubObjectFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSubObjectVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSubObjectVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSubObjectVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object/bulk-create-domains": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "create task for domains bulk create (Auth policies: AdminOrContributor, AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateDomainsInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateDomainsInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateDomainsInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateDomainsInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/mr-object/bulk-delete": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "create task for objects bulk delete (Auth policies: AdminOrContributor, AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectBulkDeleteInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectBulkDeleteInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectBulkDeleteInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectBulkDeleteInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/mr-object/bulk-edit": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "create task for objects bulk edit (Auth policies: AdminOrContributor, AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectBulkEditInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectBulkEditInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectBulkEditInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectBulkEditInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/mr-object/concept": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "create anonymous concept (Auth policies: AdminOrContributor, AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectAddInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectAddInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectAddInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectAddInputVM"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/mr-object/concepts-filter": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "filter concepts and exclude shared concepts (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptListApiFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptListApiFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptListApiFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptListApiFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptListVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptListVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptListVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/concepts-shared-filter": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "get shared concepts (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptListFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptListFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptListFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptListFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptListVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptListVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConceptListVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/conditional-search": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "search objects with conditional relations (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConditionalSearchFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConditionalSearchFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConditionalSearchFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConditionalSearchFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConditionalSearchVmPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConditionalSearchVmPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectConditionalSearchVmPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/customizable-overview-filter": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "An object overview for API Table (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCustomizableOverviewFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCustomizableOverviewFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCustomizableOverviewFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCustomizableOverviewFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectCustomizableOverviewVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectCustomizableOverviewVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectCustomizableOverviewVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/export-method": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "Get export method based on number of objects for given filter (threshold is set in settings) (Auth policies: AnyRole)",
        "description": "Returns object.export.method.direct for direct download, object.export.method.asynchronous for asynchronous\r\nexport",
        "requestBody": {
          "description": "Filter object",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectForExportFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectForExportFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectForExportFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectForExportFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResultVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/filter": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "filter (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/format/{formatId}/download": {
      "get": {
        "tags": [
          "MrObject"
        ],
        "summary": "Downloads objects",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "objectId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "objectIds",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortPredicate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reversedSort",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "parentObjectId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectTypeId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "statusId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "formatId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FormatTypeEnum"
            }
          },
          {
            "name": "accessToken",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/mr-object/format/{formatId}/export-async": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "Export objects in worker task (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "formatId",
            "in": "path",
            "description": "1: csv, 2: xlsx",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FormatTypeEnum"
            }
          }
        ],
        "requestBody": {
          "description": "Filter object",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectForExportFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectForExportFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectForExportFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectForExportFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/overview-filter": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "An object overview for API Table (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectApiFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectApiFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectApiFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectApiFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectApiVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectApiVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectApiVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/remove-sharing-concept": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "remove sharing (Auth policies: AdminOrContributor, AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptShareVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptShareVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptShareVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptShareVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/mr-object/search": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "search objects (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/search-data-dictionary": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "search object in data dictionary (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/search-data-governance": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "search object in data governance (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/search-duplicate-names": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "check if name is duplicate (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectSearchFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectSearchVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/share-concept": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "share concept (Auth policies: AdminOrContributor, AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptShareAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptShareAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptShareAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectConceptShareAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/mr-object/space/{spaceId}/application/{applicationId}/numbering": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": "refresh numbering children objects in objects hierarchy by sortOrder (Auth policies: AnyRole, SpaceWrite)",
        "description": "objectId == null will refresh numbering every hierarchy in instance of application in space.",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectNumberingVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectNumberingVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectNumberingVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectNumberingVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-object/space/{spaceId}/application/{applicationId}/reorder": {
      "put": {
        "tags": [
          "MrObject"
        ],
        "summary": "reorder children objects in objects hierarchy by alphabet (Auth policies: AnyRole, SpaceWrite)",
        "description": "New objects will not be ordered by this ordering.\r\n\"reorderAll\" will reorder every hierarchy in instance of application in space.",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectReorderVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectReorderVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectReorderVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectReorderVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-object/user-relation/filter": {
      "post": {
        "tags": [
          "MrObject"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RUserObjectRelationFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RUserObjectRelationFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RUserObjectRelationFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RUserObjectRelationFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MRObjectUserRelationVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRObjectUserRelationVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRObjectUserRelationVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-data/{objectId}/concept/{branchId}/file-name/{fileName}/verify-existence": {
      "get": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "checks if concept file already exists (Auth policies: AnyRole, ObjectConceptRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataCheckExistenceVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataCheckExistenceVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataCheckExistenceVM"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectConceptRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object-data/{objectId}/concept/{branchId}/file/{fileId}": {
      "put": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "Edits attachment info in concept (Auth policies: AnyRole, ObjectConceptRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataInputVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectConceptRead"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "delete concept file (Auth policies: AnyRole, ObjectConceptRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectConceptRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object-data/{objectId}/concept/{branchId}/file/{fileId}/binary": {
      "get": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "get binary for latest version of concept file",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/mr-object-data/{objectId}/concept/{branchId}/upload": {
      "post": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "upload concept file (Auth policies: AnyRole, ObjectWrite)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-object-data/{objectId}/diff/filter": {
      "post": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "get diff between two version (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataDiffFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataDiffFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataDiffFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataDiffFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataDiffVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataDiffVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataDiffVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object-data/{objectId}/file-name/{fileName}/verify-existence": {
      "get": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "checks if file already exists (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataCheckExistenceVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataCheckExistenceVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataCheckExistenceVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object-data/{objectId}/file/{fileId}": {
      "put": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "Edits attachment info in object (Auth policies: AnyRole, ObjectWriteWithWorkflow)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataInputVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWriteWithWorkflow"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "delete file (Auth policies: AnyRole, ObjectWriteWithWorkflow)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWriteWithWorkflow"
            ]
          }
        ]
      }
    },
    "/api/mr-object-data/{objectId}/file/{fileId}/binary": {
      "get": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "get binary for latest version of file",
        "description": "Use this also for concept objects by providing source object id.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/mr-object-data/{objectId}/file/{fileId}/version/{fileVersion}": {
      "get": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "get file info for specific version (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileVersion",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataStreamVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataStreamVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataStreamVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object-data/{objectId}/file/{fileId}/version/{startVersion}/binary": {
      "get": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "get binary data for file in specific version",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startVersion",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/mr-object-data/{objectId}/filter": {
      "post": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "filter file info (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object-data/{objectId}/upload": {
      "post": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "upload file (Auth policies: AnyRole, ObjectWriteWithWorkflow)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectWriteWithWorkflow"
            ]
          }
        ]
      }
    },
    "/api/mr-object-data/{objectId}/version/{versionId}/diff/filter": {
      "post": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "get diff between two version (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataDiffFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataDiffFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataDiffFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataDiffFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataDiffVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataDiffVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataDiffVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object-data/{objectId}/version/{versionId}/filter": {
      "post": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "filter file info (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object-data/copy": {
      "post": {
        "tags": [
          "MrObjectData"
        ],
        "summary": "Copy file from one document to another (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataCopyVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataCopyVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataCopyVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectDataCopyVM"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectDataVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-hierarchy/{objectId}/path": {
      "post": {
        "tags": [
          "MrObjectHierarchy"
        ],
        "summary": " (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectHierarchyPathInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectHierarchyPathInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectHierarchyPathInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectHierarchyPathInputVM"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHierarchyVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHierarchyVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHierarchyVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object-hierarchy/attribute-types": {
      "post": {
        "tags": [
          "MrObjectHierarchy"
        ],
        "summary": "get attribute types for given object ids (used in object export) (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectIdsInHierarchyInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectIdsInHierarchyInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectIdsInHierarchyInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectIdsInHierarchyInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CAttributeTypeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-hierarchy/export/{objectId}/document/{documentTypeEnumKey}": {
      "get": {
        "tags": [
          "MrObjectHierarchy"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "documentTypeEnumKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accessToken",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comparingVersion",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/mr-object-hierarchy/export/document/{documentTypeEnumKey}": {
      "post": {
        "tags": [
          "MrObjectHierarchy"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "documentTypeEnumKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StructuredDocumentExportOptions"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StructuredDocumentExportOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StructuredDocumentExportOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StructuredDocumentExportOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-hierarchy/filter": {
      "post": {
        "tags": [
          "MrObjectHierarchy"
        ],
        "summary": " (Auth policies: AnyRole, AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectHierarchyFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectHierarchyFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectHierarchyFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectHierarchyFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHierarchyVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHierarchyVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHierarchyVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-hierarchy/format/{formatId}/export-async": {
      "post": {
        "tags": [
          "MrObjectHierarchy"
        ],
        "summary": "Export objects in worker task (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "formatId",
            "in": "path",
            "description": "1: csv, 2: xlsx, 3: xlsx template, 4: word, 5: pdf",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FormatTypeEnum"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectExportInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectExportInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectExportInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectExportInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-hierarchy/relation-types": {
      "post": {
        "tags": [
          "MrObjectHierarchy"
        ],
        "summary": "Get relation types for given object ids (used in object export) (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectIdsInHierarchyInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectIdsInHierarchyInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectIdsInHierarchyInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectIdsInHierarchyInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-hierarchy/search": {
      "post": {
        "tags": [
          "MrObjectHierarchy"
        ],
        "summary": " (Auth policies: AnyRole, AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectHierarchyFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectHierarchyFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectHierarchyFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectHierarchyFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHierarchyVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHierarchyVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHierarchyVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-hierarchy/space/{spaceId}/application/{applicationId}": {
      "get": {
        "tags": [
          "MrObjectHierarchy"
        ],
        "summary": "get hierarchy (Auth policies: AnyRole, SpaceRead)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHierarchyVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHierarchyVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectHierarchyVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceRead"
            ]
          }
        ]
      }
    },
    "/api/mr-object-hierarchy/user-relation-types": {
      "post": {
        "tags": [
          "MrObjectHierarchy"
        ],
        "summary": "get user relation types for given object ids (used in object export) (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectIdsInHierarchyInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectIdsInHierarchyInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectIdsInHierarchyInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectIdsInHierarchyInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-hierarchy/import/{id}": {
      "get": {
        "tags": [
          "MrObjectHierarchyImport"
        ],
        "summary": "get space app import by id (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImportInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportInfoVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-hierarchy/import/import-excel": {
      "post": {
        "tags": [
          "MrObjectHierarchyImport"
        ],
        "summary": "import excel as object hierarchy (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportFileVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportFileVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportFileVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportFileVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-hierarchy/import/initialize-import-excel": {
      "post": {
        "tags": [
          "MrObjectHierarchyImport"
        ],
        "summary": "initialize import of excel as object hierarchy (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResponseResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResponseResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResponseResultVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-hierarchy/import/running": {
      "post": {
        "tags": [
          "MrObjectHierarchyImport"
        ],
        "summary": "get space app running import (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SpaceAppImportFilter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpaceAppImportFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SpaceAppImportFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SpaceAppImportFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImportInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportInfoVM"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/recommendations/customizable-overview-filter": {
      "post": {
        "tags": [
          "MrObjectRecommendation"
        ],
        "summary": "Primarily used with api-card component.\r\nMore customizable in comparison with a regular filter since first results are always the ones with 'recommended' checkbox set\r\nto true. (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCustomizableRecommendationFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCustomizableRecommendationFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCustomizableRecommendationFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCustomizableRecommendationFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectCusomizableRecommendationVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectCusomizableRecommendationVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectCusomizableRecommendationVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object/recommendations/filter": {
      "post": {
        "tags": [
          "MrObjectRecommendation"
        ],
        "summary": "Primarily used on the recommendation dashboard. It less customizable and relies solely on Dawiso AI recommendation engine. (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRecommendationFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRecommendationFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRecommendationFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRecommendationFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRecommendationVmPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRecommendationVmPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRecommendationVmPagedVM"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRecommendationVmPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRecommendationVmPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRecommendationVmPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation": {
      "post": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "create relation (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationAddInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationAddInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationAddInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationAddInputVM"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/{objectRelationId}": {
      "delete": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "delete relation (Auth policies: AnyRole, ObjectRelationWrite)",
        "parameters": [
          {
            "name": "objectRelationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationRemoveInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationRemoveInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationRemoveInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationRemoveInputVM"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRelationWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/{objectRelationId}/concept/{branchId}": {
      "delete": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "delete concept relation (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectRelationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationRemoveInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationRemoveInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationRemoveInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationRemoveInputVM"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/add-reference-relation": {
      "post": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "create reference relation (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationAddReferenceInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationAddReferenceInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationAddReferenceInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationAddReferenceInputVM"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/available-relations/{fromObjectId}/{toObjectId}": {
      "get": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "get available relations (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fromObjectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toObjectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableRelationsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableRelationsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableRelationsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/available-relations/concept/{branchId}/{fromObjectId}/{toObjectId}": {
      "get": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "get concept available relations (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromObjectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toObjectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableRelationsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableRelationsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableRelationsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/batch": {
      "post": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "create relations (batch) (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchAddInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchAddInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchAddInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchAddInputVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "delete relations (batch) (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchRemoveInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchRemoveInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchRemoveInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchRemoveInputVM"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/concept/{branchId}": {
      "post": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "create concept relation (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationAddInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationAddInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationAddInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationAddInputVM"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/concept/{branchId}/batch": {
      "post": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "create concept relation (batch) (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchAddInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchAddInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchAddInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchAddInputVM"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "delete concept relations (batch) (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchRemoveInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchRemoveInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchRemoveInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationBatchRemoveInputVM"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/concept/{branchId}/diff/filter": {
      "post": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "filter concept relations (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationConceptDiffFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationConceptDiffFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationConceptDiffFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationConceptDiffFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationConceptDiffVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationConceptDiffVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationConceptDiffVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/customizable-overview-filter": {
      "post": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "An object overview for API Table (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCustomizableOverviewFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCustomizableOverviewFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCustomizableOverviewFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectCustomizableOverviewFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectCustomizableOverviewVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectCustomizableOverviewVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectCustomizableOverviewVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/diff/filter": {
      "post": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "filter concept relations (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationVersionsDiffFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationVersionsDiffFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationVersionsDiffFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationVersionsDiffFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationVersionsDiffVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationVersionsDiffVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationVersionsDiffVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/enum": {
      "post": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "enum for relations (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrRelationEnumFilter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrRelationEnumFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrRelationEnumFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrRelationEnumFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrRelationEnum"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrRelationEnum"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrRelationEnum"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/filter": {
      "post": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "filter relations (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MRObjectRelationGroupedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRObjectRelationGroupedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRObjectRelationGroupedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/format/{formatId}/download": {
      "get": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "Downloads relations",
        "parameters": [
          {
            "name": "objectRelationIds",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formatId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FormatTypeEnum"
            }
          },
          {
            "name": "accessToken",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/mr-object-relation/inherit": {
      "post": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "inherit relations (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationInheritInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationInheritInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationInheritInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectRelationInheritInputVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/mr-object/{objectId}/propagate/{objectRelationTypeId}": {
      "post": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "Propagate object relation to children (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "objectRelationTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/mr-object/{objectId}/relation-type/{objectRelationTypeId}/version/{versionId}/revert": {
      "put": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "Reverts relation value to the previous version of the versionId (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "objectRelationTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/mr-object/{objectId}/relation-type/{objectRelationTypeId}/version/{versionId}/revert-preview": {
      "get": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "Get relation revert preview before applying it (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "objectRelationTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationRevertPreviewVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationRevertPreviewVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationRevertPreviewVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-relation/object/{objectId}/child-filter": {
      "post": {
        "tags": [
          "MrObjectRelation"
        ],
        "summary": "filters relations by parentObjectId and level (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectChildRelationsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectChildRelationsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectChildRelationsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectChildRelationsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationOptionalVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationOptionalVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectRelationOptionalVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-statistics/by-state": {
      "post": {
        "tags": [
          "MrObjectStatistics"
        ],
        "summary": "Returns object statistics in a particular space of an application\r\ngrouped by workflowState (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectStatisticsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectStatisticsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectStatisticsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectStatisticsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-statistics/by-type": {
      "post": {
        "tags": [
          "MrObjectStatistics"
        ],
        "summary": "Returns object statistics in a particular space of an application\r\ngrouped by objectType (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectStatisticsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectStatisticsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectStatisticsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectStatisticsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-statistics/general": {
      "post": {
        "tags": [
          "MrObjectStatistics"
        ],
        "summary": "Returns general statistics of objects (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectStatisticsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectStatisticsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectStatisticsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrObjectStatisticsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectGeneralStatisticsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectGeneralStatisticsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectGeneralStatisticsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-statistics/space/{spaceId}/application/{applicationId}/by-state": {
      "get": {
        "tags": [
          "MrObjectStatistics"
        ],
        "summary": "Returns object statistics in a particular space of an application\r\ngrouped by workflowState (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-object-statistics/space/{spaceId}/application/{applicationId}/by-type": {
      "get": {
        "tags": [
          "MrObjectStatistics"
        ],
        "summary": "Returns object statistics in a particular space of an application\r\ngrouped by objectType (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-permission-info/concept/{objectId}/user/{userId}": {
      "get": {
        "tags": [
          "MrPermissionInfo"
        ],
        "summary": "Get permission info for object concept (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrConceptPermissionInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrConceptPermissionInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrConceptPermissionInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/mr-permission-info/object/{objectId}/user/{userId}": {
      "get": {
        "tags": [
          "MrPermissionInfo"
        ],
        "summary": "Get permission info for object (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectPermissionInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectPermissionInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectPermissionInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/mr-permission-info/space/{spaceId}/app/{applicationId}/user/{userId}": {
      "get": {
        "tags": [
          "MrPermissionInfo"
        ],
        "summary": "Get permission info for space/app (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceAppPermissionInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceAppPermissionInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceAppPermissionInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/mr-permission-info/space/{spaceId}/user/{userId}": {
      "get": {
        "tags": [
          "MrPermissionInfo"
        ],
        "summary": "Get permission info for space (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpacePermissionInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpacePermissionInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpacePermissionInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/mr-raw-value/{valueKey}": {
      "put": {
        "tags": [
          "MrRawValue"
        ],
        "summary": "add or update raw value (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "valueKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrRawValueInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrRawValueInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrRawValueInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrRawValueInputVM"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/mr-raw-value/sub-type/{subTypeId}/entity-key/{entityKey}/value-key/{valueKey}": {
      "get": {
        "tags": [
          "MrRawValue"
        ],
        "summary": "get raw value of an application or a dashboard (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "subTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RawValueSubTypeEnum"
            }
          },
          {
            "name": "entityKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "valueKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrRawValueVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrRawValueVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrRawValueVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-setting/application/{applicationId}": {
      "get": {
        "tags": [
          "MrSetting"
        ],
        "summary": "get global settings (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSettingByLevelVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSettingByLevelVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSettingByLevelVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-setting/application/{applicationId}/setting/{settingId}": {
      "put": {
        "tags": [
          "MrSetting"
        ],
        "summary": "edit global application settings (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "settingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSettingEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSettingEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSettingEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSettingEditVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/mr-setting/application/{applicationId}/space/{spaceId}": {
      "get": {
        "tags": [
          "MrSetting"
        ],
        "summary": "get space settings (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSettingByLevelVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSettingByLevelVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSettingByLevelVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-setting/application/{applicationId}/space/{spaceId}/setting/{settingId}": {
      "put": {
        "tags": [
          "MrSetting"
        ],
        "summary": "edit space settings (Auth policies: AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "settingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSettingEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSettingEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSettingEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSettingEditVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-setting/user-object-relation-type": {
      "post": {
        "tags": [
          "MrSetting"
        ],
        "summary": "Creates a user object relation type (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserObjectRelationTypeAddInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserObjectRelationTypeAddInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserObjectRelationTypeAddInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserObjectRelationTypeAddInput"
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrUserObjectRelationTypeVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrUserObjectRelationTypeVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrUserObjectRelationTypeVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/mr-setting/user-object-relation-type/{userObjectRelationTypeId}": {
      "put": {
        "tags": [
          "MrSetting"
        ],
        "summary": "Edits a user object relation type (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "userObjectRelationTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserObjectRelationTypeEditInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserObjectRelationTypeEditInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserObjectRelationTypeEditInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserObjectRelationTypeEditInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MrSetting"
        ],
        "summary": "Deletes a user object relation type (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "userObjectRelationTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/mr-setting/user-object-relation-type/all": {
      "get": {
        "tags": [
          "MrSetting"
        ],
        "summary": "\\\r\n                Get all user object relation types (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrUserObjectRelationTypeFeaturesVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrUserObjectRelationTypeFeaturesVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrUserObjectRelationTypeFeaturesVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-setting/user-object-relation-type/filter": {
      "post": {
        "tags": [
          "MrSetting"
        ],
        "summary": "Filters user object relation types (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserRelationTypeFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserRelationTypeFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserRelationTypeFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserRelationTypeFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrUserObjectRelationTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrUserObjectRelationTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrUserObjectRelationTypeVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-snapshot": {
      "post": {
        "tags": [
          "MrSnapshot"
        ],
        "summary": "create. You need to provide VersionId or SnapshotDate (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSnapshotAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSnapshotAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSnapshotAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSnapshotAddVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSnapshotVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSnapshotVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSnapshotVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-snapshot/{snapshotId}": {
      "get": {
        "tags": [
          "MrSnapshot"
        ],
        "summary": "get by id (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSnapshotVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSnapshotVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSnapshotVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "MrSnapshot"
        ],
        "summary": "edit (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSnapshotEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSnapshotEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSnapshotEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSnapshotEditVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSnapshotVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSnapshotVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSnapshotVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MrSnapshot"
        ],
        "summary": "delete (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-snapshot/filter": {
      "post": {
        "tags": [
          "MrSnapshot"
        ],
        "summary": "filter (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSnapshotFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSnapshotFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSnapshotFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSnapshotFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSnapshotVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSnapshotVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSnapshotVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-space": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": "create space (Auth policies: AdminOrContributor, AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAddInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAddInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAddInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAddInputVM"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}": {
      "get": {
        "tags": [
          "MrSpace"
        ],
        "summary": "get by id (Auth policies: AnyRole, SpaceRead)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeHidden",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceRead"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "MrSpace"
        ],
        "summary": "edit space (Auth policies: AdminOrContributor, AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceEditInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceEditInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceEditInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceEditInputVM"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor",
              "SpaceWrite"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MrSpace"
        ],
        "summary": "delete space (Auth policies: AdminOrContributor, AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/add-application/{applicationId}": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": "add application to space (Auth policies: AdminOrContributor, AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/add-application/{applicationId}/workflow/{workflowId}": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": "add application to space with specific workflow (Auth policies: AdminOrContributor, AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "workflowId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/add-favourite": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": " (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/add-user-relation": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": " (Auth policies: AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceInputRelationVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceInputRelationVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceInputRelationVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceInputRelationVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/add-user-relation-batch": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": " (Auth policies: AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceBatchInputRelationVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceBatchInputRelationVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceBatchInputRelationVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceBatchInputRelationVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/add-watched": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": " (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/application/{applicationId}/info": {
      "get": {
        "tags": [
          "MrSpace"
        ],
        "summary": "get application info (Auth policies: AnyRole, SpaceRead)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceApplicationInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceApplicationInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceApplicationInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceRead"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/application/{applicationId}/tag-user/{userId}": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": "tag user in application description (Auth policies: AnyRole, SpaceRead)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceRead"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/attribute-type/{attributeTypeId}": {
      "get": {
        "tags": [
          "MrSpace"
        ],
        "summary": "get attribute (Auth policies: AnyRole, SpaceRead)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attributeTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceAttributeLatestChangeVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceAttributeLatestChangeVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceAttributeLatestChangeVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceRead"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/attribute/{attributeTypeId}": {
      "put": {
        "tags": [
          "MrSpace"
        ],
        "summary": "edit space attribute (Auth policies: AdminOrContributor, AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attributeTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceEditAttributeInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceEditAttributeInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceEditAttributeInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceEditAttributeInput"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/extended": {
      "get": {
        "tags": [
          "MrSpace"
        ],
        "summary": "get extended space (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceExtendedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceExtendedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceExtendedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/object-type/{objectTypeId}/attribute/{attributeTypeId}": {
      "put": {
        "tags": [
          "MrSpace"
        ],
        "summary": "edit attribute type for application in space (Auth policies: AdminOrContributor, AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "objectTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attributeTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceEditAttributeInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceEditAttributeInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceEditAttributeInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceEditAttributeInput"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/remove-application/{applicationId}": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": "remove application from space (Auth policies: AdminOrContributor, AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AdminOrContributor",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/remove-favourite": {
      "delete": {
        "tags": [
          "MrSpace"
        ],
        "summary": " (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/remove-user-relation": {
      "delete": {
        "tags": [
          "MrSpace"
        ],
        "summary": " (Auth policies: AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceInputRelationVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceInputRelationVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceInputRelationVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceInputRelationVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/remove-user-relation-batch": {
      "delete": {
        "tags": [
          "MrSpace"
        ],
        "summary": " (Auth policies: AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceBatchInputRelationVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceBatchInputRelationVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceBatchInputRelationVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceBatchInputRelationVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/remove-watched": {
      "delete": {
        "tags": [
          "MrSpace"
        ],
        "summary": " (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/replace-user-relation": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": " (Auth policies: AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceUpdateRelationVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceUpdateRelationVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceUpdateRelationVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MRSpaceUpdateRelationVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/request-access": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": "request access to space (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/subspace-object-count": {
      "get": {
        "tags": [
          "MrSpace"
        ],
        "summary": "get subspace object count for parent space (Auth policies: AnyRole, SpaceRead)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceRead"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/subspaces": {
      "get": {
        "tags": [
          "MrSpace"
        ],
        "summary": "get subspaces for space (Auth policies: AnyRole, SpaceRead)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceExtendedSubspaceVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceExtendedSubspaceVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceExtendedSubspaceVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceRead"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/tag-user/{userId}": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": "tag user in space description (Auth policies: AnyRole, SpaceRead)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceRead"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/tooltip": {
      "get": {
        "tags": [
          "MrSpace"
        ],
        "summary": "get object tooltip (Auth policies: AnyRole, SpaceRead)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceTooltipVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceTooltipVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceTooltipVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceRead"
            ]
          }
        ]
      }
    },
    "/api/mr-space/{spaceId}/user-relation/{userObjectRelationTypeId}/propagate": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": "Propagate userObjectRelation to objects in the space (Auth policies: AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userObjectRelationTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-space/application/{applicationId}/filter": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAttributeFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAttributeFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAttributeFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAttributeFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-space/extended/filter": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": "get extended root spaces (Auth policies: AnyRole, AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmptyFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmptyFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmptyFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmptyFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceExtendedVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceExtendedVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceExtendedVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-space/filter": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": "filter (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-space/icon": {
      "get": {
        "tags": [
          "MrSpace"
        ],
        "summary": "get all space icons (Auth policies: AnyRole, AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceIconVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceIconVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceIconVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-space/root": {
      "get": {
        "tags": [
          "MrSpace"
        ],
        "summary": "get root spaces (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrRootSpaceVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrRootSpaceVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrRootSpaceVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-space/user-relation/filter": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RUserSpaceRelationsFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RUserSpaceRelationsFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RUserSpaceRelationsFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RUserSpaceRelationsFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserSpaceVmPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserSpaceVmPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserSpaceVmPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-space/validate-name": {
      "post": {
        "tags": [
          "MrSpace"
        ],
        "summary": "validate space space (Auth policies: AnyRole, AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceValidateNameInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceValidateNameInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceValidateNameInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceValidateNameInputVM"
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-space-data/{spaceId}/file/{fileUUID}": {
      "get": {
        "tags": [
          "MrSpaceData"
        ],
        "summary": "Get file by id (Auth policies: AnyRole, SpaceRead)",
        "parameters": [
          {
            "name": "fileUUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceDataVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceDataVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceDataVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceRead"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MrSpaceData"
        ],
        "summary": "Delete file (Auth policies: AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileUUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-space-data/{spaceId}/file/{fileUUID}/binary": {
      "get": {
        "tags": [
          "MrSpaceData"
        ],
        "summary": "Downloads the file",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileUUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/mr-space-data/{spaceId}/file/filter": {
      "post": {
        "tags": [
          "MrSpaceData"
        ],
        "summary": "Gets all files for space (Auth policies: AnyRole, SpaceRead)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceDataFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceDataFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceDataFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceDataFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceDataVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceDataVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceDataVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceRead"
            ]
          }
        ]
      }
    },
    "/api/mr-space-data/{spaceId}/upload": {
      "post": {
        "tags": [
          "MrSpaceData"
        ],
        "summary": "Upload file for space (Auth policies: AnyRole, SpaceWrite)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceDataVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceDataVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceDataVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceWrite"
            ]
          }
        ]
      }
    },
    "/api/mr-space-data/file/{fileUUID}": {
      "get": {
        "tags": [
          "MrSpaceData"
        ],
        "summary": "Get file by id (Auth policies: AnyRole, SpaceRead)",
        "parameters": [
          {
            "name": "fileUUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceDataVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceDataVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceDataVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "SpaceRead"
            ]
          }
        ]
      }
    },
    "/api/mr-statistics/application-in-space/grouped-accessed-count": {
      "post": {
        "tags": [
          "MRStatistics"
        ],
        "summary": "Get access count of application grouped by days/weeks/months (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAppGroupedAccessCountFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAppGroupedAccessCountFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAppGroupedAccessCountFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAppGroupedAccessCountFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceApplicationGroupedStatisticsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceApplicationGroupedStatisticsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceApplicationGroupedStatisticsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-statistics/application/accessed-count": {
      "post": {
        "tags": [
          "MRStatistics"
        ],
        "summary": "Get access count of application (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationAccessCountFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationAccessCountFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationAccessCountFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationAccessCountFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-statistics/application/grouped-accessed-count": {
      "post": {
        "tags": [
          "MRStatistics"
        ],
        "summary": "Get access count of application grouped by days/weeks/months (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAppGroupedAccessCountFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAppGroupedAccessCountFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAppGroupedAccessCountFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAppGroupedAccessCountFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationGroupedStatisticsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationGroupedStatisticsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CApplicationGroupedStatisticsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-statistics/space/accessed-count": {
      "post": {
        "tags": [
          "MRStatistics"
        ],
        "summary": "Get access count of spaces (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAccessCountFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAccessCountFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAccessCountFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceAccessCountFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-statistics/space/grouped-accessed-count": {
      "post": {
        "tags": [
          "MRStatistics"
        ],
        "summary": "Get access count of spaces grouped by days/weeks/months (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceGroupedAccessCountFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceGroupedAccessCountFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceGroupedAccessCountFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrSpaceGroupedAccessCountFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceGroupedStatisticsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceGroupedStatisticsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrSpaceGroupedStatisticsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-version/{versionId}": {
      "get": {
        "tags": [
          "MrVersion"
        ],
        "summary": "get version by versionId (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrVersionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrVersionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrVersionVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-version/filter": {
      "post": {
        "tags": [
          "MrVersion"
        ],
        "summary": "filter (Auth policies: AnyRole)",
        "description": "If month and year is specified inside the filter, returns Next and Previous attributes.\r\nNext - first version in the following month.\r\nPrevious - last version in the previous month.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrVersionFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrVersionFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrVersionFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrVersionFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedVersionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedVersionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedVersionVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/mr-version/latest": {
      "post": {
        "tags": [
          "MrVersion"
        ],
        "summary": "Get latest version (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrVersionFilter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrVersionFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrVersionFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrVersionFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrVersionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrVersionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrVersionVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/package": {
      "post": {
        "tags": [
          "Package"
        ],
        "summary": "Creates a package (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBasicVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBasicVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBasicVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package/{packageId}": {
      "get": {
        "tags": [
          "Package"
        ],
        "summary": "Returns detailed package info (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Package"
        ],
        "summary": "Edits the package (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageInputVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Package"
        ],
        "summary": "Creates the package delete task (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package/{packageId}/clone": {
      "post": {
        "tags": [
          "Package"
        ],
        "summary": "Clones the package with prefix (clone) (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "description": "package to clone",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package/{packageKey}/exists": {
      "get": {
        "tags": [
          "Package"
        ],
        "summary": "Checks package existence (during creation or rename) (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "packageKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectExistenceVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectExistenceVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectExistenceVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package/filter": {
      "post": {
        "tags": [
          "Package"
        ],
        "summary": "Filters packages (packages overview) (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageOverviewFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageOverviewFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageOverviewFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageOverviewFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package/provider": {
      "get": {
        "tags": [
          "Package"
        ],
        "summary": "Get providers values (in all package versions) (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageProviderBasicVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageProviderBasicVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageProviderBasicVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package/export": {
      "post": {
        "tags": [
          "PackageExport"
        ],
        "summary": "Generates a package based on an Application Key (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageExportOptionsInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageExportOptionsInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageExportOptionsInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageExportOptionsInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PkgContentRootVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PkgContentRootVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PkgContentRootVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package/export/sql": {
      "post": {
        "tags": [
          "PackageExport"
        ],
        "summary": "Generates SQL scripts based on the input package (since it might be changed manually after an export)\r\n(rename script to prevent packageInstallOperation from adding duplicate assets and to replicate regular package installation)\r\n(asset mapping script to prevent adding the same rows to the DB (and fail on UC constraints) in packageInstallOperationTask\r\nand to replicate regular installation) (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": { }
            },
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PkgContentRootVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PkgContentRootVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PkgContentRootVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package-marketplace/category": {
      "get": {
        "tags": [
          "PackageMarketplace"
        ],
        "summary": "Returns a list of all package categories available in the marketplace (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplacePackageCategoryVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplacePackageCategoryVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplacePackageCategoryVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package-marketplace/icon/{marketplaceIconId}": {
      "get": {
        "tags": [
          "PackageMarketplace"
        ],
        "summary": "Get package icon from the marketplace by id",
        "parameters": [
          {
            "name": "marketplaceIconId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/package-marketplace/package": {
      "get": {
        "tags": [
          "PackageMarketplace"
        ],
        "summary": "Get packages from the marketplace (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplacePackageOverviewVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplacePackageOverviewVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplacePackageOverviewVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package-marketplace/package/{marketplacePackageId}/install": {
      "post": {
        "tags": [
          "PackageMarketplace"
        ],
        "summary": "Install a package from the marketplace (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "marketplacePackageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package-marketplace/package/{packageId}": {
      "delete": {
        "tags": [
          "PackageMarketplace"
        ],
        "summary": "Soft delete a package from the instance (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package-version": {
      "post": {
        "tags": [
          "PackageVersion"
        ],
        "summary": "Creates a package version (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVersionBasicVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVersionBasicVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVersionBasicVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package-version/{packageVersionId}": {
      "get": {
        "tags": [
          "PackageVersion"
        ],
        "summary": "Returns detailed packaged version information (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "packageVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVersionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVersionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVersionVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "PackageVersion"
        ],
        "summary": "Edits the package version (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "packageVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionEditInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionEditInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionEditInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionEditInputVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package-version/{packageVersionId}/applied-preview": {
      "get": {
        "tags": [
          "PackageVersion"
        ],
        "summary": "Returns a resolved package with applied changes. Used in patch packages.\r\nE.g. in the following package configuration 'core_A' => 'cust_patch_A1' => 'cust_patch_A2'\r\n- if packageVersionId latest version of 'cust_patch_A1' then the response will be 'core_A' with applied 'cust_patch_A1'\r\n- if packageVersionId latest version of 'cust_patch_A2' then the response will be 'core_A' with applied 'cust_patch_A1' and\r\n'cust_patch_A2' (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "packageVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageResolvedInfoVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageResolvedInfoVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageResolvedInfoVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package-version/{packageVersionId}/download": {
      "get": {
        "tags": [
          "PackageVersion"
        ],
        "summary": "Downloads the JSON content of the package version",
        "parameters": [
          {
            "name": "packageVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "accessToken",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/package-version/{packageVersionId}/install": {
      "post": {
        "tags": [
          "PackageVersion"
        ],
        "summary": "Creates a package install task (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "packageVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package-version/{packageVersionId}/rollback": {
      "post": {
        "tags": [
          "PackageVersion"
        ],
        "summary": "Creates a package rollback task (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "packageVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ResultVM"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package-version/package/{packageId}/filter": {
      "post": {
        "tags": [
          "PackageVersion"
        ],
        "summary": "Filters package versions (package versions overview) (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionOverviewFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionOverviewFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionOverviewFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionOverviewFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVersionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVersionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVersionVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package-version/swagger": {
      "get": {
        "tags": [
          "PackageVersion"
        ],
        "summary": "Package attributes for swagger schema (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PkgContentRootVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PkgContentRootVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PkgContentRootVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package-version/swagger-custom-components": {
      "get": {
        "tags": [
          "PackageVersion"
        ],
        "summary": "Package custom components for swagger schema (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageSwaggerCustomComponentsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageSwaggerCustomComponentsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageSwaggerCustomComponentsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/package-version-issue/version/{packageVersionId}/filter": {
      "post": {
        "tags": [
          "PackageVersionIssue"
        ],
        "summary": "Filters package version issues (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "packageVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionIssueFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionIssueFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionIssueFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PackageVersionIssueFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVersionIssueVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVersionIssueVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageVersionIssueVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/page": {
      "get": {
        "tags": [
          "Page"
        ],
        "summary": "get all pages (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CPageVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CPageVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CPageVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/page/{enumKey}": {
      "get": {
        "tags": [
          "Page"
        ],
        "summary": "get page detail (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "enumKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CPagePersonalVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CPagePersonalVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CPagePersonalVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/page/{enumKey}/value/{valueKey}": {
      "put": {
        "tags": [
          "Page"
        ],
        "summary": "set page value (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "enumKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "valueKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrRawValueInputObsoleteVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrRawValueInputObsoleteVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrRawValueInputObsoleteVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrRawValueInputObsoleteVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CPagePersonalVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CPagePersonalVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CPagePersonalVM"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/page/{pageEnumKey}/add-favourite": {
      "post": {
        "tags": [
          "Page"
        ],
        "summary": "Add favourite page (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "pageEnumKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/page/{pageEnumKey}/add-watched": {
      "post": {
        "tags": [
          "Page"
        ],
        "summary": "Add watched page (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "pageEnumKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/page/{pageEnumKey}/remove-favourite": {
      "delete": {
        "tags": [
          "Page"
        ],
        "summary": "Remove favourite page (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "pageEnumKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/page/{pageEnumKey}/remove-watched": {
      "delete": {
        "tags": [
          "Page"
        ],
        "summary": "Removed watched page (Auth policies: AnyRole, AnyRole)",
        "parameters": [
          {
            "name": "pageEnumKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/relation-type": {
      "get": {
        "tags": [
          "RelationType"
        ],
        "summary": "get all relation types as PagedVM",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeFeaturesVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeFeaturesVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRelationTypeFeaturesVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/r-object-attribute": {
      "post": {
        "tags": [
          "RObjectAttribute"
        ],
        "summary": "Add object attribute for object type (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectAttributeAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectAttributeAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectAttributeAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectAttributeAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "RObjectAttribute"
        ],
        "summary": "delete object attribute for object type (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectAttributeDeleteVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectAttributeDeleteVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectAttributeDeleteVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectAttributeDeleteVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/r-object-in-application": {
      "post": {
        "tags": [
          "RObjectInApplication"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectInApplicationAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectInApplicationAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectInApplicationAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectInApplicationAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "RObjectInApplication"
        ],
        "summary": "delete connection between object type application (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectInApplicationDeleteVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectInApplicationDeleteVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectInApplicationDeleteVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectInApplicationDeleteVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/r-object-relation-type": {
      "post": {
        "tags": [
          "RObjectRelationType"
        ],
        "summary": "add relation type (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeAddVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RObjectRelationTypeVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RObjectRelationTypeVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RObjectRelationTypeVM"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "RObjectRelationType"
        ],
        "summary": "edit relation type (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeEditVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/r-object-relation-type/delete": {
      "delete": {
        "tags": [
          "RObjectRelationType"
        ],
        "summary": "delete relation type (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeDeleteVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeDeleteVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeDeleteVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeDeleteVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/r-object-relation-type/filter": {
      "post": {
        "tags": [
          "RObjectRelationType"
        ],
        "summary": "get relation types by filter as pagedVM",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RObjectRelationTypeFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RObjectRelationTypeVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RObjectRelationTypeVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RObjectRelationTypeVMPagedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/r-user-tour-step/filter": {
      "post": {
        "tags": [
          "RUserTourStep"
        ],
        "summary": "filter (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RUserTourStepFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RUserTourStepFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RUserTourStepFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RUserTourStepFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RUserTourStepVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RUserTourStepVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RUserTourStepVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/r-user-tour-step/reset": {
      "post": {
        "tags": [
          "RUserTourStep"
        ],
        "summary": "reset tour steps (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RUserTourStepCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RUserTourStepCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RUserTourStepCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RUserTourStepCreate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/r-user-tour-step/state/{tourStepStateId}": {
      "post": {
        "tags": [
          "RUserTourStep"
        ],
        "summary": "change user's state in tour step (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "tourStepStateId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CTourStepStateEnum"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RUserTourStepCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RUserTourStepCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RUserTourStepCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RUserTourStepCreate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/external/sample-data-columns/{objectId}": {
      "get": {
        "tags": [
          "SampleData"
        ],
        "summary": "get columns of Sample Data by ObjectId",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnDefVMPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnDefVMPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnDefVMPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/sample-data-raw/{objectId}": {
      "get": {
        "tags": [
          "SampleData"
        ],
        "summary": "get all SampleData for a Table ObjectId",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringDictionaryPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringDictionaryPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringDictionaryPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/sample-data/{objectId}": {
      "post": {
        "tags": [
          "SampleData"
        ],
        "summary": "get rows of Sample Data by ObjectId",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": { }
            },
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectPagedVMc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectPagedVMc"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectPagedVMc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/fulltextsearch": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "filter full text search (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FullTextSearchRequestModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FullTextSearchRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FullTextSearchRequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FullTextSearchRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FullTextSearchResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullTextSearchResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullTextSearchResultVM"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/fulltextsearch/{fulltextSearchId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "get searchResult by fulltextSearchId (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fulltextSearchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FullTextSearchResultVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullTextSearchResultVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullTextSearchResultVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/fulltextsearch/codelist-filters": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "get codelist filters (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FulltextSearchFilterPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FulltextSearchFilterPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FulltextSearchFilterPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/fulltextsearch/external/{extSourceIdent}/{uniqueIdentifier}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "get external item by id (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "extSourceIdent",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uniqueIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/hierarchy-definition/space/{spaceId}/app/{applicationId}/all": {
      "get": {
        "tags": [
          "SpaceApplicationHierarchyDefinition"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HierarchyDefinitionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HierarchyDefinitionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HierarchyDefinitionVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/sql-external": {
      "post": {
        "tags": [
          "SqlExternal"
        ],
        "summary": "Filters data from external databases",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SqlExternalRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SqlExternalRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SqlExternalRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SqlExternalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringObjectDictionaryPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringObjectDictionaryPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringObjectDictionaryPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sql-external/execute/form": {
      "post": {
        "tags": [
          "SqlExternal"
        ],
        "summary": "Executes custom form creation",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SqlApiFormActionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SqlApiFormActionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SqlApiFormActionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SqlApiFormActionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/sql-external/execute/pipeline/{pipelineKey}/activity/{activityKey}": {
      "post": {
        "tags": [
          "SqlExternal"
        ],
        "summary": "Executes custom logic stored in pipeline",
        "parameters": [
          {
            "name": "pipelineKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activityKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": { }
            },
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalJobRunVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalJobRunVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalJobRunVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sql-external/statistic/{externalDataKey}": {
      "post": {
        "tags": [
          "SqlExternal"
        ],
        "summary": "sql external statistic",
        "parameters": [
          {
            "name": "externalDataKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": { }
            },
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sql-external/statistics/{externalDataKey}": {
      "post": {
        "tags": [
          "SqlExternal"
        ],
        "summary": "sql external statistics",
        "parameters": [
          {
            "name": "externalDataKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": { }
            },
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrObjectStatisticsVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/task/{taskId}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get task by TaskId (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/task/can-run": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Check if PWD_OPERATION tasks can run (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/task/cancel": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Cancel tasks as User (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskListVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskListVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskListVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskListVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/task/cancel/as-admin": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Cancel tasks as Admin (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskListVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskListVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskListVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskListVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/task/create-and-send/{taskType}/{modelVersionId}": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Create App Task and send message to queue (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "taskType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TaskTypeEnum"
            }
          },
          {
            "name": "modelVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AdditionalParameterVM"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AdditionalParameterVM"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AdditionalParameterVM"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AdditionalParameterVM"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVMActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVMActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVMActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/task/create/{taskType}": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Create App Task (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "taskType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TaskTypeEnum"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AdditionalParameterVM"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AdditionalParameterVM"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AdditionalParameterVM"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AdditionalParameterVM"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVMActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVMActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVMActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/task/detail/{taskId}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get task detail by TaskId (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskModelVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskModelVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskModelVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/task/filter": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Get all tasks (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppTaskModelFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppTaskModelFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppTaskModelFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppTaskModelFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskModelVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskModelVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskModelVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/task/logs/{taskId}": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Get task by TaskId (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppTaskPhaseLogFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppTaskPhaseLogFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppTaskPhaseLogFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppTaskPhaseLogFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskPhasePhaseLogVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskPhasePhaseLogVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskPhasePhaseLogVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/task/queue/add/{taskId}": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Send message to queue (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/task/refresh": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Refresh task (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppTaskModelVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppTaskModelVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppTaskModelVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppTaskModelVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/task/start": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Start waiting PWD_OPERATION tasks (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/task/stop": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Stop PWD_OPERATION tasks (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResult"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/template/object-type/{objectTypeId}": {
      "get": {
        "tags": [
          "Template"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "objectTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MainOutputTemplate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainOutputTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainOutputTemplate"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/template/refresh": {
      "post": {
        "tags": [
          "Template"
        ],
        "summary": "refresh templates (Auth policies: OnlyAdmin)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateRefreshVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateRefreshVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateRefreshVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateRefreshVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/template/templates": {
      "get": {
        "tags": [
          "Template"
        ],
        "summary": "get templates (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplatesVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplatesVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplatesVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/text-editor/chat": {
      "post": {
        "tags": [
          "TextEditor"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TextEditorAiInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextEditorAiInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TextEditorAiInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TextEditorAiInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TextEditorAiMessageVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextEditorAiMessageVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextEditorAiMessageVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/text-editor/section": {
      "get": {
        "tags": [
          "TextEditor"
        ],
        "summary": "Get AI menu sections (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TextEditorAiSectionsVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextEditorAiSectionsVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextEditorAiSectionsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/tokenizer/refreshkeywords": {
      "get": {
        "tags": [
          "Tokenizer"
        ],
        "summary": "tokenize keyWords and text of all objects (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tokenizer/tokenize": {
      "get": {
        "tags": [
          "Tokenizer"
        ],
        "summary": "tokenize keyWords of all objects (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tokenizer/tokenize/{objectId}": {
      "get": {
        "tags": [
          "Tokenizer"
        ],
        "summary": "tokenize keyWords of selected object by ObjectId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tokenizer/tokenize/app/{appId}": {
      "get": {
        "tags": [
          "Tokenizer"
        ],
        "summary": "tokenize keyWords of selected objects by ApplicationId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tokenizer/tokenize/space/{spaceId}": {
      "get": {
        "tags": [
          "Tokenizer"
        ],
        "summary": "tokenize keyWords of selected objects by SpaceId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tokenizer/tokenize/space/{spaceId}/app/{appId}": {
      "get": {
        "tags": [
          "Tokenizer"
        ],
        "summary": "tokenize keyWords of selected objects by SpaceId and AppId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tokenizer/tokenize/text": {
      "get": {
        "tags": [
          "Tokenizer"
        ],
        "summary": "tokenize texts of all objects (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tokenizer/tokenize/text/{objectId}": {
      "get": {
        "tags": [
          "Tokenizer"
        ],
        "summary": "tokenize texts of the selected object by ObjectId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tokenizer/tokenize/text/app/{appId}": {
      "get": {
        "tags": [
          "Tokenizer"
        ],
        "summary": "tokenize texts of the selected objects by ApplicationId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tokenizer/tokenize/text/space/{spaceId}": {
      "get": {
        "tags": [
          "Tokenizer"
        ],
        "summary": "tokenize texts of the selected objects by SpaceId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tokenizer/tokenize/text/space/{spaceId}/app/{appId}": {
      "get": {
        "tags": [
          "Tokenizer"
        ],
        "summary": "tokenize texts of the selected objects by SpaceId and AppId (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTaskVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tour": {
      "post": {
        "tags": [
          "Tour"
        ],
        "summary": "create (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TourCreateVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TourCreateVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TourCreateVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TourCreateVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TourVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourVM"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tour/{tourId}": {
      "get": {
        "tags": [
          "Tour"
        ],
        "summary": "get by id (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "tourId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TourVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Tour"
        ],
        "summary": "edit (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "tourId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TourEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TourEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TourEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TourEditVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TourVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Tour"
        ],
        "summary": "delete (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "tourId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tour/{tourId}/clone": {
      "post": {
        "tags": [
          "Tour"
        ],
        "summary": "clone (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "tourId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TourVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tour/filter": {
      "post": {
        "tags": [
          "Tour"
        ],
        "summary": "filter (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TourFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TourFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TourFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TourFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TourVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/tour-step/{tourStepId}": {
      "get": {
        "tags": [
          "TourStep"
        ],
        "summary": "get by id (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "tourStepId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepDetailVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepDetailVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepDetailVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "TourStep"
        ],
        "summary": "edit (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "tourStepId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TourStepEditVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TourStepEditVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TourStepEditVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TourStepEditVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "TourStep"
        ],
        "summary": "delete (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "tourStepId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tour-step/{tourStepId}/clone": {
      "post": {
        "tags": [
          "TourStep"
        ],
        "summary": "clone (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "tourStepId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepDetailVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepDetailVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepDetailVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tour-step/{tourStepId}/order/{newOrder}": {
      "put": {
        "tags": [
          "TourStep"
        ],
        "summary": "order (Auth policies: OnlyAdmin)",
        "description": "if you have A = 1, B = 2, C = 3, D = 4\r\nand move B to 4\r\nnew order is\r\nA = 1, C = 2, D = 3, B = 4\r\nif you have A = 1, B = 2, C = 3, D = 4\r\nand move C to 1\r\nnew order is\r\nC = 1, A = 2, B = 3, D = 4",
        "parameters": [
          {
            "name": "tourStepId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "newOrder",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tour-step/filter": {
      "post": {
        "tags": [
          "TourStep"
        ],
        "summary": "filter (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TourStepFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TourStepFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TourStepFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TourStepFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepDetailVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepDetailVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepDetailVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/tour-step/tour/{tourId}": {
      "post": {
        "tags": [
          "TourStep"
        ],
        "summary": "create (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "tourId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TourStepCreateVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TourStepCreateVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TourStepCreateVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TourStepCreateVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepVM"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tour-step-value-data/{tourId}/upload": {
      "post": {
        "tags": [
          "TourStepValueData"
        ],
        "summary": "upload file (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "tourId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepValueDataVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepValueDataVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourStepValueDataVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/tour-step-value-data/{tourStepValueDataId}": {
      "delete": {
        "tags": [
          "TourStepValueData"
        ],
        "summary": "delete file (Auth policies: ObjectWriteWithWorkflow, OnlyAdmin)",
        "parameters": [
          {
            "name": "tourStepValueDataId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin",
              "ObjectWriteWithWorkflow"
            ]
          }
        ]
      }
    },
    "/api/tour-step-value-data/{tourStepValueDataId}/binary": {
      "get": {
        "tags": [
          "TourStepValueData"
        ],
        "summary": "get binary of file",
        "parameters": [
          {
            "name": "tourStepValueDataId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/user-behaviour/application-visited": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedApplicationAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedApplicationAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedApplicationAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedApplicationAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/application/most-visited": {
      "get": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedApplicationVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedApplicationVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedApplicationVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/application/user-most-visited": {
      "get": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedApplicationVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedApplicationVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedApplicationVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/dictionary-route-changed": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedDictionaryAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedDictionaryAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedDictionaryAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedDictionaryAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/dictionary-searched": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchedDictionaryAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchedDictionaryAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchedDictionaryAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchedDictionaryAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/last-search": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UbFulltextSearchFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UbFulltextSearchFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UbFulltextSearchFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UbFulltextSearchFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UbFulltextSearchVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UbFulltextSearchVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UbFulltextSearchVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/last-search/{fulltextSearchedId}": {
      "delete": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fulltextSearchedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/last-visited-objects": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UbVisitedObjectFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UbVisitedObjectFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UbVisitedObjectFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UbVisitedObjectFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UbVisitedObjectVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UbVisitedObjectVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UbVisitedObjectVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/last-visited-objects/overview-filter": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UbLastVisitedObjectOverviewFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UbLastVisitedObjectOverviewFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UbLastVisitedObjectOverviewFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UbLastVisitedObjectOverviewFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UbLastVisitedObjectOverviewVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UbLastVisitedObjectOverviewVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UbLastVisitedObjectOverviewVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/most-visited": {
      "get": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedDictionaryVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedDictionaryVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedDictionaryVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/object-searched": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchedObjectInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchedObjectInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchedObjectInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchedObjectInputVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/object-visited": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedObjectAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedObjectAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedObjectAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedObjectAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/object/last-visited": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UbLastVisitedObjectFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UbLastVisitedObjectFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UbLastVisitedObjectFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UbLastVisitedObjectFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UbLastVisitedObjectVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UbLastVisitedObjectVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UbLastVisitedObjectVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/object/most-visited": {
      "get": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedObjectVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedObjectVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedObjectVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/object/most-visited/filter": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": "Visited object (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UbVisitedObjectsPeriodFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UbVisitedObjectsPeriodFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UbVisitedObjectsPeriodFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UbVisitedObjectsPeriodFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedObjectVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedObjectVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedObjectVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/object/user-most-visited": {
      "get": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedObjectVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedObjectVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedObjectVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/search-filter": {
      "put": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": "save search filter (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UbSavedSearchFilterAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UbSavedSearchFilterAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UbSavedSearchFilterAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UbSavedSearchFilterAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/search-filter/{formId}/{filterKey}": {
      "delete": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": "delete search filter (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/search-filter/filter": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": "get saved search filters (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UbSavedSearchFilterFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UbSavedSearchFilterFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UbSavedSearchFilterFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UbSavedSearchFilterFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UbSavedSearchFilterVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UbSavedSearchFilterVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UbSavedSearchFilterVMPagedVM"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DawisoErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/space-application-visited": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedSpaceApplicationAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedSpaceApplicationAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedSpaceApplicationAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedSpaceApplicationAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/space-application-visited/filter": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UbVisitedApplicationSpaceFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UbVisitedApplicationSpaceFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UbVisitedApplicationSpaceFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UbVisitedApplicationSpaceFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UbVisitedSpaceApplicationVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UbVisitedSpaceApplicationVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UbVisitedSpaceApplicationVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/space-application/most-visited": {
      "get": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedSpaceApplicationVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedSpaceApplicationVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedSpaceApplicationVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/space-application/user-most-visited": {
      "get": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedSpaceApplicationVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedSpaceApplicationVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedSpaceApplicationVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/space-searched": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchedObjectInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchedObjectInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchedObjectInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchedObjectInputVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/space-visited": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedSpaceAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedSpaceAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedSpaceAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedSpaceAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/space/most-visited": {
      "get": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedSpaceVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedSpaceVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedSpaceVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/space/user-most-visited": {
      "get": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedSpaceVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedSpaceVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedSpaceVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/term/most-searched/filter": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": "Visited object (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UbMostSearchedTermFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UbMostSearchedTermFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UbMostSearchedTermFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UbMostSearchedTermFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UbSearchedTermsForPeriodVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UbSearchedTermsForPeriodVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UbSearchedTermsForPeriodVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/url-changed": {
      "post": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedUrlAddVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedUrlAddVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedUrlAddVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VisitedUrlAddVM"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/user-most-visited": {
      "get": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedDictionaryVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedDictionaryVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedDictionaryVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/user-visited-count": {
      "get": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedUrlCountVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedUrlCountVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitedUrlCountVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/user-behaviour/user/{userId}/last-activity": {
      "get": {
        "tags": [
          "UserBehaviour"
        ],
        "summary": " (Auth policies: AnyRole)",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserLastActivityVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLastActivityVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLastActivityVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/version": {
      "get": {
        "tags": [
          "Version"
        ],
        "summary": " (Auth policies: OnlyAdmin)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VersionVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/gwf/column-mappings": {
      "post": {
        "tags": [
          "WfGenerator"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GwfInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GwfInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GwfInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GwfInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/WFGColumnMappigVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/WFGColumnMappigVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/WFGColumnMappigVM"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/gwf/tables": {
      "post": {
        "tags": [
          "WfGenerator"
        ],
        "summary": " (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GwfInputVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GwfInputVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GwfInputVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GwfInputVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/WFGTableVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/WFGTableVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/WFGTableVM"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/workflow": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "all workflows (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Workflow"
        ],
        "summary": "create workflow (Auth policies: OnlyAdmin)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowCreateVM"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowCreateVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowCreateVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowCreateVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/workflow/{workflowId}": {
      "delete": {
        "tags": [
          "Workflow"
        ],
        "summary": "delete workflow (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/workflow/{workflowId}/diagram": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "get workflow diagram",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Workflow"
        ],
        "summary": "upload workflow diagram (Auth policies: OnlyAdmin)",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "OnlyAdmin"
            ]
          }
        ]
      }
    },
    "/api/workflow/comment/{commentId}/state/{stateId}/transitions": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "workflow transitions for a comment (Auth policies: AnyRole, CommentRead)",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stateId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStateUserTransitionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStateUserTransitionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStateUserTransitionVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "CommentRead"
            ]
          }
        ]
      }
    },
    "/api/workflow/filter-states": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "summary": "filter states (Auth policies: AnyRole)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowStateFilter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowStateFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowStateFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowStateFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RawWorkflowStateVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawWorkflowStateVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawWorkflowStateVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    },
    "/api/workflow/object/{objectId}/state/{stateId}/transitions": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "workflow transitions for object (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stateId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStateUserTransitionVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStateUserTransitionVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStateUserTransitionVMPagedVM"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/workflow/object/{objectId}/user-transitions/filter": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "summary": " (Auth policies: AnyRole, ObjectRead)",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserWorkflowStateTransitionFilterFilterView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserWorkflowStateTransitionFilterFilterView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserWorkflowStateTransitionFilterFilterView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrUserWorkflowStateTransitionFilterFilterView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MrUserWorkflowStateTransitionVmPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrUserWorkflowStateTransitionVmPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrUserWorkflowStateTransitionVmPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole",
              "ObjectRead"
            ]
          }
        ]
      }
    },
    "/api/workflow/states": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "all states (Auth policies: AnyRole)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RawWorkflowStateVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawWorkflowStateVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawWorkflowStateVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Workflow"
        ],
        "summary": "all states filtered by applicationId/spaceId (Auth policies: AnyRole)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowStateFilter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowStateFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowStateFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowStateFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RawWorkflowStateVMPagedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawWorkflowStateVMPagedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawWorkflowStateVMPagedVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AnyRole"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AElementVM": {
        "required": [
          "cssValue",
          "elementDefinitionId",
          "elementTypeId",
          "position",
          "userDefinedPageId"
        ],
        "type": "object",
        "properties": {
          "cssValue": {
            "type": "integer",
            "format": "int32"
          },
          "dataSources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CDataSourceVM"
            },
            "nullable": true
          },
          "elementDefinitionId": {
            "type": "integer",
            "format": "int32"
          },
          "elementType": {
            "type": "string",
            "nullable": true
          },
          "elementTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "userDefinedPageId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ActionResult": {
        "type": "object",
        "additionalProperties": false
      },
      "AddLockVM": {
        "required": [
          "modelId"
        ],
        "type": "object",
        "properties": {
          "modelId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddModelsVersionsToBranchVM": {
        "required": [
          "branchId"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "sourceModelVersions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddToWhitelistVM": {
        "required": [
          "userRoleId"
        ],
        "type": "object",
        "properties": {
          "domainEmail": {
            "type": "string",
            "nullable": true
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userRoleId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AdditionalParameterTypeEnum": {
        "enum": [
          10,
          20,
          30,
          40,
          50,
          60,
          70,
          80,
          90,
          100,
          110,
          120,
          130,
          140,
          150,
          160,
          170,
          180,
          190,
          200,
          210,
          220,
          230,
          240,
          250,
          260,
          270,
          280,
          290,
          300,
          310,
          320,
          330,
          340,
          350,
          360,
          370,
          380,
          390,
          400,
          410,
          420,
          430,
          440,
          450,
          460,
          470,
          480,
          490,
          500,
          510,
          520,
          530,
          540,
          550,
          560
        ],
        "type": "integer",
        "format": "int32"
      },
      "AdditionalParameterVM": {
        "required": [
          "parameterId",
          "parameterType"
        ],
        "type": "object",
        "properties": {
          "parameterId": {
            "type": "integer",
            "format": "int32"
          },
          "parameterType": {
            "$ref": "#/components/schemas/AdditionalParameterTypeEnum"
          },
          "parameterValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AiSummarySettings": {
        "required": [
          "enabled",
          "maximumInputLength"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "maximumInputLength": {
            "type": "integer",
            "format": "int32"
          },
          "modelConfiguration": {
            "$ref": "#/components/schemas/ChatGptModelSettings"
          },
          "systemQuery": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AllModelsModelVM": {
        "required": [
          "diagramCount",
          "domainCount",
          "gestorId",
          "isGestorGroup",
          "lastModelVersionId",
          "modelId",
          "modelStateId",
          "procedureCount",
          "ruleCount",
          "tableCount",
          "totalObjectCount",
          "viewCount"
        ],
        "type": "object",
        "properties": {
          "accessRights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionTypeEnum"
            },
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "diagramCount": {
            "type": "integer",
            "format": "int32"
          },
          "domainCount": {
            "type": "integer",
            "format": "int32"
          },
          "folderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "folderName": {
            "type": "string",
            "nullable": true
          },
          "fullPath": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PathItemVM"
            },
            "nullable": true
          },
          "gestorId": {
            "type": "integer",
            "format": "int32"
          },
          "gestorName": {
            "type": "string",
            "nullable": true
          },
          "isGestorGroup": {
            "type": "boolean"
          },
          "lastModelVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "locked": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockedByUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lockedByUserName": {
            "type": "string",
            "nullable": true
          },
          "mandatoryAccessRights": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32"
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "modelStateId": {
            "type": "integer",
            "format": "int32"
          },
          "procedureCount": {
            "type": "integer",
            "format": "int32"
          },
          "ruleCount": {
            "type": "integer",
            "format": "int32"
          },
          "sourceBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceBranchName": {
            "type": "string",
            "nullable": true
          },
          "tableCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalObjectCount": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updaterName": {
            "type": "string",
            "nullable": true
          },
          "viewCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AllModelsModelVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllModelsModelVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AllModelsVersionsVM": {
        "required": [
          "modelVersion"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchPath": {
            "type": "string",
            "nullable": true
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "modelVersion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AllModelsVersionsVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllModelsVersionsVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiCardDatabasePatchAddTemplate": {
        "required": [
          "action",
          "api",
          "layouts",
          "nameAttribute",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "additionalRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDatabaseTemplateAdditionalRelationType"
            },
            "nullable": true
          },
          "additionalUserRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDatabaseTemplateAdditionalUserRelationType"
            },
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "api": {
            "minLength": 1,
            "type": "string"
          },
          "bottomTextKey": {
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "favouriteObjectTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDatabaseTemplateFavouriteObjectType"
            },
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "headerRightActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeaderAction"
            },
            "nullable": true
          },
          "headerTitle": {
            "type": "string",
            "nullable": true
          },
          "headerTitleFiltered": {
            "type": "string",
            "nullable": true
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiCardLayout"
            }
          },
          "middleSectionAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "nameAttribute": {
            "minLength": 1,
            "type": "string"
          },
          "noDataIconKey": {
            "type": "string",
            "nullable": true
          },
          "noDataText": {
            "type": "string",
            "nullable": true
          },
          "objectPathKey": {
            "type": "string",
            "nullable": true
          },
          "onClickOpens": {
            "enum": [
              "link",
              "newWindow",
              "rightPanelDetail"
            ],
            "type": "string",
            "nullable": true
          },
          "relationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "searchFormKey": {
            "type": "string",
            "nullable": true
          },
          "secondaryNameAttribute": {
            "type": "string",
            "nullable": true
          },
          "sortTypes": {
            "type": "array",
            "items": {
              "enum": [
                "name",
                "created",
                "modified",
                "popularity"
              ],
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "api-card"
            ],
            "type": "string",
            "readOnly": true
          },
          "userRelationTypeKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiCardDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "api",
          "layouts",
          "nameAttribute",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "additionalRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDatabaseTemplateAdditionalRelationType"
            },
            "nullable": true
          },
          "additionalUserRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDatabaseTemplateAdditionalUserRelationType"
            },
            "nullable": true
          },
          "api": {
            "minLength": 1,
            "type": "string"
          },
          "bottomTextKey": {
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "favouriteObjectTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDatabaseTemplateFavouriteObjectType"
            },
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "headerRightActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeaderAction"
            },
            "nullable": true
          },
          "headerTitle": {
            "type": "string",
            "nullable": true
          },
          "headerTitleFiltered": {
            "type": "string",
            "nullable": true
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiCardLayout"
            }
          },
          "middleSectionAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "nameAttribute": {
            "minLength": 1,
            "type": "string"
          },
          "noDataIconKey": {
            "type": "string",
            "nullable": true
          },
          "noDataText": {
            "type": "string",
            "nullable": true
          },
          "objectPathKey": {
            "type": "string",
            "nullable": true
          },
          "onClickOpens": {
            "enum": [
              "link",
              "newWindow",
              "rightPanelDetail"
            ],
            "type": "string",
            "nullable": true
          },
          "relationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "searchFormKey": {
            "type": "string",
            "nullable": true
          },
          "secondaryNameAttribute": {
            "type": "string",
            "nullable": true
          },
          "sortTypes": {
            "type": "array",
            "items": {
              "enum": [
                "name",
                "created",
                "modified",
                "popularity"
              ],
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "api-card"
            ],
            "type": "string",
            "readOnly": true
          },
          "userRelationTypeKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiCardDatabaseTemplate": {
        "required": [
          "api",
          "layouts",
          "nameAttribute",
          "type"
        ],
        "type": "object",
        "properties": {
          "additionalRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDatabaseTemplateAdditionalRelationType"
            },
            "nullable": true
          },
          "additionalUserRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDatabaseTemplateAdditionalUserRelationType"
            },
            "nullable": true
          },
          "api": {
            "minLength": 1,
            "type": "string"
          },
          "bottomTextKey": {
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "favouriteObjectTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDatabaseTemplateFavouriteObjectType"
            },
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "headerRightActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeaderAction"
            },
            "nullable": true
          },
          "headerTitle": {
            "type": "string",
            "nullable": true
          },
          "headerTitleFiltered": {
            "type": "string",
            "nullable": true
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiCardLayout"
            }
          },
          "middleSectionAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "nameAttribute": {
            "minLength": 1,
            "type": "string"
          },
          "noDataIconKey": {
            "type": "string",
            "nullable": true
          },
          "noDataText": {
            "type": "string",
            "nullable": true
          },
          "objectPathKey": {
            "type": "string",
            "nullable": true
          },
          "onClickOpens": {
            "enum": [
              "link",
              "newWindow",
              "rightPanelDetail"
            ],
            "type": "string",
            "nullable": true
          },
          "relationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "searchFormKey": {
            "type": "string",
            "nullable": true
          },
          "secondaryNameAttribute": {
            "type": "string",
            "nullable": true
          },
          "sortTypes": {
            "type": "array",
            "items": {
              "enum": [
                "name",
                "created",
                "modified",
                "popularity"
              ],
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "api-card"
            ],
            "type": "string",
            "readOnly": true
          },
          "userRelationTypeKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiCardInlineDatabasePatchAddTemplate": {
        "required": [
          "action",
          "api",
          "nameAttribute",
          "targetComponentId",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "api": {
            "minLength": 1,
            "type": "string"
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "headerClaim": {
            "type": "string",
            "nullable": true
          },
          "headerTitle": {
            "type": "string",
            "nullable": true
          },
          "leftData": {
            "$ref": "#/components/schemas/IApiCardInlineDataTypeBaseDatabaseType"
          },
          "nameAttribute": {
            "minLength": 1,
            "type": "string"
          },
          "noDataIconKey": {
            "type": "string",
            "nullable": true
          },
          "noDataText": {
            "type": "string",
            "nullable": true
          },
          "onClickOpens": {
            "enum": [
              "link",
              "newWindow",
              "rightPanelDetail"
            ],
            "type": "string",
            "nullable": true
          },
          "rightData": {
            "$ref": "#/components/schemas/IApiCardInlineDataTypeBaseDatabaseType"
          },
          "targetComponentId": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "enum": [
              "api-card-inline"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApiCardInlineDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "api",
          "nameAttribute",
          "targetComponentId",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "api": {
            "minLength": 1,
            "type": "string"
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "headerClaim": {
            "type": "string",
            "nullable": true
          },
          "headerTitle": {
            "type": "string",
            "nullable": true
          },
          "leftData": {
            "$ref": "#/components/schemas/IApiCardInlineDataTypeBaseDatabaseType"
          },
          "nameAttribute": {
            "minLength": 1,
            "type": "string"
          },
          "noDataIconKey": {
            "type": "string",
            "nullable": true
          },
          "noDataText": {
            "type": "string",
            "nullable": true
          },
          "onClickOpens": {
            "enum": [
              "link",
              "newWindow",
              "rightPanelDetail"
            ],
            "type": "string",
            "nullable": true
          },
          "rightData": {
            "$ref": "#/components/schemas/IApiCardInlineDataTypeBaseDatabaseType"
          },
          "targetComponentId": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "enum": [
              "api-card-inline"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApiCardInlineDatabaseTemplate": {
        "required": [
          "api",
          "nameAttribute",
          "targetComponentId",
          "type"
        ],
        "type": "object",
        "properties": {
          "api": {
            "minLength": 1,
            "type": "string"
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "headerClaim": {
            "type": "string",
            "nullable": true
          },
          "headerTitle": {
            "type": "string",
            "nullable": true
          },
          "leftData": {
            "$ref": "#/components/schemas/IApiCardInlineDataTypeBaseDatabaseType"
          },
          "nameAttribute": {
            "minLength": 1,
            "type": "string"
          },
          "noDataIconKey": {
            "type": "string",
            "nullable": true
          },
          "noDataText": {
            "type": "string",
            "nullable": true
          },
          "onClickOpens": {
            "enum": [
              "link",
              "newWindow",
              "rightPanelDetail"
            ],
            "type": "string",
            "nullable": true
          },
          "rightData": {
            "$ref": "#/components/schemas/IApiCardInlineDataTypeBaseDatabaseType"
          },
          "targetComponentId": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "enum": [
              "api-card-inline"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApiCardInlineOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "api": {
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "headerClaimKey": {
            "type": "string",
            "nullable": true
          },
          "headerTitleKey": {
            "type": "string",
            "nullable": true
          },
          "leftData": {
            "$ref": "#/components/schemas/IApiCardInlineDataTypeBaseOutputType"
          },
          "nameAttributeKey": {
            "type": "string",
            "nullable": true
          },
          "noDataIconKey": {
            "type": "string",
            "nullable": true
          },
          "noDataTextKey": {
            "type": "string",
            "nullable": true
          },
          "onClickOpens": {
            "enum": [
              "link",
              "newWindow",
              "rightPanelDetail"
            ],
            "type": "string",
            "nullable": true
          },
          "rightData": {
            "$ref": "#/components/schemas/IApiCardInlineDataTypeBaseOutputType"
          },
          "targetComponentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "api-card-inline"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApiCardLayout": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "cards",
              "table"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiCardOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "additionalRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchOutputTemplateAdditionalRelationType"
            },
            "nullable": true
          },
          "additionalUserRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchOutputTemplateAdditionalUserRelationType"
            },
            "nullable": true
          },
          "api": {
            "type": "string",
            "nullable": true
          },
          "bottomTextKey": {
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "favouriteObjectTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchOutputTemplateFavouriteObjectType"
            },
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "headerRightActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeaderAction"
            },
            "nullable": true
          },
          "headerTitle": {
            "type": "string",
            "nullable": true
          },
          "headerTitleFiltered": {
            "type": "string",
            "nullable": true
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiCardLayout"
            },
            "nullable": true
          },
          "middleSectionAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "nameAttribute": {
            "type": "string",
            "nullable": true
          },
          "noDataIcon": {
            "type": "string",
            "nullable": true
          },
          "noDataText": {
            "type": "string",
            "nullable": true
          },
          "objectPathKey": {
            "type": "string",
            "nullable": true
          },
          "onClickOpens": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "searchFormId": {
            "type": "string",
            "nullable": true
          },
          "secondaryNameAttribute": {
            "type": "string",
            "nullable": true
          },
          "sortTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "api-card"
            ],
            "type": "string",
            "readOnly": true
          },
          "userRelationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiTableAttributeDatabaseColumn": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "bulkEditable": {
            "type": "boolean",
            "nullable": true
          },
          "clearNewLine": {
            "type": "boolean",
            "nullable": true
          },
          "isDataForBackend": {
            "type": "boolean",
            "nullable": true
          },
          "isHtml": {
            "type": "boolean",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "enum": [
              "attributeTypeKey"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ApiTableAttributeOutputColumn": {
        "required": [
          "bulkEditable",
          "isDataForBackend",
          "type"
        ],
        "type": "object",
        "properties": {
          "bulkEditable": {
            "type": "boolean"
          },
          "isDataForBackend": {
            "type": "boolean"
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "$ref": "#/components/schemas/CodeTableLabelUserObjectTypeVM"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "attributeTypeKey"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "$ref": "#/components/schemas/ApiTableColumnValue"
          },
          "valuesUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiTableColumnValue": {
        "required": [
          "attributeTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AttributeFeatureOutputTemplate"
            },
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiTableCustomActionButtonDatabaseColumn": {
        "required": [
          "activityKey",
          "pipelineKey",
          "text",
          "type"
        ],
        "type": "object",
        "properties": {
          "activityKey": {
            "minLength": 1,
            "type": "string"
          },
          "pipelineKey": {
            "minLength": 1,
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "type": {
            "minLength": 1,
            "enum": [
              "customActionButton"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApiTableCustomActionButtonOutputColumn": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "activityKey": {
            "type": "string",
            "nullable": true
          },
          "pipelineKey": {
            "type": "string",
            "nullable": true
          },
          "textKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "enum": [
              "customActionButton"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApiTableDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addNewObjectButton": {
            "type": "boolean",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "api": {
            "type": "string",
            "nullable": true
          },
          "bulkEditable": {
            "type": "boolean",
            "nullable": true
          },
          "columns": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiTableAttributeDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDefinedKeyDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableExternalDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableObjectRelationDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableUserRelationDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableCustomActionButtonDatabaseColumn"
                }
              ]
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultSort": {
            "$ref": "#/components/schemas/DefaultDatabaseSortVM"
          },
          "exportable": {
            "type": "boolean",
            "nullable": true
          },
          "extraRequestData": {
            "type": "object",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "showAllColumnContent": {
            "type": "boolean",
            "nullable": true
          },
          "tableId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "api-table"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiTableDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "addNewObjectButton": {
            "type": "boolean",
            "nullable": true
          },
          "api": {
            "type": "string",
            "nullable": true
          },
          "bulkEditable": {
            "type": "boolean",
            "nullable": true
          },
          "columns": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiTableAttributeDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDefinedKeyDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableExternalDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableObjectRelationDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableUserRelationDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableCustomActionButtonDatabaseColumn"
                }
              ]
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultSort": {
            "$ref": "#/components/schemas/DefaultDatabaseSortVM"
          },
          "exportable": {
            "type": "boolean",
            "nullable": true
          },
          "extraRequestData": {
            "type": "object",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "showAllColumnContent": {
            "type": "boolean",
            "nullable": true
          },
          "tableId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "api-table"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiTableDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "addNewObjectButton": {
            "type": "boolean",
            "nullable": true
          },
          "api": {
            "type": "string",
            "nullable": true
          },
          "bulkEditable": {
            "type": "boolean",
            "nullable": true
          },
          "columns": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiTableAttributeDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDefinedKeyDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableExternalDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableObjectRelationDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableUserRelationDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableCustomActionButtonDatabaseColumn"
                }
              ]
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultSort": {
            "$ref": "#/components/schemas/DefaultDatabaseSortVM"
          },
          "exportable": {
            "type": "boolean",
            "nullable": true
          },
          "extraRequestData": {
            "type": "object",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "showAllColumnContent": {
            "type": "boolean",
            "nullable": true
          },
          "tableId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "api-table"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiTableDefinedKeyDatabaseColumn": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "bulkEditable": {
            "type": "boolean",
            "nullable": true
          },
          "isDataForBackend": {
            "type": "boolean",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "definedKey"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "enum": [
              "accessedTime",
              "applicationName",
              "created",
              "creatorName",
              "lastChange",
              "numberOfFavourites",
              "numberOfRelations",
              "objectKarma",
              "objectName",
              "objectPath",
              "objectTypeName",
              "path",
              "spaceName",
              "statusName",
              "updaterName",
              "viewsAlltime",
              "viewsIn1M"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ApiTableDefinedKeyOutputColumn": {
        "required": [
          "bulkEditable",
          "isDataForBackend",
          "type"
        ],
        "type": "object",
        "properties": {
          "bulkEditable": {
            "type": "boolean"
          },
          "isDataForBackend": {
            "type": "boolean"
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "$ref": "#/components/schemas/CodeTableLabelUserObjectTypeVM"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "definedKey"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "$ref": "#/components/schemas/TemplateDefinedKeyVM"
          }
        },
        "additionalProperties": false
      },
      "ApiTableExternalDatabaseColumn": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "clearNewLine": {
            "type": "boolean",
            "nullable": true
          },
          "isDataForBackend": {
            "type": "boolean",
            "nullable": true
          },
          "isHtml": {
            "type": "boolean",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "enum": [
              "externalKey"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ApiTableExternalKeyOutputColumn": {
        "required": [
          "bulkEditable",
          "isDataForBackend",
          "type"
        ],
        "type": "object",
        "properties": {
          "bulkEditable": {
            "type": "boolean"
          },
          "isDataForBackend": {
            "type": "boolean"
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "$ref": "#/components/schemas/CodeTableLabelUserObjectTypeVM"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "externalKey"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "$ref": "#/components/schemas/TemplateExternalKey"
          }
        },
        "additionalProperties": false
      },
      "ApiTableObjectRelationDatabaseColumn": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "bulkEditable": {
            "type": "boolean",
            "nullable": true
          },
          "isDataForBackend": {
            "type": "boolean",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "enum": [
              "relationTypeKey"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiTableObjectRelationOutputColumn": {
        "required": [
          "bulkEditable",
          "isDataForBackend",
          "type"
        ],
        "type": "object",
        "properties": {
          "bulkEditable": {
            "type": "boolean"
          },
          "isDataForBackend": {
            "type": "boolean"
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "$ref": "#/components/schemas/CodeTableLabelUserObjectTypeVM"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "relationTypeKey"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "$ref": "#/components/schemas/ObjectRelationWithFeaturesVM"
          }
        },
        "additionalProperties": false
      },
      "ApiTableOutputTemplate": {
        "required": [
          "addNewObjectButton",
          "bulkEditable",
          "exportable",
          "showAllColumnContent",
          "type"
        ],
        "type": "object",
        "properties": {
          "addNewObjectButton": {
            "type": "boolean"
          },
          "api": {
            "type": "string",
            "nullable": true
          },
          "bulkEditable": {
            "type": "boolean"
          },
          "columns": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiTableAttributeOutputColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDefinedKeyOutputColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableCustomActionButtonOutputColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableExternalKeyOutputColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableObjectRelationOutputColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableUserRelationOutputColumn"
                }
              ]
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultSort": {
            "$ref": "#/components/schemas/DefaultOutputSortVM"
          },
          "exportable": {
            "type": "boolean"
          },
          "extraRequestData": {
            "type": "object",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "showAllColumnContent": {
            "type": "boolean"
          },
          "tableId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "api-table"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiTableUserRelationDatabaseColumn": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "bulkEditable": {
            "type": "boolean",
            "nullable": true
          },
          "isDataForBackend": {
            "type": "boolean",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "userRelationTypeKey"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ApiTableUserRelationOutputColumn": {
        "required": [
          "bulkEditable",
          "isDataForBackend",
          "type"
        ],
        "type": "object",
        "properties": {
          "bulkEditable": {
            "type": "boolean"
          },
          "isDataForBackend": {
            "type": "boolean"
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "$ref": "#/components/schemas/CodeTableLabelUserObjectTypeVM"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "userRelationTypeKey"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "$ref": "#/components/schemas/UserRelationWithFeaturesVM"
          }
        },
        "additionalProperties": false
      },
      "AppAppliedPermissionAddVM": {
        "required": [
          "permissionTypeId",
          "refObjectId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "permissionTypeId": {
            "$ref": "#/components/schemas/PermissionTypeEnum"
          },
          "refObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppAppliedPermissionAllVM": {
        "required": [
          "permissionTypeId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "permissionTypeId": {
            "$ref": "#/components/schemas/PermissionTypeEnum"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppAppliedPermissionFilter": {
        "type": "object",
        "properties": {
          "dbObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "permissionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "refObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppAppliedPermissionFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AppAppliedPermissionFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppAppliedPermissionVM": {
        "required": [
          "dbObjectId",
          "isGroup",
          "permissionId",
          "permissionTypeId",
          "refObjectId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "dbObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "isGroup": {
            "type": "boolean"
          },
          "permissionId": {
            "type": "integer",
            "format": "int32"
          },
          "permissionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "refObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppAppliedPermissionVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppAppliedPermissionVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppBranchAppliedPermissionVM": {
        "required": [
          "group",
          "userId"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppBranchUserPermissionVM"
            },
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppBranchAppliedPermissionVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppBranchAppliedPermissionVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppBranchCodetableVM": {
        "required": [
          "branchId"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppBranchCodetableVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppBranchCodetableVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppBranchFilter": {
        "type": "object",
        "properties": {
          "branchStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "mandatoryAccessRights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionTypeEnum"
            },
            "nullable": true
          },
          "maxVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxVersionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentModelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentVersionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppBranchFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AppBranchFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppBranchUserPermissionVM": {
        "required": [
          "permissionTypeId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "permissionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppBranchVM": {
        "required": [
          "branchId",
          "branchStateId",
          "branchVersions",
          "hasWritePermission"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchStateId": {
            "type": "integer",
            "format": "int32"
          },
          "branchVersions": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasWritePermission": {
            "type": "boolean"
          },
          "mandatoryAccessRights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionTypeEnum"
            },
            "nullable": true
          },
          "maxVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxVersionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBranchName": {
            "type": "string",
            "nullable": true
          },
          "parentModelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentVersionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updater": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppBranchVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppBranchVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppContentFilter": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fileTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "folderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mandatoryAccessRights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionTypeEnum"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentFolderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppContentItemVM": {
        "required": [
          "expanded",
          "fileTypeId",
          "isModel",
          "protected"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "expanded": {
            "type": "boolean"
          },
          "fileTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "folderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fullPath": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PathItemVM"
            },
            "nullable": true
          },
          "hasNewModelVersionInBranch": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isModel": {
            "type": "boolean"
          },
          "lastModelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mandatoryAccessRights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionTypeEnum"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentFolderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "protected": {
            "type": "boolean"
          },
          "uniqueObjectId": {
            "type": "string",
            "nullable": true
          },
          "uniqueParentObjectId": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterColorHex": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updaterName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppContentItemVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppContentItemVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppFileDataBase64VM": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppFileEditVM": {
        "required": [
          "name",
          "protected"
        ],
        "type": "object",
        "properties": {
          "folderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "protected": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AppFileVM": {
        "required": [
          "fileId"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fileId": {
            "type": "integer",
            "format": "int32"
          },
          "fileStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "folderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "protected": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppFileVersionVM": {
        "required": [
          "fileVersionId"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "versionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppFileVersionVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppFileVersionVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppFolderAddVM": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "parentFolderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppFolderAppliedPermissionVM": {
        "required": [
          "group",
          "userId"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppFolderUserPermissionVM"
            },
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppFolderAppliedPermissionVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppFolderAppliedPermissionVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppFolderUserPermissionVM": {
        "required": [
          "isInherited",
          "isOwner",
          "permissionId",
          "permissionTypeId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "isInherited": {
            "type": "boolean"
          },
          "isOwner": {
            "type": "boolean"
          },
          "permissionId": {
            "type": "integer",
            "format": "int32"
          },
          "permissionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppFolderVM": {
        "required": [
          "folderId"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "folderId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentFolderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppLockFilter": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "locked": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lockStateName": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unlocked": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "unlockedById": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppLockFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AppLockFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppLockVM": {
        "required": [
          "created",
          "creatorId",
          "lockId",
          "lockStateId",
          "modelId",
          "priority"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "locked": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockId": {
            "type": "integer",
            "format": "int32"
          },
          "lockStateId": {
            "type": "integer",
            "format": "int32"
          },
          "lockStateName": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32"
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "taskId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unlocked": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "unlockedById": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppLockVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppLockVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppMergeChangeVM": {
        "required": [
          "isConflicted",
          "mergeChangeId",
          "pullRequestId"
        ],
        "type": "object",
        "properties": {
          "isConflicted": {
            "type": "boolean"
          },
          "localChangeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mergeChangeId": {
            "type": "integer",
            "format": "int32"
          },
          "pullRequestId": {
            "type": "integer",
            "format": "int32"
          },
          "remoteChangeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "selectedChangeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppMergeChangeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppMergeChangeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppNotificationDataVM": {
        "required": [
          "dataTypeId"
        ],
        "type": "object",
        "properties": {
          "dataTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppNotificationFilter": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "notificationCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notificationPriorityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notificationStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notificationStatusTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "notificationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppNotificationFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AppNotificationFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppNotificationStatusChangeVM": {
        "required": [
          "fromStatusIds",
          "toStatusId"
        ],
        "type": "object",
        "properties": {
          "fromStatusIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationStatusEnum"
            }
          },
          "notificationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toStatusId": {
            "$ref": "#/components/schemas/NotificationStatusEnum"
          }
        },
        "additionalProperties": false
      },
      "AppNotificationVM": {
        "required": [
          "created",
          "notificationCategoryId",
          "notificationId",
          "notificationPriorityId",
          "notificationStatusId",
          "notificationTypeId"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AppNotificationDataVM"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "notificationCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "notificationId": {
            "type": "integer",
            "format": "int32"
          },
          "notificationPriorityId": {
            "type": "integer",
            "format": "int32"
          },
          "notificationStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "notificationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppPipelineInput": {
        "required": [
          "pipeline"
        ],
        "type": "object",
        "properties": {
          "activity": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pipeline": {
            "minLength": 1,
            "type": "string"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppPullRequestDefinitionVM": {
        "required": [
          "fromBranchId",
          "toBranchId"
        ],
        "type": "object",
        "properties": {
          "fromBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "toBranchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppPullRequestVM": {
        "required": [
          "pullRequestId"
        ],
        "type": "object",
        "properties": {
          "approved": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "approverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "pullRequestId": {
            "type": "integer",
            "format": "int32"
          },
          "pullRequestingToVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pullRequestStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "requestVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resolved": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppPullRequestVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppPullRequestVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppRoleEnum": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "AppRoleVM": {
        "required": [
          "roleId"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppRoleVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppRoleVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTagGetAllFilter": {
        "type": "object",
        "properties": {
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "modelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTagGetAllFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AppTagGetAllFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTagGetAllVM": {
        "required": [
          "created",
          "creatorId",
          "tagId"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "branchOwnerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "canEdit": {
            "type": "boolean",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "modelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32"
          },
          "versionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTagGetAllVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppTagGetAllVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTagVM": {
        "required": [
          "created",
          "creatorId",
          "dataDictionary",
          "headTag",
          "tagId"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "dataDictionary": {
            "type": "boolean"
          },
          "headTag": {
            "type": "boolean"
          },
          "modelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppTagVerifyInputVM": {
        "required": [
          "modelVersionId",
          "name"
        ],
        "type": "object",
        "properties": {
          "modelVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AppTagVerifyVM": {
        "required": [
          "exists"
        ],
        "type": "object",
        "properties": {
          "exists": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AppTaskInfoVM": {
        "required": [
          "created",
          "creatorId",
          "taskId",
          "taskResultId",
          "taskStateId",
          "taskTypeId"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "taskResultId": {
            "type": "integer",
            "format": "int32"
          },
          "taskStateId": {
            "type": "integer",
            "format": "int32"
          },
          "taskTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppTaskModelFilter": {
        "type": "object",
        "properties": {
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isRunning": {
            "type": "boolean",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "resultName": {
            "type": "string",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "stateName": {
            "type": "string",
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskResultId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskResultIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "taskStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskStateIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "taskTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "typeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTaskModelFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AppTaskModelFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTaskModelVM": {
        "type": "object",
        "properties": {
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isRunning": {
            "type": "boolean",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "resultName": {
            "type": "string",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "stateName": {
            "type": "string",
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskResultId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskResultIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "taskStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskStateIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "taskTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "typeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTaskModelVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppTaskModelVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTaskPhaseLogFilter": {
        "type": "object",
        "properties": {
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskPhaseId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskPhaseLogId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskResultId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskResultName": {
            "type": "string",
            "nullable": true
          },
          "taskStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskStateName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTaskPhaseLogFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AppTaskPhaseLogFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTaskPhasePhaseLogVM": {
        "type": "object",
        "properties": {
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskPhaseId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskPhaseLogId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskPhaseNameKey": {
            "type": "string",
            "nullable": true
          },
          "taskResultId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskResultName": {
            "type": "string",
            "nullable": true
          },
          "taskStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskStateName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTaskPhasePhaseLogVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppTaskPhasePhaseLogVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTaskResultVM": {
        "required": [
          "taskResultId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "taskResultId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppTaskResultVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppTaskResultVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTaskStateVM": {
        "required": [
          "taskStateId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "taskStateId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppTaskStateVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppTaskStateVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTaskTypeVM": {
        "required": [
          "taskTypeId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppTaskTypeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppTaskTypeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTaskVM": {
        "required": [
          "created",
          "creatorId",
          "taskId",
          "taskResultEnum",
          "taskResultId",
          "taskStateEnum",
          "taskStateId",
          "taskTypeEnum",
          "taskTypeId"
        ],
        "type": "object",
        "properties": {
          "additionalParameter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalParameterVM"
            },
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "canceledById": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cancelTimeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "derivedId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "diagramSymbolMerge": {
            "type": "boolean",
            "nullable": true
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "modelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notified": {
            "type": "boolean",
            "nullable": true
          },
          "parametrizationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resultName": {
            "type": "string",
            "nullable": true
          },
          "scheduledTaskGroupKey": {
            "type": "string",
            "nullable": true
          },
          "scheduledTaskId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "stateName": {
            "type": "string",
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "taskResultEnum": {
            "$ref": "#/components/schemas/TaskResultEnum"
          },
          "taskResultId": {
            "type": "integer",
            "format": "int32"
          },
          "taskStateEnum": {
            "$ref": "#/components/schemas/TaskStateEnum"
          },
          "taskStateId": {
            "type": "integer",
            "format": "int32"
          },
          "taskTypeEnum": {
            "$ref": "#/components/schemas/TaskTypeEnum"
          },
          "taskTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "typeName": {
            "type": "string",
            "nullable": true
          },
          "workerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppTaskVMActionResult": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ActionResult"
          },
          "value": {
            "$ref": "#/components/schemas/AppTaskVM"
          }
        },
        "additionalProperties": false
      },
      "AppTokenizationTaskVM": {
        "required": [
          "created",
          "taskResultId",
          "taskStateId",
          "tokenizationTaskId",
          "tokenizationTypeId"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "taskResultId": {
            "type": "integer",
            "format": "int32"
          },
          "taskStateId": {
            "type": "integer",
            "format": "int32"
          },
          "tokenizationTaskId": {
            "type": "integer",
            "format": "int32"
          },
          "tokenizationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppTransactionLogVM": {
        "required": [
          "changeTypeId",
          "transactionLogId",
          "transactionStateId"
        ],
        "type": "object",
        "properties": {
          "changeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "conflictingWithId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "extendedAttributeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectPropertyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "previousTextValue": {
            "type": "string",
            "nullable": true
          },
          "stateChangedById": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "transactionLogId": {
            "type": "integer",
            "format": "int32"
          },
          "transactionStateId": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserAttributeVM": {
        "required": [
          "isParentInherited",
          "isSpaceInherited",
          "isUserGroup",
          "userId"
        ],
        "type": "object",
        "properties": {
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "isParentInherited": {
            "type": "boolean"
          },
          "isSpaceInherited": {
            "type": "boolean"
          },
          "isUserGroup": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserChangePasswordVM": {
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "oldPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserCreateInputVM": {
        "required": [
          "userRoleId"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "login": {
            "maxLength": 400,
            "type": "string",
            "nullable": true
          },
          "password": {
            "maxLength": 300,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 300,
            "type": "string",
            "nullable": true
          },
          "userName": {
            "maxLength": 400,
            "type": "string",
            "nullable": true
          },
          "userRoleId": {
            "$ref": "#/components/schemas/AppRoleEnum"
          }
        },
        "additionalProperties": false
      },
      "AppUserCreateRepresentativeVM": {
        "required": [
          "durationFrom",
          "representativeId"
        ],
        "type": "object",
        "properties": {
          "durationFrom": {
            "type": "string",
            "format": "date-time"
          },
          "durationTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "representativeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppUserDefaultHomePageVM": {
        "type": "object",
        "properties": {
          "defaultHomePage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserEditRepresentativeVM": {
        "required": [
          "durationFrom",
          "representativeId"
        ],
        "type": "object",
        "properties": {
          "durationFrom": {
            "type": "string",
            "format": "date-time"
          },
          "durationTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "representativeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppUserEditVM": {
        "required": [
          "userRoleId"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 400,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 300,
            "type": "string",
            "nullable": true
          },
          "userRoleId": {
            "$ref": "#/components/schemas/AppRoleEnum"
          }
        },
        "additionalProperties": false
      },
      "AppUserEditableAttributesVM": {
        "required": [
          "description",
          "firstName",
          "lastName",
          "phone"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "boolean"
          },
          "firstName": {
            "type": "boolean"
          },
          "lastName": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AppUserFilter": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "includeGroups": {
            "type": "boolean",
            "nullable": true
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameOrEmail": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AppUserFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserGroupAddVM": {
        "required": [
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AppUserGroupFilter": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserGroupFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AppUserGroupFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserGroupInfoVM": {
        "required": [
          "groupId"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserGroupVM": {
        "required": [
          "createdBy",
          "groupId"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "creatorColoHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserGroupVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserGroupWithUserInfoVM": {
        "required": [
          "createdBy",
          "groupId"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserInGroupVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserGroupWithUserInfoVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupWithUserInfoVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserInGroupVM": {
        "type": "object",
        "properties": {
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserInWorkflowTransitionVM": {
        "required": [
          "transitionStateId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "transitionStateId": {
            "type": "integer",
            "format": "int32"
          },
          "transitionStateNameKey": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserInfoVM": {
        "required": [
          "createdBy",
          "isDeleted",
          "userId"
        ],
        "type": "object",
        "properties": {
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "editableAttributes": {
            "$ref": "#/components/schemas/AppUserEditableAttributesVM"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "originalUser": {
            "$ref": "#/components/schemas/AppUserSimpleVM"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "privateSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "representativesGrantedByUser": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserRepresentativeVM"
            },
            "nullable": true
          },
          "representativesGrantedToUser": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserRepresentativeVM"
            },
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            },
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppUserRelationVM": {
        "required": [
          "relationTypeId",
          "targetObjectId"
        ],
        "type": "object",
        "properties": {
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeName": {
            "type": "string",
            "nullable": true
          },
          "targetApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "targetObjectName": {
            "type": "string",
            "nullable": true
          },
          "targetObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetObjectTypeName": {
            "type": "string",
            "nullable": true
          },
          "targetSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetSpaceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserRelationVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserRelationVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserRepresentativeVM": {
        "required": [
          "creatorId",
          "durationFrom",
          "representativeId",
          "userRepresentativeId"
        ],
        "type": "object",
        "properties": {
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "durationFrom": {
            "type": "string",
            "format": "date-time"
          },
          "durationTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "representativeColorHex": {
            "type": "string",
            "nullable": true
          },
          "representativeId": {
            "type": "integer",
            "format": "int32"
          },
          "representativeName": {
            "type": "string",
            "nullable": true
          },
          "userRepresentativeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppUserRoleFilter": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserRoleFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AppUserRoleFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserSimpleFilter": {
        "type": "object",
        "properties": {
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserSimpleFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AppUserSimpleFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserSimpleObjectVM": {
        "required": [
          "isGroup",
          "userId",
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "isGroup": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppUserSimpleObjectVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserSimpleObjectVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserSimpleVM": {
        "required": [
          "userId",
          "versionId"
        ],
        "type": "object",
        "properties": {
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserSimpleVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserSimpleVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserSpaceSimpleVm": {
        "required": [
          "isGroup",
          "userId"
        ],
        "type": "object",
        "properties": {
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "isGroup": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserSpaceVm": {
        "required": [
          "isGroup",
          "userId",
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "isGroup": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppUserSpaceVmPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserSpaceVm"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUserVM": {
        "required": [
          "colorHex",
          "createdBy",
          "isGroup",
          "name",
          "userId"
        ],
        "type": "object",
        "properties": {
          "colorHex": {
            "minLength": 1,
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "isGroup": {
            "type": "boolean"
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppUserVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationAccessCountFilter": {
        "type": "object",
        "properties": {
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "changedInLastDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "from": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationAccessCountFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/ApplicationAccessCountFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationCardDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-card"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationCardDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-card"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationCardDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-card"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationCardOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-card"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationCardsDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-cards"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationCardsDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-cards"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationCardsDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-cards"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationCardsOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-cards"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationDashboardVM": {
        "required": [
          "id",
          "isFavourite",
          "objectsCount",
          "spaceCount"
        ],
        "type": "object",
        "properties": {
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "customUrl": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isFavourite": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "objectsCount": {
            "type": "integer",
            "format": "int32"
          },
          "shortcutKey": {
            "type": "string",
            "nullable": true
          },
          "spaceCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationDashboardVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationDashboardVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationDataDictionaryCardDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-card-datadictionary"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationDataDictionaryCardDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-card-datadictionary"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationDataDictionaryCardDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-card-datadictionary"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationDataDictionaryOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-card-datadictionary"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationDatabasePatchTemplate": {
        "type": "object",
        "properties": {
          "centerArea": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDeleteComponent"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchUpdateTemplate"
                }
              ]
            },
            "nullable": true
          },
          "rightArea": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDeleteComponent"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchUpdateTemplate"
                }
              ]
            },
            "nullable": true
          },
          "settings": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NamedComponentDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/NamedComponentDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/DatabaseSettingsPatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/DatabaseSettingsPatchUpdateTemplate"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationDatabaseTemplate": {
        "type": "object",
        "properties": {
          "centerArea": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
                }
              ]
            },
            "nullable": true
          },
          "rightArea": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
                }
              ]
            },
            "nullable": true
          },
          "settings": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/DatabaseSettingsTemplate"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationOutputTemplate": {
        "type": "object",
        "properties": {
          "centralArea": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiTableOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaOutputTemplate"
                }
              ]
            },
            "nullable": true
          },
          "rightArea": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiTableOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaOutputTemplate"
                }
              ]
            },
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/TemplateOutputSettings"
          }
        },
        "additionalProperties": false
      },
      "ApplicationPathVM": {
        "required": [
          "applicationId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationRepositoryCardDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-card-repository"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationRepositoryCardDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-card-repository"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationRepositoryCardDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-card-repository"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationRepositoryCardOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "application-card-repository"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationTableFilterInput": {
        "type": "object",
        "properties": {
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Area": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Input"
                },
                {
                  "$ref": "#/components/schemas/Schedule"
                },
                {
                  "$ref": "#/components/schemas/Section"
                },
                {
                  "$ref": "#/components/schemas/Select"
                },
                {
                  "$ref": "#/components/schemas/Text"
                },
                {
                  "$ref": "#/components/schemas/Title"
                },
                {
                  "$ref": "#/components/schemas/Checkbox"
                },
                {
                  "$ref": "#/components/schemas/WorkflowSelect"
                },
                {
                  "$ref": "#/components/schemas/SpaceSelect"
                },
                {
                  "$ref": "#/components/schemas/JsonInput"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeFeatureOutputTemplate": {
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeValueReferenceTypeEnum": {
        "enum": [
          10,
          20
        ],
        "type": "integer",
        "format": "int32"
      },
      "AttributesDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/AttributesSettings"
          },
          "staticValues": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "attributes"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributesDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "addNewObjectButton": {
            "type": "boolean",
            "nullable": true
          },
          "api": {
            "type": "string",
            "nullable": true
          },
          "bulkEditable": {
            "type": "boolean",
            "nullable": true
          },
          "columns": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiTableAttributeDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDefinedKeyDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableExternalDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableObjectRelationDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableUserRelationDatabaseColumn"
                },
                {
                  "$ref": "#/components/schemas/ApiTableCustomActionButtonDatabaseColumn"
                }
              ]
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultSort": {
            "$ref": "#/components/schemas/DefaultDatabaseSortVM"
          },
          "exportable": {
            "type": "boolean",
            "nullable": true
          },
          "extraRequestData": {
            "type": "object",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "showAllColumnContent": {
            "type": "boolean",
            "nullable": true
          },
          "tableId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "api-table"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributesDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/AttributesSettings"
          },
          "staticValues": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "attributes"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributesOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/AttributesSettings"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "attributes"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateAttributesValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributesSettings": {
        "type": "object",
        "properties": {
          "fullscreenEditor": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthGuestLoginInputVM": {
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AuthImpersonateVM": {
        "required": [
          "impersonatedUserId"
        ],
        "type": "object",
        "properties": {
          "impersonatedUserId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AuthLoginVM": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "keepMeSignedIn": {
            "type": "boolean",
            "nullable": true
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AuthSettings": {
        "required": [
          "expirationMs",
          "fileTokenExpirationMs"
        ],
        "type": "object",
        "properties": {
          "authenticationType": {
            "type": "string",
            "nullable": true
          },
          "expirationMs": {
            "type": "integer",
            "format": "int64"
          },
          "fileTokenExpirationMs": {
            "type": "integer",
            "format": "int64"
          },
          "issuer": {
            "type": "string",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthSsoTokenVM": {
        "required": [
          "accessToken"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AuthTokenVM": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "tokenType": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AvailableRelationsVM": {
        "type": "object",
        "properties": {
          "relationTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AzureADSettings": {
        "type": "object",
        "properties": {
          "adminGroup": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "contributorGroup": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "userGroupMapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AzureADUserGroupMapping"
            },
            "nullable": true
          },
          "viewerGroup": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AzureADUserGroupMapping": {
        "type": "object",
        "properties": {
          "azureObjectId": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AzureBlobSettings": {
        "type": "object",
        "properties": {
          "connection": {
            "type": "string",
            "nullable": true
          },
          "containerName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BatchLoadPathsSettings": {
        "type": "object",
        "properties": {
          "batchFolderNamePrefix": {
            "type": "string",
            "nullable": true
          },
          "compareVersionsFolder": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BinaryValueAttributeDatabaseTemplate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BinaryValueAttributeOutputTemplate": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BinaryValueDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BinaryValueRowDatabaseTemplate"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "binary-value"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BinaryValueDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BinaryValueRowDatabaseTemplate"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "binary-value"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BinaryValueDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BinaryValueRowDatabaseTemplate"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "binary-value"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BinaryValueOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BinaryValueRowOutputTemplate"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "binary-value"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BinaryValueRowDatabaseTemplate": {
        "type": "object",
        "properties": {
          "mainAttributeType": {
            "$ref": "#/components/schemas/BinaryValueAttributeDatabaseTemplate"
          },
          "secondaryAttributeType": {
            "$ref": "#/components/schemas/BinaryValueAttributeDatabaseTemplate"
          }
        },
        "additionalProperties": false
      },
      "BinaryValueRowOutputTemplate": {
        "type": "object",
        "properties": {
          "mainAttribute": {
            "$ref": "#/components/schemas/BinaryValueAttributeOutputTemplate"
          },
          "secondaryAttribute": {
            "$ref": "#/components/schemas/BinaryValueAttributeOutputTemplate"
          }
        },
        "additionalProperties": false
      },
      "BranchCanChangeOwnerVM": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BranchPullRequestContainerVM": {
        "required": [
          "fromBranchId",
          "pullRequestCreated",
          "pullRequestCreatorId",
          "pullRequestId",
          "toBranchId"
        ],
        "type": "object",
        "properties": {
          "fromBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "fromBranchName": {
            "type": "string",
            "nullable": true
          },
          "pullRequestCreated": {
            "type": "string",
            "format": "date-time"
          },
          "pullRequestCreator": {
            "type": "string",
            "nullable": true
          },
          "pullRequestCreatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "pullRequestCreatorId": {
            "type": "integer",
            "format": "int32"
          },
          "pullRequestId": {
            "type": "integer",
            "format": "int32"
          },
          "pullRequestName": {
            "type": "string",
            "nullable": true
          },
          "pullRequestStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "toBranchName": {
            "type": "string",
            "nullable": true
          },
          "userPermissions": {
            "$ref": "#/components/schemas/PullRequestPermissionInfo"
          }
        },
        "additionalProperties": false
      },
      "BranchPullRequestFilter": {
        "type": "object",
        "properties": {
          "approved": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "approver": {
            "type": "string",
            "nullable": true
          },
          "approverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "pullRequestId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pullRequestingToVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pullRequestStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resolved": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolver": {
            "type": "string",
            "nullable": true
          },
          "resolverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BranchPullRequestFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/BranchPullRequestFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BranchPullRequestVM": {
        "required": [
          "modelId",
          "pullRequestId",
          "pullRequestStateId",
          "versionsCount"
        ],
        "type": "object",
        "properties": {
          "approved": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "approver": {
            "type": "string",
            "nullable": true
          },
          "approverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32"
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "pullRequestId": {
            "type": "integer",
            "format": "int32"
          },
          "pullRequestingToVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pullRequestStateId": {
            "type": "integer",
            "format": "int32"
          },
          "resolved": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolver": {
            "type": "string",
            "nullable": true
          },
          "resolverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "versionsCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BranchPullRequestVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchPullRequestVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BranchesModelsVersionsFilter": {
        "type": "object",
        "properties": {
          "modelName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkCreateDomainsInput": {
        "required": [
          "applicationId",
          "spaceId",
          "values"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "BulkEditOptionsVm": {
        "required": [
          "isAnyMultiValue",
          "isAnySingleValue",
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "isAnyMultiValue": {
            "type": "boolean"
          },
          "isAnySingleValue": {
            "type": "boolean"
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Button": {
        "type": "object",
        "properties": {
          "labelKey": {
            "type": "string",
            "nullable": true
          },
          "labelVariant": {
            "enum": [
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "paragraph",
              "body1",
              "body1underline",
              "captionText1",
              "captionText1underline",
              "captionText1caps",
              "captionText2",
              "captionText3"
            ],
            "type": "string",
            "nullable": true
          },
          "tooltipKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ButtonLinkAttributeValueVM": {
        "required": [
          "attributeTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ButtonLinkDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "attributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/ButtonLinkSettings"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "button-link"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ButtonLinkDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "attributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/ButtonLinkSettings"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "button-link"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ButtonLinkDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "attributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/ButtonLinkSettings"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "button-link"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ButtonLinkOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/ButtonLinkAttributeValueVM"
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/ButtonLinkSettings"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "button-link"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ButtonLinkSettings": {
        "type": "object",
        "properties": {
          "size": {
            "type": "string",
            "nullable": true
          },
          "style": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApiUrlFilter": {
        "type": "object",
        "properties": {
          "domainId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "domainName": {
            "type": "string",
            "nullable": true
          },
          "isQueryable": {
            "type": "boolean",
            "nullable": true
          },
          "urlName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApiUrlFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CApiUrlFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApiUrlVM": {
        "required": [
          "domainId",
          "domainName",
          "isQueryable",
          "urlId",
          "urlName"
        ],
        "type": "object",
        "properties": {
          "domainId": {
            "type": "integer",
            "format": "int32"
          },
          "domainName": {
            "minLength": 1,
            "type": "string"
          },
          "isQueryable": {
            "type": "boolean"
          },
          "urlId": {
            "type": "integer",
            "format": "int32"
          },
          "urlName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CApiUrlVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApiUrlVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationAddVM": {
        "required": [
          "hierarchyTypeId"
        ],
        "type": "object",
        "properties": {
          "colorEnumKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "hierarchyTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "iconEnumKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationCountFilter": {
        "required": [
          "applicationIds"
        ],
        "type": "object",
        "properties": {
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationCountFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CApplicationCountFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationCountVM": {
        "required": [
          "applicationId",
          "totalObjectCount"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "totalObjectCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CApplicationCountVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApplicationCountVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationDetailsVM": {
        "required": [
          "applicationId",
          "descriptionKey",
          "enumKey",
          "hierarchyTypeId",
          "isHidden",
          "nameKey",
          "objectStateId",
          "objectTypeId",
          "shortcutKey",
          "spaceCount"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "hierarchyTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "hierarchyTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean"
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectStateId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "shortcutKey": {
            "minLength": 1,
            "type": "string"
          },
          "spaceCount": {
            "type": "integer",
            "format": "int32"
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MrRawValueVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationEditVM": {
        "required": [
          "applicationId",
          "hierarchyTypeId",
          "stateId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "hierarchyTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "stateId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CApplicationFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "shortcutKey": {
            "type": "string",
            "nullable": true
          },
          "spaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CApplicationFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationGridFilter": {
        "type": "object",
        "properties": {
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "hierarchyTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "objectStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "shortcutKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationGridFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CApplicationGridFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationGridVM": {
        "required": [
          "applicationId",
          "hierarchyTypeId",
          "objectStateId",
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "hierarchyTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "hierarchyTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "objectStateId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "shortcutKey": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "stateNameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationGridVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApplicationGridVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationGroupedStatisticElement": {
        "required": [
          "applicationId",
          "count",
          "groupNumber",
          "year"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "groupNumber": {
            "type": "integer",
            "format": "int32"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CApplicationGroupedStatisticsVM": {
        "type": "object",
        "properties": {
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApplicationGroupedStatisticElement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationInSpaceVM": {
        "required": [
          "applicationId",
          "objectStateId",
          "objectTypeId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "objectStateId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "shortcutKey": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "workflowId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationInSpaceVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApplicationInSpaceVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationLabelVM": {
        "required": [
          "applicationId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "shortcutKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationLabelVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApplicationLabelVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationObjectTypeFilter": {
        "type": "object",
        "properties": {
          "applicationEnumKey": {
            "type": "string",
            "nullable": true
          },
          "applicationNameKey": {
            "type": "string",
            "nullable": true
          },
          "objectTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "objectTypeNameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationObjectTypeFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CApplicationObjectTypeFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationObjectTypeGridVM": {
        "required": [
          "applicationId",
          "objectStateId",
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "applicationEnumKey": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationNameKey": {
            "type": "string",
            "nullable": true
          },
          "objectStateId": {
            "type": "integer",
            "format": "int32"
          },
          "objectStateNameKey": {
            "type": "string",
            "nullable": true
          },
          "objectTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeNameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationObjectTypeGridVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApplicationObjectTypeGridVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationTemplateVM": {
        "required": [
          "applicationId",
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "shortcutKey": {
            "type": "string",
            "nullable": true
          },
          "template": {
            "$ref": "#/components/schemas/ApplicationOutputTemplate"
          }
        },
        "additionalProperties": false
      },
      "CApplicationVM": {
        "required": [
          "applicationId",
          "descriptionKey",
          "enumKey",
          "hierarchyTypeId",
          "isHidden",
          "nameKey",
          "objectStateId",
          "objectTypeId",
          "shortcutKey",
          "spaceCount"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "hierarchyTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "hierarchyTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean"
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectStateId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "shortcutKey": {
            "minLength": 1,
            "type": "string"
          },
          "spaceCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CApplicationVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApplicationVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationWithSpaceVM": {
        "required": [
          "applicationId",
          "descriptionKey",
          "enumKey",
          "hasSpaceRead",
          "hierarchyTypeId",
          "isHidden",
          "nameKey",
          "objectStateId",
          "objectTypeId",
          "shortcutKey",
          "spaceCount"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "hasSpaceRead": {
            "type": "boolean"
          },
          "hierarchyTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "hierarchyTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean"
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectStateId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "shortcutKey": {
            "minLength": 1,
            "type": "string"
          },
          "spaceCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CApplicationWithSpaceVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApplicationWithSpaceVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CApplicationWithWorkflowVM": {
        "required": [
          "applicationId",
          "descriptionKey",
          "enumKey",
          "hierarchyTypeId",
          "isHidden",
          "nameKey",
          "objectStateId",
          "objectTypeId",
          "shortcutKey",
          "spaceCount",
          "workflowId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "hierarchyTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "hierarchyTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean"
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectStateId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "shortcutKey": {
            "minLength": 1,
            "type": "string"
          },
          "spaceCount": {
            "type": "integer",
            "format": "int32"
          },
          "unresolvedDependencyCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workflowId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CApplicationWithWorkflowVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApplicationWithWorkflowVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CAttributeTypeAddVM": {
        "type": "object",
        "properties": {
          "defaultTranslation": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "featureIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CAttributeTypeEditVM": {
        "required": [
          "attributeTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultTranslation": {
            "type": "string",
            "nullable": true
          },
          "featureIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CAttributeTypeFeatureSimpleVM": {
        "required": [
          "featureId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "featureId": {
            "type": "integer",
            "format": "int32"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CAttributeTypeFeatureVM": {
        "required": [
          "featureId",
          "featureValue"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "featureId": {
            "type": "integer",
            "format": "int32"
          },
          "featureValue": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CAttributeTypeGridFilter": {
        "type": "object",
        "properties": {
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "translationKey": {
            "type": "string",
            "nullable": true
          },
          "userObjectRelationName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CAttributeTypeGridFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CAttributeTypeGridFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CAttributeTypeGridVM": {
        "required": [
          "attributeTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CAttributeTypeFeatureVM"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "translationKey": {
            "type": "string",
            "nullable": true
          },
          "userObjectRelationName": {
            "type": "string",
            "nullable": true
          },
          "userObjectRelationNameKey": {
            "type": "string",
            "nullable": true
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CAttributeTypeGridVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CAttributeTypeGridVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CAttributeTypeSimpleVM": {
        "required": [
          "attributeTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CAttributeTypeSimpleVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CAttributeTypeSimpleVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CAttributeTypeVM": {
        "required": [
          "attributeTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeValue": {
            "$ref": "#/components/schemas/CAttributeValueVM"
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "placeholderKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CAttributeTypeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CAttributeTypeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CAttributeTypeWithFeaturesVM": {
        "required": [
          "attributeTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CAttributeTypeFeatureSimpleVM"
            },
            "nullable": true
          },
          "linkUrlId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "placeholderKey": {
            "type": "string",
            "nullable": true
          },
          "valuesUrlId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CAttributeTypeWithFeaturesVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CAttributeTypeWithFeaturesVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CAttributeValueVM": {
        "required": [
          "attributeValueId"
        ],
        "type": "object",
        "properties": {
          "attributeValueId": {
            "type": "integer",
            "format": "int32"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CChangeLogTypeVM": {
        "required": [
          "changeLogTypeId",
          "operationTypeId"
        ],
        "type": "object",
        "properties": {
          "changeLogTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "operationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CChangeLogTypeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CChangeLogTypeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CChangeThresholdTypeEnum": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "CColorFilter": {
        "type": "object",
        "properties": {
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "colorHoverHex": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CColorFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CColorFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CColorVM": {
        "type": "object",
        "properties": {
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "colorHoverHex": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CColorVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CColorVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CCommentTypeCategoryExtendedVM": {
        "required": [
          "commentTypeCategoryId",
          "defaultCommentTypeId",
          "defaultResponseCommentTypeId",
          "hasInputField",
          "isReadonly",
          "isVisible",
          "sortOrder"
        ],
        "type": "object",
        "properties": {
          "commentTypeCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultCommentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultResponseCommentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "hasInputField": {
            "type": "boolean"
          },
          "isReadonly": {
            "type": "boolean"
          },
          "isVisible": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "selectableCommentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrCommentTypeVM"
            },
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CCommentTypeCategoryExtendedVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CCommentTypeCategoryExtendedVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CCommentTypeCategoryVM": {
        "required": [
          "commentTypeCategoryId",
          "defaultCommentTypeId",
          "defaultResponseCommentTypeId",
          "isReadonly",
          "isVisible",
          "sortOrder"
        ],
        "type": "object",
        "properties": {
          "commentTypeCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultCommentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultResponseCommentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "isReadonly": {
            "type": "boolean"
          },
          "isVisible": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CCommentTypeCategoryVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CCommentTypeCategoryVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CConceptApprovalStateEnum": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "CDataSourceVM": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "dataSourceAPI": {
            "type": "string",
            "nullable": true
          },
          "dataSourceName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "windowDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CDocumentTypeVM": {
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CDocumentTypeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CDocumentTypeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CDomainTypeVM": {
        "required": [
          "domainTypeId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "domainTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "objectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "searchTemplateJson": {
            "type": "string",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CDomainTypeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CDomainTypeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CHierarchyLevelVM": {
        "required": [
          "hierarchyDefinitionId",
          "hierarchyLevelId"
        ],
        "type": "object",
        "properties": {
          "hierarchyDefinitionId": {
            "type": "integer",
            "format": "int32"
          },
          "hierarchyLevelId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentHierarchyLevelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "template": {
            "$ref": "#/components/schemas/MainOutputTemplate"
          }
        },
        "additionalProperties": false
      },
      "CIconCategoryVM": {
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CIconCategoryVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CIconCategoryVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CIconFilter": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "iconCategoryEnumKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CIconFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CIconFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CIconSearchFilter": {
        "type": "object",
        "properties": {
          "iconCategoryEnumKey": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "searchText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CIconSearchFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CIconSearchFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CIconVM": {
        "required": [
          "iconId",
          "lastModified"
        ],
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "iconCategoryEnumKey": {
            "type": "string",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CIconVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CIconVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CImportJobErrorStrategyEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "CImportJobMergeStrategyEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "CJobResultEnum": {
        "type": "object",
        "additionalProperties": false
      },
      "CJobStageEnum": {
        "type": "object",
        "additionalProperties": false
      },
      "CJobStateEnum": {
        "type": "object",
        "additionalProperties": false
      },
      "CObjectRelationFeatureVM": {
        "required": [
          "featureId",
          "featureValue"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "featureId": {
            "type": "integer",
            "format": "int32"
          },
          "featureValue": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CObjectStateEnum": {
        "enum": [
          10,
          20,
          30,
          40
        ],
        "type": "integer",
        "format": "int32"
      },
      "CObjectTypeAddVM": {
        "required": [
          "iconId",
          "objectStateId"
        ],
        "type": "object",
        "properties": {
          "defaultTranslation": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "featureIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "objectStateId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeChildFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeChildFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CObjectTypeChildFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeChildVM": {
        "required": [
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeChildVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CObjectTypeChildVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeEditVM": {
        "required": [
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "defaultTranslation": {
            "type": "string",
            "nullable": true
          },
          "featureIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeFeatureInfoVM": {
        "required": [
          "features",
          "objectState",
          "objectTypeDescriptionKey",
          "objectTypeEnumKey",
          "objectTypeId",
          "objectTypeNameKey"
        ],
        "type": "object",
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CObjectTypeFeatureWithValueVM"
            }
          },
          "iconEnumKey": {
            "type": "string",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectState": {
            "$ref": "#/components/schemas/CObjectStateEnum"
          },
          "objectTypeDescriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeEnumKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeNameKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeFeatureVM": {
        "required": [
          "featureId",
          "featureValue"
        ],
        "type": "object",
        "properties": {
          "featureId": {
            "type": "integer",
            "format": "int32"
          },
          "featureValue": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeFeatureWithValueVM": {
        "required": [
          "featureEnumKey",
          "featureNameKey",
          "featureValue",
          "objectTypeFeatureId"
        ],
        "type": "object",
        "properties": {
          "featureEnumKey": {
            "minLength": 1,
            "type": "string"
          },
          "featureNameKey": {
            "minLength": 1,
            "type": "string"
          },
          "featureValue": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeFeatureId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeGridFilter": {
        "type": "object",
        "properties": {
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "filterByAvailableApps": {
            "type": "boolean",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "translationKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeGridFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CObjectTypeGridFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeGridVM": {
        "required": [
          "applicationsCount",
          "attributesCount",
          "objectStateId",
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApplicationLabelVM"
            },
            "nullable": true
          },
          "applicationsCount": {
            "type": "integer",
            "format": "int32"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CAttributeTypeVM"
            },
            "nullable": true
          },
          "attributesCount": {
            "type": "integer",
            "format": "int32"
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CObjectTypeFeatureVM"
            },
            "nullable": true
          },
          "filterByAvailableApps": {
            "type": "boolean",
            "nullable": true
          },
          "jsonTemplate": {
            "type": "string",
            "nullable": true
          },
          "linkTemplate": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectStateId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "searchTemplateJson": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "translationKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeGridVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CObjectTypeGridVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeInObjectVM": {
        "required": [
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeInObjectVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CObjectTypeInObjectVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeTemplateVM": {
        "required": [
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "objectDetailTemplate": {
            "$ref": "#/components/schemas/ObjectDetailOutputTemplate"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "template": {
            "$ref": "#/components/schemas/MainOutputTemplate"
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeVM": {
        "required": [
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RObjectAttributeVM"
            },
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "linkTemplate": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "objectCreationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "searchTemplateJson": {
            "type": "string",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CObjectTypeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CObjectTypeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CPageElementFilter": {
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "htmlElementID": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "urlId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CPageElementFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CPageElementFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CPageElementVM": {
        "required": [
          "pageElementId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "htmlElementID": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "pageElementId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CPageElementVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CPageElementVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CPageLocationEnum": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "CPagePersonalVM": {
        "required": [
          "isFavourite",
          "isWatched",
          "pageId"
        ],
        "type": "object",
        "properties": {
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean"
          },
          "isWatched": {
            "type": "boolean"
          },
          "pageId": {
            "type": "integer",
            "format": "int32"
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MrRawValueVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CPageRouteVM": {
        "required": [
          "descriptionKey",
          "enumKey",
          "iconId",
          "nameKey",
          "orderNumber",
          "pageLocationId",
          "route"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageLocationId": {
            "$ref": "#/components/schemas/CPageLocationEnum"
          },
          "parentPageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "route": {
            "minLength": 1,
            "type": "string"
          },
          "template": {
            "$ref": "#/components/schemas/MainOutputTemplate"
          }
        },
        "additionalProperties": false
      },
      "CPageVM": {
        "required": [
          "pageId",
          "pageLocationId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "pageId": {
            "type": "integer",
            "format": "int32"
          },
          "pageLocationId": {
            "$ref": "#/components/schemas/CPageLocationEnum"
          },
          "parentPageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CPageVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CPageVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CRelationTypeEditVM": {
        "required": [
          "isOriented"
        ],
        "type": "object",
        "properties": {
          "defaultTranslationNameEn": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "isOriented": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "reverseRelationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CRelationTypeFeaturesVM": {
        "required": [
          "isOriented",
          "relationTypeId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CObjectRelationFeatureVM"
            },
            "nullable": true
          },
          "isOriented": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "relationNameEn": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "reverseRelationNameEn": {
            "type": "string",
            "nullable": true
          },
          "reverseRelationNameKey": {
            "type": "string",
            "nullable": true
          },
          "reverseRelationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CRelationTypeFeaturesVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CRelationTypeFeaturesVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CRelationTypeFilter": {
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "isOriented": {
            "type": "boolean",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "relationNameEn": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reverseRelationNameEn": {
            "type": "string",
            "nullable": true
          },
          "reverseRelationNameKey": {
            "type": "string",
            "nullable": true
          },
          "reverseRelationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CRelationTypeFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CRelationTypeFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CRelationTypeSimpleVM": {
        "required": [
          "relationTypeId"
        ],
        "type": "object",
        "properties": {
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CRelationTypeSimpleVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CRelationTypeSimpleVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CRelationTypeVM": {
        "required": [
          "isOriented",
          "relationTypeId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "isOriented": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "relationNameEn": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "reverseRelationNameEn": {
            "type": "string",
            "nullable": true
          },
          "reverseRelationNameKey": {
            "type": "string",
            "nullable": true
          },
          "reverseRelationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CRelationTypeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CRelationTypeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CTextEditorAiActionTypeEnum": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "CTextEditorAiActionVM": {
        "required": [
          "actionId",
          "actionTypeId",
          "orderNumber"
        ],
        "type": "object",
        "properties": {
          "actionId": {
            "type": "integer",
            "format": "int32"
          },
          "actionTypeId": {
            "$ref": "#/components/schemas/CTextEditorAiActionTypeEnum"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CTextEditorAiActionVM"
            },
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "parentActionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "queryKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CTextEditorAiSectionVM": {
        "required": [
          "isVisible",
          "sectionId"
        ],
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CTextEditorAiActionVM"
            },
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "isVisible": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "sectionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CTourFeatureEnum": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "CTourFeatureFilter": {
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CTourFeatureFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CTourFeatureFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CTourFeatureVM": {
        "required": [
          "descriptionKey",
          "enumKey",
          "nameKey",
          "tourFeatureId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "tourFeatureId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CTourFeatureVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CTourFeatureVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CTourStepStateEnum": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "CTourStepStateFilter": {
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CTourStepStateFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CTourStepStateFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CTourStepStateVM": {
        "required": [
          "descriptionKey",
          "enumKey",
          "nameKey",
          "tourStepStateId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "tourStepStateId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CTourStepStateVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CTourStepStateVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CTranslationFilter": {
        "type": "object",
        "properties": {
          "isProtected": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "lastChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastChangedUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastChangedUserName": {
            "type": "string",
            "nullable": true
          },
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CTranslationFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CTranslationFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CTranslationVM": {
        "required": [
          "isProtected",
          "lastChanged",
          "lastChangedUserColorHex",
          "lastChangedUserId",
          "lastChangedUserName",
          "translationId"
        ],
        "type": "object",
        "properties": {
          "isProtected": {
            "type": "boolean"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "lastChanged": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangedUserColorHex": {
            "minLength": 1,
            "type": "string"
          },
          "lastChangedUserId": {
            "type": "integer",
            "format": "int32"
          },
          "lastChangedUserName": {
            "minLength": 1,
            "type": "string"
          },
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "translationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CTranslationVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CTranslationVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CUserObjectRelationTypeFeatureVM": {
        "required": [
          "featureId",
          "featureValue"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "featureId": {
            "type": "integer",
            "format": "int32"
          },
          "featureValue": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CUserObjectRelationTypeSimpleVM": {
        "required": [
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CUserObjectRelationTypeSimpleVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CUserObjectRelationTypeSimpleVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChartColumn": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChartDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "api": {
            "type": "string",
            "nullable": true
          },
          "attributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartColumn"
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "elementType": {
            "enum": [
              "line",
              "bar",
              "pie",
              "number",
              "horizontalBar"
            ],
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartLine"
            },
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/ChartSettings"
          },
          "type": {
            "enum": [
              "chart"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "enum": [
              "objectsByType",
              "objectsInStates",
              "accessedObjectsBuckets",
              "applicationAccessedObjects",
              "spaceAccessedObjects"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChartDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "api": {
            "type": "string",
            "nullable": true
          },
          "attributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartColumn"
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "elementType": {
            "enum": [
              "line",
              "bar",
              "pie",
              "number",
              "horizontalBar"
            ],
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartLine"
            },
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/ChartSettings"
          },
          "type": {
            "enum": [
              "chart"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "enum": [
              "objectsByType",
              "objectsInStates",
              "accessedObjectsBuckets",
              "applicationAccessedObjects",
              "spaceAccessedObjects"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChartDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "api": {
            "type": "string",
            "nullable": true
          },
          "attributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartColumn"
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "elementType": {
            "enum": [
              "line",
              "bar",
              "pie",
              "number",
              "horizontalBar"
            ],
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartLine"
            },
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/ChartSettings"
          },
          "type": {
            "enum": [
              "chart"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "enum": [
              "objectsByType",
              "objectsInStates",
              "accessedObjectsBuckets",
              "applicationAccessedObjects",
              "spaceAccessedObjects"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChartLine": {
        "type": "object",
        "properties": {
          "params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartLineValue"
            },
            "nullable": true
          },
          "textPattern": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChartLineValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChartOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "api": {
            "type": "string",
            "nullable": true
          },
          "attributeTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartColumn"
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "elementType": {
            "enum": [
              "line",
              "bar",
              "pie",
              "number",
              "horizontalBar"
            ],
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartLine"
            },
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/ChartSettings"
          },
          "type": {
            "enum": [
              "chart"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "enum": [
              "objectsByType",
              "objectsInStates",
              "accessedObjectsBuckets",
              "applicationAccessedObjects",
              "spaceAccessedObjects"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChartSettings": {
        "required": [
          "axisX",
          "axisY",
          "legend",
          "valueAsPercents"
        ],
        "type": "object",
        "properties": {
          "axisX": {
            "type": "boolean"
          },
          "axisY": {
            "type": "boolean"
          },
          "legend": {
            "type": "boolean"
          },
          "legendPosition": {
            "enum": [
              "left",
              "top",
              "right",
              "bottom",
              "chartArea",
              "center"
            ],
            "type": "string",
            "nullable": true
          },
          "noValueText": {
            "type": "string",
            "nullable": true
          },
          "valueAsPercents": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ChatGptModelSettings": {
        "required": [
          "temperature"
        ],
        "type": "object",
        "properties": {
          "frequency_penalty": {
            "type": "number",
            "format": "double"
          },
          "max_tokens": {
            "type": "integer",
            "format": "int32"
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "presence_penalty": {
            "type": "number",
            "format": "double"
          },
          "temperature": {
            "type": "number",
            "format": "double"
          },
          "top_p": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ChatGptSettings": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "endpoint": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Checkbox": {
        "required": [
          "default",
          "key",
          "onEditDeletePassword",
          "type"
        ],
        "type": "object",
        "properties": {
          "default": {
            "type": "boolean"
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "labelKey": {
            "type": "string",
            "nullable": true
          },
          "labelVariant": {
            "enum": [
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "paragraph",
              "body1",
              "body1underline",
              "captionText1",
              "captionText1underline",
              "captionText1caps",
              "captionText2",
              "captionText3"
            ],
            "type": "string",
            "nullable": true
          },
          "onEditDeletePassword": {
            "type": "boolean"
          },
          "tooltipKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "checkbox"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ChildListDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "child-list"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ChildListDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "child-list"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ChildListDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "child-list"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ChildListOutputTemplate": {
        "required": [
          "objectTypeId",
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "child-list"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ChildMultisetVM": {
        "type": "object",
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataMultisetVM"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CloudIngestionToMrInput": {
        "required": [
          "dataSourceUuid",
          "endTime",
          "ingestionId",
          "ingestionStateEnum",
          "isSuccess",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "dataSourceUuid": {
            "type": "string",
            "format": "uuid"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "ingestionId": {
            "type": "integer",
            "format": "int32"
          },
          "ingestionStateEnum": {
            "$ref": "#/components/schemas/IngestionStateEnum"
          },
          "isSuccess": {
            "type": "boolean"
          },
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngestionLog"
            },
            "nullable": true
          },
          "metadataJson": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTableFilter": {
        "type": "object",
        "additionalProperties": false
      },
      "CodeTableFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CodeTableFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTableLabelDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "codetable-label"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeTableLabelValueDatabaseTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTableLabelDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "codetable-label"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeTableLabelValueDatabaseTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTableLabelDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "codetable-label"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeTableLabelValueDatabaseTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTableLabelOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "codetable-label"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeTableLabelValueVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTableLabelUserDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "codetable-label-user"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeTableLabelUserModelValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTableLabelUserDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "codetable-label-user"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeTableLabelUserModelValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTableLabelUserDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "codetable-label-user"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeTableLabelUserModelValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTableLabelUserModelValue": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "userRelationTypeKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTableLabelUserObjectTypeVM": {
        "required": [
          "descriptionKey",
          "enumKey",
          "nameKey",
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CodeTableLabelUserOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "codetable-label-user"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeTableLabelUserValueVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTableLabelUserValueVM": {
        "required": [
          "relationType"
        ],
        "type": "object",
        "properties": {
          "relationType": {
            "$ref": "#/components/schemas/UserRelationWithFeaturesVM"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTableLabelValueDatabaseTemplate": {
        "type": "object",
        "properties": {
          "applicationIds": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            ],
            "nullable": true
          },
          "applicationKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "relationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "spaceIds": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            ],
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTableLabelValueVM": {
        "required": [
          "objectType",
          "relationType"
        ],
        "type": "object",
        "properties": {
          "applicationIds": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            ],
            "nullable": true
          },
          "objectType": {
            "$ref": "#/components/schemas/CodeTableLabelUserObjectTypeVM"
          },
          "relationType": {
            "$ref": "#/components/schemas/ObjectRelationWithFeaturesVM"
          },
          "spaceIds": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            ],
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTableVM": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTableVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeTableVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodelistTableFilter": {
        "type": "object",
        "properties": {
          "isPublic": {
            "type": "boolean",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodelistTableFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CodelistTableFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodelistTableVm": {
        "type": "object",
        "properties": {
          "codelistTable": {
            "type": "boolean",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodelistTableVmPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodelistTableVm"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodetableSearchInputVM": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CollibraFullVM": {
        "type": "object",
        "properties": {
          "columnMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmColumnMappingVM"
            },
            "nullable": true
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmColumnVM"
            },
            "nullable": true
          },
          "externalColumnMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmColumnMappingVM"
            },
            "nullable": true
          },
          "externalMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmMappingVM"
            },
            "nullable": true
          },
          "externalTableMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmTableMappingVM"
            },
            "nullable": true
          },
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmMappingVM"
            },
            "nullable": true
          },
          "modelMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmSourceModelVM"
            },
            "nullable": true
          },
          "models": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmModelVM"
            },
            "nullable": true
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmPackageVM"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmPermissionVM"
            },
            "nullable": true
          },
          "referenceColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmReferenceColumnVM"
            },
            "nullable": true
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmReferenceVM"
            },
            "nullable": true
          },
          "tableMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmTableMappingVM"
            },
            "nullable": true
          },
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmTableVM"
            },
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmUserVM"
            },
            "nullable": true
          },
          "viewColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmViewColumnVM"
            },
            "nullable": true
          },
          "views": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmViewVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CollibraModelVersionGroupedVM": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "versionNumbers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CollibraModelVersionVM": {
        "required": [
          "versionNumber"
        ],
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "versionNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ColumnDefVM": {
        "required": [
          "filterable",
          "sortable"
        ],
        "type": "object",
        "properties": {
          "accessor": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "filterable": {
            "type": "boolean"
          },
          "filterFieldName": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sortable": {
            "type": "boolean"
          },
          "titleKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ColumnDefVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColumnDefVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConnectionVM": {
        "required": [
          "connectionId"
        ],
        "type": "object",
        "properties": {
          "connectionId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CryptoResultVM": {
        "required": [
          "resultText"
        ],
        "type": "object",
        "properties": {
          "resultText": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DDataSourceVM": {
        "type": "object",
        "properties": {
          "dataSourceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DDiagramDetailVM": {
        "required": [
          "diagramDetailId"
        ],
        "type": "object",
        "properties": {
          "diagramAnnotation": {
            "type": "string",
            "nullable": true
          },
          "diagramBelongsTo": {
            "type": "string",
            "nullable": true
          },
          "diagramCode": {
            "type": "string",
            "nullable": true
          },
          "diagramDescription": {
            "type": "string",
            "nullable": true
          },
          "diagramDetailId": {
            "type": "integer",
            "format": "int32"
          },
          "diagramName": {
            "type": "string",
            "nullable": true
          },
          "diagramPackage": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DDiagramObjectFilter": {
        "type": "object",
        "properties": {
          "diagramCode": {
            "type": "string",
            "nullable": true
          },
          "diagramObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectComment": {
            "type": "string",
            "nullable": true
          },
          "objectModel": {
            "type": "string",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectStereotype": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DDiagramObjectFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DDiagramObjectFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DDiagramObjectVM": {
        "type": "object",
        "properties": {
          "diagramCode": {
            "type": "string",
            "nullable": true
          },
          "diagramObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectComment": {
            "type": "string",
            "nullable": true
          },
          "objectModel": {
            "type": "string",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectStereotype": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DDiagramObjectVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DDiagramObjectVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DDomainDetailVM": {
        "required": [
          "domainDetailId",
          "modelId",
          "tagId"
        ],
        "type": "object",
        "properties": {
          "annotation": {
            "type": "string",
            "nullable": true
          },
          "characterSet": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "domainCode": {
            "type": "string",
            "nullable": true
          },
          "domainDescription": {
            "type": "string",
            "nullable": true
          },
          "domainDetailId": {
            "type": "integer",
            "format": "int32"
          },
          "domainMandatory": {
            "type": "string",
            "nullable": true
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "lowercase": {
            "type": "string",
            "nullable": true
          },
          "maxValue": {
            "type": "string",
            "nullable": true
          },
          "minValue": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32"
          },
          "tagId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "uppercase": {
            "type": "string",
            "nullable": true
          },
          "valuesList": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DDomainUsedInFilter": {
        "type": "object",
        "properties": {
          "domainColumn": {
            "type": "string",
            "nullable": true
          },
          "domainDescription": {
            "type": "string",
            "nullable": true
          },
          "domainMandatory": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DDomainUsedInFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DDomainUsedInFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DDomainUsedInVM": {
        "type": "object",
        "properties": {
          "domainColumn": {
            "type": "string",
            "nullable": true
          },
          "domainDescription": {
            "type": "string",
            "nullable": true
          },
          "domainMandatory": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DDomainUsedInVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DDomainUsedInVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DElementDefinitionFilter": {
        "type": "object",
        "properties": {
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "dataSourceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dataSourceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "elementDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "elementType": {
            "type": "string",
            "nullable": true
          },
          "elementTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "elementTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "parentElementDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileName": {
            "type": "string",
            "nullable": true
          },
          "windowDefinitionName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DElementDefinitionFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DElementDefinitionFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DElementDefinitionOldVM": {
        "required": [
          "elementDefinitionId"
        ],
        "type": "object",
        "properties": {
          "cssValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dataSource": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dataSourceId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "elementDefinitionId": {
            "type": "integer",
            "format": "int32"
          },
          "elementSize": {
            "type": "string",
            "nullable": true
          },
          "elementSizeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "elementType": {
            "type": "string",
            "nullable": true
          },
          "elementTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "parentElementDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userDefinedPageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DElementDefinitionVM": {
        "type": "object",
        "properties": {
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "dataSourceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dataSources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DDataSourceVM"
            },
            "nullable": true
          },
          "elementDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "elementType": {
            "type": "string",
            "nullable": true
          },
          "elementTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "parentElementDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileName": {
            "type": "string",
            "nullable": true
          },
          "windowDefinitionName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DElementDefinitionVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DElementDefinitionVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DMappingDetailFilter": {
        "type": "object",
        "properties": {
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "designStatus": {
            "type": "string",
            "nullable": true
          },
          "executionCondition": {
            "type": "string",
            "nullable": true
          },
          "mappedTo": {
            "type": "string",
            "nullable": true
          },
          "mappingAnnotation": {
            "type": "string",
            "nullable": true
          },
          "mappingCode": {
            "type": "string",
            "nullable": true
          },
          "mappingComment": {
            "type": "string",
            "nullable": true
          },
          "mappingDetailId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mappingStatus": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "odsDataHistory": {
            "type": "string",
            "nullable": true
          },
          "replicationStyle": {
            "type": "string",
            "nullable": true
          },
          "responsibleAnalyst": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetWhere": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DMappingDetailFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DMappingDetailFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelChangeFilter": {
        "type": "object",
        "properties": {
          "changeText": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelChangesId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelChangeFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DModelChangeFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelChangeVM": {
        "type": "object",
        "properties": {
          "changeText": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelChangesId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelChangeVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DModelChangeVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelDescriptionVM": {
        "type": "object",
        "properties": {
          "annotation": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "databaseName": {
            "type": "string",
            "nullable": true
          },
          "dbms": {
            "type": "string",
            "nullable": true
          },
          "defaultDiagram": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelPath": {
            "type": "string",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "ownerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "standardModelFilename": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelDiagramFilter": {
        "type": "object",
        "properties": {
          "diagramCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelDiagramId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelDiagramFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DModelDiagramFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelDiagramVM": {
        "type": "object",
        "properties": {
          "diagramCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelDiagramId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelDiagramVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DModelDiagramVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelDomainFilter": {
        "type": "object",
        "properties": {
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "domainCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelDomainId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelDomainFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DModelDomainFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelDomainVM": {
        "type": "object",
        "properties": {
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "domainCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelDomainId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelDomainVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DModelDomainVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelOverviewExtendedFilter": {
        "type": "object",
        "properties": {
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "companyCode": {
            "type": "string",
            "nullable": true
          },
          "databaseName": {
            "type": "string",
            "nullable": true
          },
          "diagrams": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "domains": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelOverviewId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelParametrizationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "procedures": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rules": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "stereotypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tables": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "views": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "visited": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelOverviewExtendedFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DModelOverviewExtendedFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelOverviewExtendedVM": {
        "type": "object",
        "properties": {
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "companyCode": {
            "type": "string",
            "nullable": true
          },
          "databaseName": {
            "type": "string",
            "nullable": true
          },
          "diagrams": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "domains": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelOverviewId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelParametrizationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "procedures": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rules": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "stereotypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tables": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "views": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "visited": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelOverviewExtendedVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DModelOverviewExtendedVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelOverviewFilter": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string",
            "nullable": true
          },
          "companyCode": {
            "type": "string",
            "nullable": true
          },
          "databaseName": {
            "type": "string",
            "nullable": true
          },
          "diagrams": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "domains": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelOverviewId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelParametrizationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "procedures": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rules": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "stereotypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tables": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "views": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelOverviewFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DModelOverviewFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelOverviewVM": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string",
            "nullable": true
          },
          "companyCode": {
            "type": "string",
            "nullable": true
          },
          "databaseName": {
            "type": "string",
            "nullable": true
          },
          "diagrams": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "domains": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelOverviewId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelParametrizationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "procedures": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rules": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "stereotypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tables": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "views": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelOverviewVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DModelOverviewVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelProcedureFilter": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelProcedureId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "procedureCode": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelProcedureFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DModelProcedureFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelProcedureVM": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelProcedureId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "procedureCode": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelProcedureVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DModelProcedureVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelRuleFilter": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelRuleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "ruleCode": {
            "type": "string",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelRuleFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DModelRuleFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelRuleVM": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelRuleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "ruleCode": {
            "type": "string",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelRuleVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DModelRuleVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelSourceModelFilter": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelSourceModelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceModelCode": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelSourceModelFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DModelSourceModelFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelSourceModelVM": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelSourceModelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceModelCode": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelSourceModelVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DModelSourceModelVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelSourceTableFilter": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelSourceTableId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceModelCode": {
            "type": "string",
            "nullable": true
          },
          "sourceObjectType": {
            "type": "string",
            "nullable": true
          },
          "sourceTableCode": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelSourceTableFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DModelSourceTableFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelSourceTableVM": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelSourceTableId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceModelCode": {
            "type": "string",
            "nullable": true
          },
          "sourceObjectType": {
            "type": "string",
            "nullable": true
          },
          "sourceTableCode": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelSourceTableVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DModelSourceTableVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelTableFilter": {
        "type": "object",
        "properties": {
          "generated": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelTableId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelTableFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DModelTableFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelTableVM": {
        "type": "object",
        "properties": {
          "generated": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelTableId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelTableVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DModelTableVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelTargetModelFilter": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetModelCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelTargetModelFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DModelTargetModelFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelTargetModelVM": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetModelCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelTargetModelVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DModelTargetModelVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelTargetTableFilter": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetModelCode": {
            "type": "string",
            "nullable": true
          },
          "targetTableCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelTargetTableFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DModelTargetTableFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelTargetTableVM": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetModelCode": {
            "type": "string",
            "nullable": true
          },
          "targetTableCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelTargetTableVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DModelTargetTableVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelUsersFilter": {
        "type": "object",
        "properties": {
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "userCode": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelUsersFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DModelUsersFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelViewFilter": {
        "type": "object",
        "properties": {
          "generated": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelViewId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "viewCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelViewFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DModelViewFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelViewVM": {
        "type": "object",
        "properties": {
          "generated": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelViewId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "viewCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DModelViewVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DModelViewVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DObjectCountVM": {
        "required": [
          "diagramCount",
          "domainCount",
          "procedureCount",
          "ruleCount",
          "tableCount",
          "viewCount"
        ],
        "type": "object",
        "properties": {
          "diagramCount": {
            "type": "integer",
            "format": "int32"
          },
          "domainCount": {
            "type": "integer",
            "format": "int32"
          },
          "procedureCount": {
            "type": "integer",
            "format": "int32"
          },
          "ruleCount": {
            "type": "integer",
            "format": "int32"
          },
          "tableCount": {
            "type": "integer",
            "format": "int32"
          },
          "viewCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DObjectVM": {
        "required": [
          "dislikeCount",
          "dislikedByCurrentUser",
          "likeCount",
          "likedByCurrentUser",
          "objectId"
        ],
        "type": "object",
        "properties": {
          "dislikeCount": {
            "type": "integer",
            "format": "int32"
          },
          "dislikedByCurrentUser": {
            "type": "boolean"
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "likeCount": {
            "type": "integer",
            "format": "int32"
          },
          "likedByCurrentUser": {
            "type": "boolean"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DProcedureDetailVM": {
        "required": [
          "modelId",
          "procedureDetailId",
          "tagId"
        ],
        "type": "object",
        "properties": {
          "annotation": {
            "type": "string",
            "nullable": true
          },
          "beginScript": {
            "type": "string",
            "nullable": true
          },
          "definition": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "endScript": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32"
          },
          "procedureCode": {
            "type": "string",
            "nullable": true
          },
          "procedureComment": {
            "type": "string",
            "nullable": true
          },
          "procedureDetailId": {
            "type": "integer",
            "format": "int32"
          },
          "procedureStereotype": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DProfileAddVM": {
        "type": "object",
        "properties": {
          "isDefault": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DProfileFilter": {
        "type": "object",
        "properties": {
          "dictionaryProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DProfileFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DProfileFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DProfileVM": {
        "required": [
          "dictionaryProfileId"
        ],
        "type": "object",
        "properties": {
          "dictionaryProfileId": {
            "type": "integer",
            "format": "int32"
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DProfileVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DProfileVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DRuleDetailVM": {
        "required": [
          "ruleDetailId"
        ],
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ruleAnnotation": {
            "type": "string",
            "nullable": true
          },
          "ruleClientExpression": {
            "type": "string",
            "nullable": true
          },
          "ruleCode": {
            "type": "string",
            "nullable": true
          },
          "ruleComment": {
            "type": "string",
            "nullable": true
          },
          "ruleDescription": {
            "type": "string",
            "nullable": true
          },
          "ruleDetailId": {
            "type": "integer",
            "format": "int32"
          },
          "ruleName": {
            "type": "string",
            "nullable": true
          },
          "ruleServerExpression": {
            "type": "string",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DRuleUsedInFilter": {
        "type": "object",
        "properties": {
          "levelOne": {
            "type": "string",
            "nullable": true
          },
          "levelTwo": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "ruleCode": {
            "type": "string",
            "nullable": true
          },
          "ruleUsedInId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DRuleUsedInFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DRuleUsedInFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DRuleUsedInVM": {
        "type": "object",
        "properties": {
          "levelOne": {
            "type": "string",
            "nullable": true
          },
          "levelTwo": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "ruleCode": {
            "type": "string",
            "nullable": true
          },
          "ruleUsedInId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DRuleUsedInVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DRuleUsedInVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DSelectedColumnFilter": {
        "type": "object",
        "properties": {
          "columnName": {
            "type": "string",
            "nullable": true
          },
          "dataSourceColumnId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "elementDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "elementName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileName": {
            "type": "string",
            "nullable": true
          },
          "selectedColumnId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "windowDefinitionName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DSelectedColumnFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DSelectedColumnFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DSelectedColumnInputVM": {
        "required": [
          "dataSourceColumnId"
        ],
        "type": "object",
        "properties": {
          "dataSourceColumnId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DSelectedColumnVM": {
        "required": [
          "dataSourceColumnId",
          "elementDefinitionId",
          "position",
          "selectedColumnId"
        ],
        "type": "object",
        "properties": {
          "columnName": {
            "type": "string",
            "nullable": true
          },
          "dataSourceColumnId": {
            "type": "integer",
            "format": "int32"
          },
          "elementDefinitionId": {
            "type": "integer",
            "format": "int32"
          },
          "elementName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "profileName": {
            "type": "string",
            "nullable": true
          },
          "selectedColumnId": {
            "type": "integer",
            "format": "int32"
          },
          "windowDefinitionName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DSelectedColumnVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DSelectedColumnVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableColumnsFilter": {
        "type": "object",
        "properties": {
          "annotation": {
            "type": "string",
            "nullable": true
          },
          "columnCode": {
            "type": "string",
            "nullable": true
          },
          "compress": {
            "type": "string",
            "nullable": true
          },
          "datatype": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "foreignKey": {
            "type": "string",
            "nullable": true
          },
          "listValue": {
            "type": "string",
            "nullable": true
          },
          "lowercaseOnly": {
            "type": "string",
            "nullable": true
          },
          "mandatory": {
            "type": "string",
            "nullable": true
          },
          "maxValue": {
            "type": "string",
            "nullable": true
          },
          "minValue": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "primaryKey": {
            "type": "string",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableColumnsId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unicode": {
            "type": "string",
            "nullable": true
          },
          "uppercaseOnly": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableColumnsFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DTableColumnsFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableColumnsVM": {
        "type": "object",
        "properties": {
          "annotation": {
            "type": "string",
            "nullable": true
          },
          "columnCode": {
            "type": "string",
            "nullable": true
          },
          "compress": {
            "type": "string",
            "nullable": true
          },
          "datatype": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "foreignKey": {
            "type": "string",
            "nullable": true
          },
          "listValue": {
            "type": "string",
            "nullable": true
          },
          "lowercaseOnly": {
            "type": "string",
            "nullable": true
          },
          "mandatory": {
            "type": "string",
            "nullable": true
          },
          "maxValue": {
            "type": "string",
            "nullable": true
          },
          "minValue": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "primaryKey": {
            "type": "string",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableColumnsId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unicode": {
            "type": "string",
            "nullable": true
          },
          "uppercaseOnly": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableColumnsVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTableColumnsVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableDescriptionVM": {
        "required": [
          "tableDescriptionId"
        ],
        "type": "object",
        "properties": {
          "annotation": {
            "type": "string",
            "nullable": true
          },
          "beginScript": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "generated": {
            "type": "string",
            "nullable": true
          },
          "historizationKind": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "originalCode": {
            "type": "string",
            "nullable": true
          },
          "packageCode": {
            "type": "string",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableDescriptionId": {
            "type": "integer",
            "format": "int32"
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableDiagramsFilter": {
        "type": "object",
        "properties": {
          "diagramCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableDiagramsId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableDiagramsFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DTableDiagramsFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableDiagramsVM": {
        "type": "object",
        "properties": {
          "diagramCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableDiagramsId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableDiagramsVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTableDiagramsVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableIncomingReferencesFilter": {
        "type": "object",
        "properties": {
          "childColumn": {
            "type": "string",
            "nullable": true
          },
          "childModelCode": {
            "type": "string",
            "nullable": true
          },
          "childObject": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentColumn": {
            "type": "string",
            "nullable": true
          },
          "referenceCode": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableIncomingReferencesId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableIncomingReferencesFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DTableIncomingReferencesFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableIncomingReferencesVM": {
        "type": "object",
        "properties": {
          "childColumn": {
            "type": "string",
            "nullable": true
          },
          "childModelCode": {
            "type": "string",
            "nullable": true
          },
          "childObject": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentColumn": {
            "type": "string",
            "nullable": true
          },
          "referenceCode": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableIncomingReferencesId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableIncomingReferencesVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTableIncomingReferencesVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableIndexesFilter": {
        "type": "object",
        "properties": {
          "columnCode": {
            "type": "string",
            "nullable": true
          },
          "generated": {
            "type": "string",
            "nullable": true
          },
          "indexCode": {
            "type": "string",
            "nullable": true
          },
          "indexUnique": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableIndexesId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableIndexesFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DTableIndexesFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableIndexesVM": {
        "type": "object",
        "properties": {
          "columnCode": {
            "type": "string",
            "nullable": true
          },
          "generated": {
            "type": "string",
            "nullable": true
          },
          "indexCode": {
            "type": "string",
            "nullable": true
          },
          "indexUnique": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableIndexesId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableIndexesVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTableIndexesVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableOutgoingReferencesFilter": {
        "type": "object",
        "properties": {
          "childColumn": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentColumn": {
            "type": "string",
            "nullable": true
          },
          "parentModelCode": {
            "type": "string",
            "nullable": true
          },
          "parentObject": {
            "type": "string",
            "nullable": true
          },
          "referenceCode": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableOutgoingReferencesId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableOutgoingReferencesFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DTableOutgoingReferencesFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableOutgoingReferencesVM": {
        "type": "object",
        "properties": {
          "childColumn": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentColumn": {
            "type": "string",
            "nullable": true
          },
          "parentModelCode": {
            "type": "string",
            "nullable": true
          },
          "parentObject": {
            "type": "string",
            "nullable": true
          },
          "referenceCode": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableOutgoingReferencesId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableOutgoingReferencesVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTableOutgoingReferencesVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableRulesFilter": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "ruleCode": {
            "type": "string",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableRulesId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "usedIn": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableRulesFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DTableRulesFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableRulesVM": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "ruleCode": {
            "type": "string",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableRulesId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "usedIn": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableRulesVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTableRulesVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableSourceColumnsFilter": {
        "type": "object",
        "properties": {
          "columnCode": {
            "type": "string",
            "nullable": true
          },
          "columnMandatory": {
            "type": "string",
            "nullable": true
          },
          "columnMappingComment": {
            "type": "string",
            "nullable": true
          },
          "columnNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnType": {
            "type": "string",
            "nullable": true
          },
          "mappedTo": {
            "type": "string",
            "nullable": true
          },
          "mappingCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceColumnCode": {
            "type": "string",
            "nullable": true
          },
          "sourceColumnMandatory": {
            "type": "string",
            "nullable": true
          },
          "sourceColumnNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceColumnType": {
            "type": "string",
            "nullable": true
          },
          "sourceModelCode": {
            "type": "string",
            "nullable": true
          },
          "sourceObjectType": {
            "type": "string",
            "nullable": true
          },
          "sourceTableCode": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableSourceColumnsId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableSourceColumnsFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DTableSourceColumnsFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableSourceColumnsVM": {
        "type": "object",
        "properties": {
          "columnCode": {
            "type": "string",
            "nullable": true
          },
          "columnMandatory": {
            "type": "string",
            "nullable": true
          },
          "columnMappingComment": {
            "type": "string",
            "nullable": true
          },
          "columnNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnType": {
            "type": "string",
            "nullable": true
          },
          "mappedTo": {
            "type": "string",
            "nullable": true
          },
          "mappingCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceColumnCode": {
            "type": "string",
            "nullable": true
          },
          "sourceColumnMandatory": {
            "type": "string",
            "nullable": true
          },
          "sourceColumnNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceColumnType": {
            "type": "string",
            "nullable": true
          },
          "sourceModelCode": {
            "type": "string",
            "nullable": true
          },
          "sourceObjectType": {
            "type": "string",
            "nullable": true
          },
          "sourceTableCode": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableSourceColumnsId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableSourceColumnsVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTableSourceColumnsVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableSourceTablesFilter": {
        "type": "object",
        "properties": {
          "mappingCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceModelCode": {
            "type": "string",
            "nullable": true
          },
          "sourceModelCode2": {
            "type": "string",
            "nullable": true
          },
          "sourceObjectType": {
            "type": "string",
            "nullable": true
          },
          "sourceTableCode": {
            "type": "string",
            "nullable": true
          },
          "sourceTableCode2": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableSourceTablesId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableSourceTablesFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DTableSourceTablesFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableSourceTablesVM": {
        "type": "object",
        "properties": {
          "mappingCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceModelCode": {
            "type": "string",
            "nullable": true
          },
          "sourceModelCode2": {
            "type": "string",
            "nullable": true
          },
          "sourceObjectType": {
            "type": "string",
            "nullable": true
          },
          "sourceTableCode": {
            "type": "string",
            "nullable": true
          },
          "sourceTableCode2": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableSourceTablesId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableSourceTablesVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTableSourceTablesVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetColumnsFilter": {
        "type": "object",
        "properties": {
          "columnCode": {
            "type": "string",
            "nullable": true
          },
          "columnMandatory": {
            "type": "string",
            "nullable": true
          },
          "columnNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnType": {
            "type": "string",
            "nullable": true
          },
          "mappingCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetColumnCode": {
            "type": "string",
            "nullable": true
          },
          "targetColumnMandatory": {
            "type": "string",
            "nullable": true
          },
          "targetColumnNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetColumnType": {
            "type": "string",
            "nullable": true
          },
          "targetModelCode": {
            "type": "string",
            "nullable": true
          },
          "targetTableCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetColumnsFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DTableTargetColumnsFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetColumnsVM": {
        "type": "object",
        "properties": {
          "columnCode": {
            "type": "string",
            "nullable": true
          },
          "columnMandatory": {
            "type": "string",
            "nullable": true
          },
          "columnNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnType": {
            "type": "string",
            "nullable": true
          },
          "mappingCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetColumnCode": {
            "type": "string",
            "nullable": true
          },
          "targetColumnMandatory": {
            "type": "string",
            "nullable": true
          },
          "targetColumnNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetColumnType": {
            "type": "string",
            "nullable": true
          },
          "targetModelCode": {
            "type": "string",
            "nullable": true
          },
          "targetTableCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetColumnsVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTableTargetColumnsVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetReportItemsFilter": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reportCode": {
            "type": "string",
            "nullable": true
          },
          "reportItemCode": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableTargetReportItemsId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetColumnCode": {
            "type": "string",
            "nullable": true
          },
          "targetModelCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetReportItemsFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DTableTargetReportItemsFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetReportItemsVM": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reportCode": {
            "type": "string",
            "nullable": true
          },
          "reportItemCode": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableTargetReportItemsId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetColumnCode": {
            "type": "string",
            "nullable": true
          },
          "targetModelCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetReportItemsVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTableTargetReportItemsVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetReportsFilter": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableTargetReportsId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetReportCode": {
            "type": "string",
            "nullable": true
          },
          "targetReportModelCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetReportsFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DTableTargetReportsFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetReportsVM": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableTargetReportsId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetReportCode": {
            "type": "string",
            "nullable": true
          },
          "targetReportModelCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetReportsVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTableTargetReportsVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetTablesFilter": {
        "type": "object",
        "properties": {
          "mappingCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetModelCode": {
            "type": "string",
            "nullable": true
          },
          "targetTableCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetTablesFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DTableTargetTablesFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetTablesVM": {
        "type": "object",
        "properties": {
          "mappingCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetModelCode": {
            "type": "string",
            "nullable": true
          },
          "targetTableCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTableTargetTablesVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTableTargetTablesVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DUserDefinedPageFilter": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dictionaryProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileName": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updater": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userDefinedPageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "windowDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "windowDefinitionName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DUserDefinedPageFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DUserDefinedPageFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DUserDefinedPageSimplifiedVM": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DUserDefinedPageSimplifiedVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DUserDefinedPageSimplifiedVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DUserDescriptionVM": {
        "type": "object",
        "properties": {
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "userCode": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DUserDescriptionVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DUserDescriptionVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DUserOwnerIn": {
        "required": [
          "userOwnerInId"
        ],
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelObjectType": {
            "type": "string",
            "nullable": true
          },
          "objectCode": {
            "type": "string",
            "nullable": true
          },
          "objectOwner": {
            "type": "string",
            "nullable": true
          },
          "userOwnerInId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DUserOwnerInFilter": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelObjectType": {
            "type": "string",
            "nullable": true
          },
          "objectCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DUserOwnerInFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DUserOwnerInFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DUserOwnerInPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DUserOwnerIn"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DViewColumnFilter": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "viewCode": {
            "type": "string",
            "nullable": true
          },
          "viewColumnCode": {
            "type": "string",
            "nullable": true
          },
          "viewColumnExpression": {
            "type": "string",
            "nullable": true
          },
          "viewColumnNbr": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DViewColumnFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DViewColumnFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DViewColumnVM": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "viewCode": {
            "type": "string",
            "nullable": true
          },
          "viewColumnCode": {
            "type": "string",
            "nullable": true
          },
          "viewColumnExpression": {
            "type": "string",
            "nullable": true
          },
          "viewColumnNbr": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DViewColumnVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DViewColumnVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DViewDetailVM": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "viewAnnotation": {
            "type": "string",
            "nullable": true
          },
          "viewCode": {
            "type": "string",
            "nullable": true
          },
          "viewComment": {
            "type": "string",
            "nullable": true
          },
          "viewDescription": {
            "type": "string",
            "nullable": true
          },
          "viewGenerated": {
            "type": "string",
            "nullable": true
          },
          "viewPackage": {
            "type": "string",
            "nullable": true
          },
          "viewSQLQuery": {
            "type": "string",
            "nullable": true
          },
          "viewStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationConnectionFilter": {
        "type": "object",
        "properties": {
          "connectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "connectionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dataSourcesCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "lastUsed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationConnectionFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DataIntegrationConnectionFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationConnectionInput": {
        "required": [
          "providerId"
        ],
        "type": "object",
        "properties": {
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationConnectionOverviewVm": {
        "required": [
          "connectionId",
          "connectionTypeId",
          "dataSourcesCount"
        ],
        "type": "object",
        "properties": {
          "connectionId": {
            "type": "integer",
            "format": "int32"
          },
          "connectionTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "dataSourcesCount": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "lastUsed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "providerNameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationConnectionOverviewVmPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataIntegrationConnectionOverviewVm"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationConnectionResponse": {
        "required": [
          "connectionId",
          "connectionTypeId",
          "providerId"
        ],
        "type": "object",
        "properties": {
          "connectionId": {
            "type": "integer",
            "format": "int32"
          },
          "connectionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "connectionTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "providerEnumKy": {
            "type": "string",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationDataSourceConfigVm": {
        "type": "object",
        "properties": {
          "configuration": {
            "type": "string",
            "nullable": true
          },
          "dataSource": {
            "$ref": "#/components/schemas/DataIntegrationDataSourceVm"
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationDataSourceConnectionVm": {
        "required": [
          "applicationId",
          "providerId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "connections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectionVM"
            },
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationDataSourceConnectionVmPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataIntegrationDataSourceConnectionVm"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationDataSourceFilter": {
        "type": "object",
        "properties": {
          "application": {
            "type": "string",
            "nullable": true
          },
          "changes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "connectionName": {
            "type": "string",
            "nullable": true
          },
          "connectionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dataSourceType": {
            "type": "string",
            "nullable": true
          },
          "dataSourceVersion": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "lastRun": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nextRun": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationDataSourceFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DataIntegrationDataSourceFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationDataSourceInput": {
        "required": [
          "applicationId",
          "connectionId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "connectionId": {
            "type": "integer",
            "format": "int32"
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationDataSourceOverviewVm": {
        "required": [
          "dataSourceId",
          "isActive",
          "isRemote",
          "status"
        ],
        "type": "object",
        "properties": {
          "application": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "changes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "connectionName": {
            "type": "string",
            "nullable": true
          },
          "dataSourceId": {
            "type": "integer",
            "format": "int32"
          },
          "dataSourceTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "dataSourceVersionNameKey": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isRemote": {
            "type": "boolean"
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "lastRun": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nextRun": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "runtimeTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationDataSourceOverviewVmPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataIntegrationDataSourceOverviewVm"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationDataSourceResponse": {
        "required": [
          "applicationId",
          "connectionId",
          "dataSourceId",
          "dataSourceVersionId",
          "isActive",
          "isRemote"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "connectionId": {
            "type": "integer",
            "format": "int32"
          },
          "connectionName": {
            "type": "string",
            "nullable": true
          },
          "dataSourceId": {
            "type": "integer",
            "format": "int32"
          },
          "dataSourceVersionEnumKey": {
            "type": "string",
            "nullable": true
          },
          "dataSourceVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isRemote": {
            "type": "boolean"
          },
          "nextRun": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationDataSourceSpaceFilter": {
        "type": "object",
        "properties": {
          "spaceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationDataSourceSpaceFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DataIntegrationDataSourceSpaceFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationDataSourceSpaceVm": {
        "required": [
          "iconId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationDataSourceSpaceVmPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataIntegrationDataSourceSpaceVm"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationDataSourceVm": {
        "required": [
          "applicationId",
          "connectionId",
          "connectionTypeId",
          "dataSourceId",
          "dataSourceVersionId",
          "guid",
          "spaceId",
          "state",
          "workflowId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "connectionId": {
            "type": "integer",
            "format": "int32"
          },
          "connectionName": {
            "type": "string",
            "nullable": true
          },
          "connectionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "dataSourceId": {
            "type": "integer",
            "format": "int32"
          },
          "dataSourceVersionEnumKey": {
            "type": "string",
            "nullable": true
          },
          "dataSourceVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "runtimeTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "schedule": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "$ref": "#/components/schemas/DataSourceStateEnum"
          },
          "workflowId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationProviderCategoryVm": {
        "required": [
          "categoryId"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationProviderResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataIntegrationProviderCategoryVm"
            },
            "nullable": true
          },
          "providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataIntegrationProviderVm"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationProviderVm": {
        "required": [
          "isInstalled",
          "providerId"
        ],
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "documentationLink": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isInstalled": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DataIntegrationTestConnectionInput": {
        "required": [
          "properties",
          "providerId"
        ],
        "type": "object",
        "properties": {
          "properties": {
            "type": "object",
            "additionalProperties": { }
          },
          "providerId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DataMultisetVM": {
        "type": "object",
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildMultisetVM"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataMultisetVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataMultisetVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataSourceStateEnum": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "DatabaseDiagramType": {
        "type": "object",
        "properties": {
          "default": {
            "$ref": "#/components/schemas/DiagramTypeDefaultTemplate"
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          },
          "metamodelKey": {
            "enum": [
              "data_lineage",
              "entity_relation",
              "relation"
            ],
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "object-relations",
              "diagram"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DatabaseSettingsPatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "attributeLayout": {
            "enum": [
              "single-row",
              "multiline"
            ],
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "header": {
            "$ref": "#/components/schemas/HeaderSectionDatabaseSettings"
          },
          "hide": {
            "$ref": "#/components/schemas/HideDatabaseSectionSettings"
          },
          "layout": {
            "enum": [
              "default",
              "no-panel-border"
            ],
            "type": "string",
            "nullable": true
          },
          "rightPanelClosed": {
            "type": "boolean",
            "nullable": true
          },
          "type": {
            "enum": [
              "template-settings"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DatabaseSettingsPatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "attributeLayout": {
            "enum": [
              "single-row",
              "multiline"
            ],
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "header": {
            "$ref": "#/components/schemas/HeaderSectionDatabaseSettings"
          },
          "hide": {
            "$ref": "#/components/schemas/HideDatabaseSectionSettings"
          },
          "layout": {
            "enum": [
              "default",
              "no-panel-border"
            ],
            "type": "string",
            "nullable": true
          },
          "rightPanelClosed": {
            "type": "boolean",
            "nullable": true
          },
          "type": {
            "enum": [
              "template-settings"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DatabaseSettingsTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "attributeLayout": {
            "enum": [
              "single-row",
              "multiline"
            ],
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "header": {
            "$ref": "#/components/schemas/HeaderSectionDatabaseSettings"
          },
          "hide": {
            "$ref": "#/components/schemas/HideDatabaseSectionSettings"
          },
          "layout": {
            "enum": [
              "default",
              "no-panel-border"
            ],
            "type": "string",
            "nullable": true
          },
          "rightPanelClosed": {
            "type": "boolean",
            "nullable": true
          },
          "type": {
            "enum": [
              "template-settings"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DatabaseTemplateMultiRelationModelValues": {
        "type": "object",
        "properties": {
          "elementType": {
            "enum": [
              "split-column-link",
              "split-object-link"
            ],
            "type": "string",
            "nullable": true
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "titles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DawisoErrorResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DawisoErrorResponsePagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DawisoErrorResponse"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DawisoStatusResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DdlColumnMV": {
        "required": [
          "nullable"
        ],
        "type": "object",
        "properties": {
          "casespecific": {
            "type": "string",
            "nullable": true
          },
          "characterset": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "compress": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nullable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DdlIndexVM": {
        "required": [
          "clustered",
          "unique"
        ],
        "type": "object",
        "properties": {
          "clustered": {
            "type": "boolean"
          },
          "columns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "partitionBy": {
            "type": "string",
            "nullable": true
          },
          "partitionExpression": {
            "type": "string",
            "nullable": true
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "unique": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DdlWithDatabaseAndIndexInputVM": {
        "type": "object",
        "properties": {
          "databaseName": {
            "type": "string",
            "nullable": true
          },
          "indexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexInputVM"
            },
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DdlWithDatabaseInputVM": {
        "type": "object",
        "properties": {
          "databaseName": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DecryptInputVM": {
        "required": [
          "encryptedText",
          "password"
        ],
        "type": "object",
        "properties": {
          "encryptedText": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DefaultDatabaseSortVM": {
        "type": "object",
        "properties": {
          "predicate": {
            "type": "string",
            "nullable": true
          },
          "reverse": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DefaultLabelsVM": {
        "required": [
          "sortOrder",
          "typeId"
        ],
        "type": "object",
        "properties": {
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "typeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DefaultOutputSortVM": {
        "required": [
          "reverse"
        ],
        "type": "object",
        "properties": {
          "predicate": {
            "type": "string",
            "nullable": true
          },
          "reverse": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DiagramTypeDefaultTemplate": {
        "required": [
          "incomingFlow",
          "outgoingFlow"
        ],
        "type": "object",
        "properties": {
          "incomingFlow": {
            "type": "integer",
            "format": "int32"
          },
          "openStrategy": {
            "type": "string",
            "nullable": true
          },
          "outgoingFlow": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DictionaryMapObjectVM": {
        "required": [
          "default"
        ],
        "type": "object",
        "properties": {
          "default": {
            "type": "boolean"
          },
          "pages": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AElementVM"
              },
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiskSettings": {
        "type": "object",
        "properties": {
          "fileStoragePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DllInputVM": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DllVM": {
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DdlColumnMV"
            },
            "nullable": true
          },
          "databaseName": {
            "type": "string",
            "nullable": true
          },
          "indexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DdlIndexVM"
            },
            "nullable": true
          },
          "setOrMultiset": {
            "type": "string",
            "nullable": true
          },
          "tableComment": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DomainAnalysisSettings": {
        "required": [
          "thresholdForAttributeGenerationInPercents",
          "thresholdForRelationGenerationInPercents"
        ],
        "type": "object",
        "properties": {
          "thresholdForAttributeGenerationInPercents": {
            "type": "integer",
            "format": "int32"
          },
          "thresholdForRelationGenerationInPercents": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EditAppTagVM": {
        "required": [
          "modelVersionId"
        ],
        "type": "object",
        "properties": {
          "modelVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ElasticsearchSettings": {
        "required": [
          "backOffRetries",
          "bulkSize",
          "facetedSearchBucketsLimit",
          "importBatchSize",
          "indexBulkMaximumRunTime",
          "indexingThreads",
          "isCertificateNeeded",
          "maxDegreeOfParallelism",
          "pageLimit",
          "port",
          "useElasticsearchServer"
        ],
        "type": "object",
        "properties": {
          "backOffRetries": {
            "type": "integer",
            "format": "int32"
          },
          "bulkSize": {
            "type": "integer",
            "format": "int32"
          },
          "certificateThumbprint": {
            "type": "string",
            "nullable": true
          },
          "codelistResultFormat": {
            "type": "string",
            "nullable": true
          },
          "czechAnalyzer": {
            "type": "string",
            "nullable": true
          },
          "facetedSearchBucketsLimit": {
            "type": "integer",
            "format": "int32"
          },
          "host": {
            "type": "string",
            "nullable": true
          },
          "importBatchSize": {
            "type": "integer",
            "format": "int32"
          },
          "indexBulkMaximumRunTime": {
            "type": "integer",
            "format": "int32"
          },
          "indexingThreads": {
            "type": "integer",
            "format": "int32"
          },
          "isCertificateNeeded": {
            "type": "boolean"
          },
          "maxDegreeOfParallelism": {
            "type": "integer",
            "format": "int32"
          },
          "modelChangesResultFormat": {
            "type": "string",
            "nullable": true
          },
          "pageLimit": {
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "protocol": {
            "type": "string",
            "nullable": true
          },
          "scriptMainFolderName": {
            "type": "string",
            "nullable": true
          },
          "textHighlightingStyle": {
            "type": "string",
            "nullable": true
          },
          "useElasticsearchServer": {
            "type": "boolean"
          },
          "username": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmptyFilter": {
        "type": "object",
        "additionalProperties": false
      },
      "EmptyFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/EmptyFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EncryptInputVM": {
        "required": [
          "password",
          "plainText"
        ],
        "type": "object",
        "properties": {
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "plainText": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EnvConfigurationFilter": {
        "type": "object",
        "properties": {
          "adminConfigurable": {
            "type": "boolean",
            "nullable": true
          },
          "backendOnly": {
            "type": "boolean",
            "nullable": true
          },
          "configurationKey": {
            "type": "string",
            "nullable": true
          },
          "configurationValue": {
            "type": "string",
            "nullable": true
          },
          "dataTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnvConfigurationFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/EnvConfigurationFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnvConfigurationVM": {
        "required": [
          "adminConfigurable",
          "backendOnly",
          "configurationId",
          "configurationKey",
          "configurationValue",
          "dataTypeId"
        ],
        "type": "object",
        "properties": {
          "adminConfigurable": {
            "type": "boolean"
          },
          "backendOnly": {
            "type": "boolean"
          },
          "configurationId": {
            "type": "integer",
            "format": "int32"
          },
          "configurationKey": {
            "minLength": 1,
            "type": "string"
          },
          "configurationValue": {
            "minLength": 1,
            "type": "string"
          },
          "dataTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EnvConfigurationVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvConfigurationVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnvFrontendSettingsVM": {
        "type": "object",
        "properties": {
          "brand": {
            "$ref": "#/components/schemas/FeBrandSettings"
          },
          "help": {
            "$ref": "#/components/schemas/FeHelpSettings"
          },
          "instance": {
            "$ref": "#/components/schemas/FeInstanceSettings"
          },
          "limits": {
            "$ref": "#/components/schemas/FeLimitsSettings"
          },
          "modules": {
            "$ref": "#/components/schemas/FeModuleSettings"
          },
          "support": {
            "$ref": "#/components/schemas/FeSupportSettings"
          }
        },
        "additionalProperties": false
      },
      "EnvPkgAuthSettingsVM": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/AuthSettings"
          },
          "azureActiveDirectorySettings": {
            "$ref": "#/components/schemas/AzureADSettings"
          },
          "ldap": {
            "$ref": "#/components/schemas/EnvPkgLdapSettingsVM"
          }
        },
        "additionalProperties": false
      },
      "EnvPkgEmailSettingsVM": {
        "type": "object",
        "properties": {
          "mailService": {
            "$ref": "#/components/schemas/MailServiceSettings"
          },
          "sender": {
            "$ref": "#/components/schemas/MailSenderSettings"
          }
        },
        "additionalProperties": false
      },
      "EnvPkgFeatureMlSettingsVM": {
        "type": "object",
        "properties": {
          "aiSummary": {
            "$ref": "#/components/schemas/AiSummarySettings"
          },
          "chatGpt": {
            "$ref": "#/components/schemas/ChatGptSettings"
          },
          "textEditor": {
            "$ref": "#/components/schemas/RichTextEditorSettings"
          }
        },
        "additionalProperties": false
      },
      "EnvPkgFeaturesSettingsVM": {
        "type": "object",
        "properties": {
          "domainAnalysis": {
            "$ref": "#/components/schemas/DomainAnalysisSettings"
          },
          "externalSql": {
            "$ref": "#/components/schemas/SqlExternalSettings"
          },
          "graph": {
            "$ref": "#/components/schemas/GraphSettings"
          },
          "guestMode": {
            "$ref": "#/components/schemas/FeGuestModeSettings"
          },
          "help": {
            "$ref": "#/components/schemas/HelpSettings"
          },
          "impactAnalysis": {
            "$ref": "#/components/schemas/ImpactAnalysisSettings"
          },
          "import": {
            "$ref": "#/components/schemas/ImportDocumentSettings"
          },
          "jiraIntegration": {
            "$ref": "#/components/schemas/JiraSettings"
          },
          "lineage": {
            "$ref": "#/components/schemas/LineageSettings"
          },
          "machineLearning": {
            "$ref": "#/components/schemas/EnvPkgFeatureMlSettingsVM"
          },
          "metadataImport": {
            "$ref": "#/components/schemas/MetadataImportSettings"
          },
          "objectsExport": {
            "$ref": "#/components/schemas/ObjectsExportSettings"
          },
          "packages": {
            "$ref": "#/components/schemas/PackagesSettings"
          },
          "pdmToGlossary": {
            "$ref": "#/components/schemas/PdmToGlossarySettings"
          },
          "pdmToMrCodelist": {
            "$ref": "#/components/schemas/PdmToMrCodelistSettings"
          },
          "pwdModelChangesSettings": {
            "$ref": "#/components/schemas/PwdModelChangesSettings"
          },
          "tokenization": {
            "$ref": "#/components/schemas/TokenizationSettings"
          }
        },
        "additionalProperties": false
      },
      "EnvPkgFileServiceSettingsVM": {
        "type": "object",
        "properties": {
          "azureBlob": {
            "$ref": "#/components/schemas/AzureBlobSettings"
          },
          "disk": {
            "$ref": "#/components/schemas/DiskSettings"
          },
          "general": {
            "$ref": "#/components/schemas/RemoteFileSystemSettings"
          }
        },
        "additionalProperties": false
      },
      "EnvPkgLdapSettingsVM": {
        "type": "object",
        "properties": {
          "auth": {
            "$ref": "#/components/schemas/LdapSettings"
          },
          "mapping": {
            "$ref": "#/components/schemas/LdapMappingSettings"
          }
        },
        "additionalProperties": false
      },
      "EnvPkgPwdWorkerSettingsVM": {
        "type": "object",
        "properties": {
          "general": {
            "$ref": "#/components/schemas/PwdWorkerSettings"
          },
          "modelStorage": {
            "$ref": "#/components/schemas/BatchLoadPathsSettings"
          },
          "windowsService": {
            "$ref": "#/components/schemas/WorkerServiceSettings"
          }
        },
        "additionalProperties": false
      },
      "EnvPkgSchedulerSettingsVM": {
        "type": "object",
        "properties": {
          "externalConnection": {
            "$ref": "#/components/schemas/SchedulerExternalConnectionSettings"
          },
          "scheduling": {
            "$ref": "#/components/schemas/SchedulingSettings"
          },
          "windowsService": {
            "$ref": "#/components/schemas/SchedulerServiceSettings"
          }
        },
        "additionalProperties": false
      },
      "EnvPkgSettingsRootVM": {
        "type": "object",
        "properties": {
          "auth": {
            "$ref": "#/components/schemas/EnvPkgAuthSettingsVM"
          },
          "email": {
            "$ref": "#/components/schemas/EnvPkgEmailSettingsVM"
          },
          "eventStoreDb": {
            "$ref": "#/components/schemas/EventStoreDbSettings"
          },
          "features": {
            "$ref": "#/components/schemas/EnvPkgFeaturesSettingsVM"
          },
          "fileService": {
            "$ref": "#/components/schemas/EnvPkgFileServiceSettingsVM"
          },
          "frontend": {
            "$ref": "#/components/schemas/EnvFrontendSettingsVM"
          },
          "ingestion": {
            "$ref": "#/components/schemas/IngestionCloudSettings"
          },
          "licenseService": {
            "$ref": "#/components/schemas/LicenseServiceSettings"
          },
          "pwdWorker": {
            "$ref": "#/components/schemas/EnvPkgPwdWorkerSettingsVM"
          },
          "scheduler": {
            "$ref": "#/components/schemas/EnvPkgSchedulerSettingsVM"
          },
          "search": {
            "$ref": "#/components/schemas/ElasticsearchSettings"
          },
          "swagger": {
            "$ref": "#/components/schemas/SwaggerConfigurationSettings"
          },
          "worker": {
            "$ref": "#/components/schemas/EnvPkgWorkerSettingsVM"
          }
        },
        "additionalProperties": false
      },
      "EnvPkgWorkerSettingsVM": {
        "type": "object",
        "properties": {
          "externalConnection": {
            "$ref": "#/components/schemas/WorkerExternalConnectionSettings"
          },
          "general": {
            "$ref": "#/components/schemas/WorkerSettings"
          }
        },
        "additionalProperties": false
      },
      "ErrorResponse": {
        "required": [
          "statusCode",
          "type"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "innerException": {
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "requestId": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "type": {
            "$ref": "#/components/schemas/ErrorType"
          }
        },
        "additionalProperties": false
      },
      "ErrorType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "EsKeyWordResultReference": {
        "required": [
          "applicationId",
          "endOffset",
          "objectId",
          "objectTypeId",
          "spaceId",
          "startOffset"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "endOffset": {
            "type": "integer",
            "format": "int64"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "pathNameObject": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "relationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "startOffset": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "EsKeyWordResultReferencePagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EsKeyWordResultReference"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventStoreDbSettings": {
        "required": [
          "connectionRetryCount",
          "port"
        ],
        "type": "object",
        "properties": {
          "connectionRetryCount": {
            "type": "integer",
            "format": "int32"
          },
          "options": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "serverAddress": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExplorerFilter": {
        "type": "object",
        "properties": {
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "viewTypeEnum": {
            "$ref": "#/components/schemas/ExplorerViewTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "ExplorerPathItem": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExplorerSearchFilter": {
        "type": "object",
        "properties": {
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExplorerSearchFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/ExplorerSearchFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExplorerVM": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationNameKey": {
            "type": "string",
            "nullable": true
          },
          "childCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExplorerVM"
            },
            "nullable": true
          },
          "hasChildren": {
            "type": "boolean",
            "nullable": true
          },
          "hasRights": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/ExplorerPathItem"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExplorerVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExplorerVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExplorerViewTypeEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ExportSettings": {
        "required": [
          "filterApplicationsEnabled",
          "filterSpacesEnabled",
          "joinNumberingAndObjectName",
          "truncateLongCellValueEnabled"
        ],
        "type": "object",
        "properties": {
          "allowedCodeListTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "allowedHierarchyTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "allowedImportModes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dateFormat": {
            "type": "string",
            "nullable": true
          },
          "defaultCodeListType": {
            "type": "string",
            "nullable": true
          },
          "defaultHierarchyType": {
            "type": "string",
            "nullable": true
          },
          "defaultImportMode": {
            "type": "string",
            "nullable": true
          },
          "defaultWorkflowState": {
            "type": "string",
            "nullable": true
          },
          "filterApplicationsEnabled": {
            "type": "boolean"
          },
          "filterSpacesEnabled": {
            "type": "boolean"
          },
          "hiddenCodeListSheets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hiddenObjectSheetColumns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hiddenRelationsSheetColumns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "joinNumberingAndObjectName": {
            "type": "boolean"
          },
          "truncateLongCellValueEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ExportSettingsBase": {
        "required": [
          "filterApplicationsEnabled",
          "filterSpacesEnabled",
          "joinNumberingAndObjectName",
          "truncateLongCellValueEnabled"
        ],
        "type": "object",
        "properties": {
          "allowedCodeListTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "allowedHierarchyTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "allowedImportModes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dateFormat": {
            "type": "string",
            "nullable": true
          },
          "defaultCodeListType": {
            "type": "string",
            "nullable": true
          },
          "defaultHierarchyType": {
            "type": "string",
            "nullable": true
          },
          "defaultImportMode": {
            "type": "string",
            "nullable": true
          },
          "defaultWorkflowState": {
            "type": "string",
            "nullable": true
          },
          "filterApplicationsEnabled": {
            "type": "boolean"
          },
          "filterSpacesEnabled": {
            "type": "boolean"
          },
          "hiddenCodeListSheets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hiddenObjectSheetColumns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hiddenRelationsSheetColumns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "joinNumberingAndObjectName": {
            "type": "boolean"
          },
          "truncateLongCellValueEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ExternalJobRunVM": {
        "type": "object",
        "properties": {
          "redirectUrl": {
            "type": "string",
            "nullable": true
          },
          "successText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalLoadsSettingsBase": {
        "required": [
          "enableChangeLogAndVersioning"
        ],
        "type": "object",
        "properties": {
          "enableChangeLogAndVersioning": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ExternalUrlInfoIM": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalUrlInfoVM": {
        "type": "object",
        "properties": {
          "documentTitle": {
            "type": "string",
            "nullable": true
          },
          "favIcon": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FacetedSearchSortVM": {
        "required": [
          "reverse"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "reverse": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeBrandSettings": {
        "type": "object",
        "properties": {
          "appName": {
            "type": "string",
            "nullable": true
          },
          "theme": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeChangeTextualSettings": {
        "type": "object",
        "properties": {
          "textual": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "textualEa": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeGraphSettings": {
        "required": [
          "depthLimit"
        ],
        "type": "object",
        "properties": {
          "depthLimit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FeGuestModeSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "string",
            "nullable": true
          },
          "loginPageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeHelpLinkValueSettings": {
        "type": "object",
        "properties": {
          "icon": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeHelpLinksSettings": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeHelpLinkValueSettings"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeHelpSettings": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeHelpLinksSettings"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeInstanceButtonSettings": {
        "required": [
          "isVisible"
        ],
        "type": "object",
        "properties": {
          "isVisible": {
            "type": "boolean"
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "translationKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeInstanceSettings": {
        "type": "object",
        "properties": {
          "button": {
            "$ref": "#/components/schemas/FeInstanceButtonSettings"
          },
          "environmentType": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeLimitsSettings": {
        "required": [
          "hierarchyFetchPerRequestLimit",
          "imageBorderBoxMinimumSize",
          "relationsDiagramHardLimit",
          "relationsDiagramSoftLimit"
        ],
        "type": "object",
        "properties": {
          "hierarchyFetchPerRequestLimit": {
            "type": "integer",
            "format": "int32"
          },
          "imageBorderBoxMinimumSize": {
            "type": "integer",
            "format": "int32"
          },
          "relationsDiagramHardLimit": {
            "type": "integer",
            "format": "int32"
          },
          "relationsDiagramSoftLimit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FeModuleAuthenticatedSettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FeModuleDataLineageSettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FeModuleDictionaryProfileSettings": {
        "required": [
          "enabled",
          "threshold"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "threshold": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FeModuleEmbeddedTextsSettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FeModuleHomepageNavigatorSettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FeModuleIngestionSettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FeModuleJiraSettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FeModuleMetadataRepositorySettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FeModuleNotificationsSettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FeModuleReferencesSettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FeModuleRepositoryBranchingSettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FeModuleRepositorySettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FeModuleRepositorySimpleFlowSettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FeModuleSearchSettings": {
        "required": [
          "enabled",
          "searchResults"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "searchResults": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FeModuleSettings": {
        "type": "object",
        "properties": {
          "authenticated": {
            "$ref": "#/components/schemas/FeModuleAuthenticatedSettings"
          },
          "dataLineage": {
            "$ref": "#/components/schemas/FeModuleDataLineageSettings"
          },
          "dictionaryProfile": {
            "$ref": "#/components/schemas/FeModuleDictionaryProfileSettings"
          },
          "embeddedTexts": {
            "$ref": "#/components/schemas/FeModuleEmbeddedTextsSettings"
          },
          "graph": {
            "$ref": "#/components/schemas/FeGraphSettings"
          },
          "homepageNavigator": {
            "$ref": "#/components/schemas/FeModuleHomepageNavigatorSettings"
          },
          "ingestion": {
            "$ref": "#/components/schemas/FeModuleIngestionSettings"
          },
          "jira": {
            "$ref": "#/components/schemas/FeModuleJiraSettings"
          },
          "marketplace": {
            "$ref": "#/components/schemas/MarketplaceSettings"
          },
          "metadataRepository": {
            "$ref": "#/components/schemas/FeModuleMetadataRepositorySettings"
          },
          "modelRepository": {
            "$ref": "#/components/schemas/FeModuleRepositorySettings"
          },
          "modelRepositoryBranching": {
            "$ref": "#/components/schemas/FeModuleRepositoryBranchingSettings"
          },
          "modelRepositorySimpleFlow": {
            "$ref": "#/components/schemas/FeModuleRepositorySimpleFlowSettings"
          },
          "notifications": {
            "$ref": "#/components/schemas/FeModuleNotificationsSettings"
          },
          "pwdModelChanges": {
            "$ref": "#/components/schemas/FeChangeTextualSettings"
          },
          "references": {
            "$ref": "#/components/schemas/FeModuleReferencesSettings"
          },
          "search": {
            "$ref": "#/components/schemas/FeModuleSearchSettings"
          },
          "sentry": {
            "$ref": "#/components/schemas/FeSentrySettings"
          },
          "textEditor": {
            "$ref": "#/components/schemas/TextEditorAiSettings"
          },
          "tours": {
            "$ref": "#/components/schemas/FeModuleToursSettings"
          },
          "userRepresentative": {
            "$ref": "#/components/schemas/FeModuleUserRepresentativeSettings"
          },
          "viewer": {
            "$ref": "#/components/schemas/FeModuleViewerSettings"
          }
        },
        "additionalProperties": false
      },
      "FeModuleToursSettings": {
        "required": [
          "configurationEnabled",
          "enabled"
        ],
        "type": "object",
        "properties": {
          "configurationEnabled": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TourLink"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeModuleUserRepresentativeSettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FeModuleViewerSettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "frontPageTables": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "urlDelimiter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeSentrySettings": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeSupportObjectSetting": {
        "type": "object",
        "properties": {
          "documentationUrl": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeSupportSettings": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/FeSupportObjectSetting"
          }
        },
        "additionalProperties": false
      },
      "FieldMappingVM": {
        "required": [
          "attributeTypeKey",
          "fieldKey"
        ],
        "type": "object",
        "properties": {
          "attributeTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "fieldKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "FieldVm": {
        "type": "object",
        "properties": {
          "isFromKey": {
            "type": "boolean",
            "nullable": true
          },
          "isKey": {
            "type": "boolean",
            "nullable": true
          },
          "isName": {
            "type": "boolean",
            "nullable": true
          },
          "isParentKey": {
            "type": "boolean",
            "nullable": true
          },
          "isRelationTypeKey": {
            "type": "boolean",
            "nullable": true
          },
          "isToKey": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FilterValue": {
        "type": "object",
        "properties": {
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "integer",
                "format": "int32"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FlowStrategyInputVM": {
        "required": [
          "incoming",
          "metamodelId",
          "objectId",
          "outgoing"
        ],
        "type": "object",
        "properties": {
          "depth": {
            "enum": [
              "small",
              "medium",
              "high"
            ],
            "type": "string",
            "nullable": true
          },
          "incoming": {
            "type": "boolean"
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "outgoing": {
            "type": "boolean"
          },
          "strategy": {
            "enum": [
              "smart",
              "report",
              "placeholder_1",
              "placeholder_2"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FolderCodeTableFilter": {
        "type": "object",
        "properties": {
          "folderName": {
            "type": "string",
            "nullable": true
          },
          "parentFolderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FolderCodeTableFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/FolderCodeTableFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FolderCodeTableVM": {
        "required": [
          "folderId"
        ],
        "type": "object",
        "properties": {
          "folderId": {
            "type": "integer",
            "format": "int32"
          },
          "folderName": {
            "type": "string",
            "nullable": true
          },
          "fullPath": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PathItemVM"
            },
            "nullable": true
          },
          "parentFolderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FolderCodeTableVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderCodeTableVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FolderFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AppContentFilter"
          },
          "hasNewModelVersionInBranch": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FolderPermissionVM": {
        "required": [
          "isInherited",
          "permissionTypeId",
          "refObjectId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "isInherited": {
            "type": "boolean"
          },
          "permissionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "permissionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "refObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FolderPermissionVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderPermissionVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ForgottenPasswordVM": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormatTypeEnum": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "FullTextSearchRequestModel": {
        "required": [
          "formId",
          "offset"
        ],
        "type": "object",
        "properties": {
          "additionalObjectRelations": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "additionalUserRelations": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "facets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchRequestFacet"
            },
            "nullable": true
          },
          "favouriteObjectTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "formId": {
            "minLength": 1,
            "type": "string"
          },
          "fulltextSearchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "lastSelectedFacet": {
            "type": "string",
            "nullable": true
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "searchFilter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchRequestFilter"
            },
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SearchSort"
          },
          "useSimpleQueryOnly": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FullTextSearchRequestModelFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/FullTextSearchRequestModel"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FullTextSearchResultFacet": {
        "type": "object",
        "properties": {
          "buckets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FullTextSearchResultFacetBucket"
            },
            "nullable": true
          },
          "defaultCollapsed": {
            "type": "boolean",
            "nullable": true
          },
          "elementType": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "enumKeyType": {
            "type": "string",
            "nullable": true
          },
          "forcedFacetValue": {
            "type": "boolean",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "orderBucketsReverse": {
            "type": "boolean",
            "nullable": true
          },
          "orderBucketsType": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FullTextSearchResultFacetBucketParameter"
            },
            "nullable": true
          },
          "primaryResultText": {
            "type": "boolean",
            "nullable": true
          },
          "subFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FullTextSearchResultFacet"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FullTextSearchResultFacetBucket": {
        "required": [
          "count",
          "originalCount"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "originalCount": {
            "type": "integer",
            "format": "int32"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FullTextSearchResultFacetBucketParameter"
            },
            "nullable": true
          },
          "subBuckets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FullTextSearchResultFacetBucket"
            },
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FullTextSearchResultFacetBucketParameter": {
        "type": "object",
        "properties": {
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "enumKeyType": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FullTextSearchResultItem": {
        "required": [
          "score"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorLogin": {
            "type": "string",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "disliked": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "favorite": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "genObjectRelations": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "liked": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameHighlight": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectLevel1": {
            "type": "string",
            "nullable": true
          },
          "objectLevel2": {
            "type": "string",
            "nullable": true
          },
          "objectLevel3": {
            "type": "string",
            "nullable": true
          },
          "objectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "objectRelationCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetObjectRelationShortInfoVM"
            },
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pathName": {
            "type": "string",
            "nullable": true
          },
          "pathNameObject": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "possibleRelationTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "searched": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          },
          "userRelationCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userRelations": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AppUserAttributeVM"
              },
              "nullable": true
            },
            "nullable": true
          },
          "visited": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "watched": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workflowStateNameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FullTextSearchResultVM": {
        "required": [
          "count",
          "selectedFacetCount"
        ],
        "type": "object",
        "properties": {
          "additionalObjectRelations": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "additionalUserRelations": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FullTextSearchResultItem"
            },
            "nullable": true
          },
          "facets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FullTextSearchResultFacet"
            },
            "nullable": true
          },
          "favouriteObjectTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "formId": {
            "type": "string",
            "nullable": true
          },
          "fulltextSearchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "lastSelectedFacet": {
            "type": "string",
            "nullable": true
          },
          "searchedFromUrl": {
            "type": "boolean",
            "nullable": true
          },
          "searchText": {
            "type": "string",
            "nullable": true
          },
          "selectedFacetCount": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SearchSort"
          }
        },
        "additionalProperties": false
      },
      "FulltextSearchFilter": {
        "type": "object",
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FulltextSearchFilterChild"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FulltextSearchFilterChild": {
        "type": "object",
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FulltextSearchFilterChild"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FulltextSearchFilterPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FulltextSearchFilter"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphAttributeVM": {
        "required": [
          "attributeTypeId",
          "nodeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "backgroundColorHex": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "nodeId": {
            "type": "integer",
            "format": "int32"
          },
          "textColorHex": {
            "type": "string",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphCDisplayLevelFilter": {
        "required": [
          "depthLevel",
          "displayLevelId",
          "displayTypeId",
          "isSingleHideable",
          "metamodelId"
        ],
        "type": "object",
        "properties": {
          "depthLevel": {
            "type": "integer",
            "format": "int32"
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "displayLevelId": {
            "type": "integer",
            "format": "int32"
          },
          "displayTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "isSingleHideable": {
            "type": "boolean"
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "parentLevelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphCDisplayLevelFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/GraphCDisplayLevelFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphCDisplayLevelVM": {
        "required": [
          "depthLevel",
          "displayLevelId",
          "displayTypeId",
          "isSingleHideable",
          "metamodelId"
        ],
        "type": "object",
        "properties": {
          "depthLevel": {
            "type": "integer",
            "format": "int32"
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "displayLevelId": {
            "type": "integer",
            "format": "int32"
          },
          "displayTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "isSingleHideable": {
            "type": "boolean"
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "parentLevelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphCDisplayLevelVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphCDisplayLevelVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphCMetamodelFilter": {
        "required": [
          "isDefault",
          "metamodelId",
          "metamodelViewTypeId"
        ],
        "type": "object",
        "properties": {
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "graphObjectTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphObjectTypeVM"
            },
            "nullable": true
          },
          "graphRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphRelationTypeVM"
            },
            "nullable": true
          },
          "graphUserRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphUserRelationTypeVM"
            },
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "metamodelViewTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "metamodelViewTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphCMetamodelFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/GraphCMetamodelFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphChangeFlowToVM": {
        "required": [
          "changeTypeId",
          "flowToId",
          "fromNodeId",
          "lineDisplayTypeId",
          "relationTypeNameKey",
          "toNodeId"
        ],
        "type": "object",
        "properties": {
          "changeTypeId": {
            "$ref": "#/components/schemas/GraphFlowChangeTypeEnum"
          },
          "definingObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "flowToId": {
            "type": "integer",
            "format": "int32"
          },
          "fromNodeId": {
            "type": "integer",
            "format": "int32"
          },
          "lineDisplayTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeNameKey": {
            "minLength": 1,
            "type": "string"
          },
          "toNodeId": {
            "type": "integer",
            "format": "int32"
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphChangeMrNodeVM": {
        "required": [
          "changeTypeId",
          "childrenCount",
          "inFlowCount",
          "metamodelId",
          "nodeId",
          "orderNumber",
          "outFlowCount"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphAttributeVM"
            },
            "nullable": true
          },
          "changeTypeId": {
            "$ref": "#/components/schemas/GraphNodeChangeTypeEnum"
          },
          "childrenCount": {
            "type": "integer",
            "format": "int32"
          },
          "displayLevelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "displayTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "inFlowCount": {
            "type": "integer",
            "format": "int32"
          },
          "isUserGroup": {
            "type": "boolean",
            "nullable": true
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nodeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "outFlowCount": {
            "type": "integer",
            "format": "int32"
          },
          "parentNodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pathNameList": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphChildrenVisibleInputVM": {
        "type": "object",
        "properties": {
          "visibleObjectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphDiagramChangesVM": {
        "type": "object",
        "properties": {
          "nodeChanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphChangeMrNodeVM"
            },
            "nullable": true
          },
          "relationChanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphChangeFlowToVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphDiagramExportInputVM": {
        "type": "object",
        "properties": {
          "diagramHtml": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphDiagramExportVM": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphDiagramInputVM": {
        "required": [
          "metamodelId"
        ],
        "type": "object",
        "properties": {
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphMrNodeVM"
            },
            "nullable": true
          },
          "relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphFlowToVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphDiagramLayoutInputVM": {
        "type": "object",
        "properties": {
          "diagramData": {
            "type": "string",
            "nullable": true
          },
          "diagramHtml": {
            "type": "string",
            "nullable": true
          },
          "objectsIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphFlowChangeTypeEnum": {
        "enum": [
          10,
          20,
          30
        ],
        "type": "integer",
        "format": "int32"
      },
      "GraphFlowInputVM": {
        "required": [
          "metamodelId"
        ],
        "type": "object",
        "properties": {
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "objectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphFlowToVM": {
        "required": [
          "flowToId",
          "fromNodeId",
          "lineDisplayTypeId",
          "relationTypeNameKey",
          "toNodeId"
        ],
        "type": "object",
        "properties": {
          "definingObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "flowToId": {
            "type": "integer",
            "format": "int32"
          },
          "fromNodeId": {
            "type": "integer",
            "format": "int32"
          },
          "lineDisplayTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeNameKey": {
            "minLength": 1,
            "type": "string"
          },
          "toNodeId": {
            "type": "integer",
            "format": "int32"
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphFlowToVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphFlowToVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphMetamodelDefaultLabelsVM": {
        "required": [
          "metamodelId"
        ],
        "type": "object",
        "properties": {
          "defaultLabels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultLabelsVM"
            },
            "nullable": true
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GraphMetamodelDefaultLabelsVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphMetamodelDefaultLabelsVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphMetamodelVM": {
        "required": [
          "isDefault",
          "metamodelId",
          "metamodelViewTypeId"
        ],
        "type": "object",
        "properties": {
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "graphObjectTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphObjectTypeVM"
            },
            "nullable": true
          },
          "graphRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphRelationTypeVM"
            },
            "nullable": true
          },
          "graphUserRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphUserRelationTypeVM"
            },
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "metamodelViewTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "metamodelViewTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphMetamodelVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphMetamodelVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphMrNodeLeafVM": {
        "required": [
          "childrenCount",
          "inFlowCount",
          "level",
          "metamodelId",
          "nodeId",
          "orderNumber",
          "outFlowCount"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphAttributeVM"
            },
            "nullable": true
          },
          "childrenCount": {
            "type": "integer",
            "format": "int32"
          },
          "displayLevelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "displayTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "inFlowCount": {
            "type": "integer",
            "format": "int32"
          },
          "isUserGroup": {
            "type": "boolean",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nodeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "outFlowCount": {
            "type": "integer",
            "format": "int32"
          },
          "parentNodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pathNameList": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphMrNodeLeafVMPagedGraphVM": {
        "required": [
          "cntOfHiddenLayers",
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "cntOfHiddenLayers": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphMrNodeLeafVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphMrNodeSearchVM": {
        "required": [
          "childrenCount",
          "inFlowCount",
          "metamodelId",
          "nodeId",
          "orderNumber",
          "outFlowCount"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphAttributeVM"
            },
            "nullable": true
          },
          "childrenCount": {
            "type": "integer",
            "format": "int32"
          },
          "displayLevelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "displayTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "inFlowCount": {
            "type": "integer",
            "format": "int32"
          },
          "isUserGroup": {
            "type": "boolean",
            "nullable": true
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nodeId": {
            "type": "integer",
            "format": "int32"
          },
          "nodeIdsInPath": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "outFlowCount": {
            "type": "integer",
            "format": "int32"
          },
          "parentNodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pathNameList": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphMrNodeSearchVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphMrNodeSearchVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphMrNodeVM": {
        "required": [
          "childrenCount",
          "inFlowCount",
          "metamodelId",
          "nodeId",
          "orderNumber",
          "outFlowCount"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphAttributeVM"
            },
            "nullable": true
          },
          "childrenCount": {
            "type": "integer",
            "format": "int32"
          },
          "displayLevelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "displayTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "inFlowCount": {
            "type": "integer",
            "format": "int32"
          },
          "isUserGroup": {
            "type": "boolean",
            "nullable": true
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nodeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "outFlowCount": {
            "type": "integer",
            "format": "int32"
          },
          "parentNodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pathNameList": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphMrNodeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphMrNodeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphNodeChangeTypeEnum": {
        "enum": [
          10,
          20,
          30
        ],
        "type": "integer",
        "format": "int32"
      },
      "GraphNodeDetailInputVM": {
        "required": [
          "metamodelId"
        ],
        "type": "object",
        "properties": {
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "nodeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphNodeSearchInputVM": {
        "required": [
          "fromNodeId",
          "isIncomingFlow",
          "metamodelId"
        ],
        "type": "object",
        "properties": {
          "fromNodeId": {
            "type": "integer",
            "format": "int32"
          },
          "isIncomingFlow": {
            "type": "boolean"
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "searchedName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphNodeVisibleVM": {
        "required": [
          "childrenCount",
          "inFlowCount",
          "isVisible",
          "metamodelId",
          "nodeId",
          "orderNumber",
          "outFlowCount"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphAttributeVM"
            },
            "nullable": true
          },
          "childrenCount": {
            "type": "integer",
            "format": "int32"
          },
          "displayLevelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "displayTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "inFlowCount": {
            "type": "integer",
            "format": "int32"
          },
          "isUserGroup": {
            "type": "boolean",
            "nullable": true
          },
          "isVisible": {
            "type": "integer",
            "format": "int32"
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nodeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "outFlowCount": {
            "type": "integer",
            "format": "int32"
          },
          "parentNodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pathNameList": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphNodeVisibleVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphNodeVisibleVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphObjectRelationsVM": {
        "required": [
          "objects",
          "relations"
        ],
        "type": "object",
        "properties": {
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphMrNodeVM"
            }
          },
          "relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphFlowToVM"
            }
          }
        },
        "additionalProperties": false
      },
      "GraphObjectTypeVM": {
        "required": [
          "displayDepthLevel",
          "displayLevelId",
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "displayDepthLevel": {
            "type": "integer",
            "format": "int32"
          },
          "displayLevelId": {
            "type": "integer",
            "format": "int32"
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GraphRObjectRelationFilter": {
        "required": [
          "fromObjectTypeId",
          "metamodelId",
          "relationTypeId",
          "toObjectTypeId"
        ],
        "type": "object",
        "properties": {
          "fromObjectTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "fromObjectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "toObjectTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GraphRObjectRelationFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/GraphRObjectRelationFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphRObjectRelationFilterVM": {
        "required": [
          "fromObjectTypeId",
          "metamodelId",
          "relationTypeId",
          "toObjectTypeId"
        ],
        "type": "object",
        "properties": {
          "fromObjectTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "fromObjectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "toObjectTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GraphRObjectRelationFilterVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphRObjectRelationFilterVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphRelationTypeVM": {
        "required": [
          "relationTypeId"
        ],
        "type": "object",
        "properties": {
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GraphSettings": {
        "required": [
          "pruningNumberHigh",
          "pruningNumberMedium",
          "pruningNumberSmall"
        ],
        "type": "object",
        "properties": {
          "pruningNumberHigh": {
            "type": "integer",
            "format": "int32"
          },
          "pruningNumberMedium": {
            "type": "integer",
            "format": "int32"
          },
          "pruningNumberSmall": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GraphUserRelationTypeVM": {
        "required": [
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GwfInputTableVM": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GwfInputVM": {
        "type": "object",
        "properties": {
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GwfInputTableVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HashInputVM": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "HeaderAction": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "addSpace",
              "search"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HeaderSectionDatabaseSettings": {
        "type": "object",
        "properties": {
          "descriptionAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "fullnessAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "layout": {
            "enum": [
              "default",
              "documentation"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HeaderSectionOutputSettings": {
        "type": "object",
        "properties": {
          "descriptionAttributeTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fullnessAttributeTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "layout": {
            "enum": [
              "default",
              "documentation"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HeaderlessTextareaDatabaseTemplate": {
        "required": [
          "key",
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "headerless-textarea"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "HeaderlessTextareaOutputTemplate": {
        "required": [
          "subTypeId",
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "subTypeId": {
            "$ref": "#/components/schemas/RawValueSubTypeEnum"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "headerless-textarea"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "HeaderlessTextareaPatchAddTemplate": {
        "required": [
          "action",
          "key",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "headerless-textarea"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "HeaderlessTextareaPatchUpdateTemplate": {
        "required": [
          "action",
          "key",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "headerless-textarea"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "HelpEditVM": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelpSettings": {
        "type": "object",
        "properties": {
          "documentationUrl": {
            "type": "string",
            "nullable": true
          },
          "supportEmail": {
            "type": "string",
            "nullable": true
          },
          "supportUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelpVM": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          },
          "documentationUrl": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "supportEmail": {
            "type": "string",
            "nullable": true
          },
          "supportUrl": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          }
        },
        "additionalProperties": false
      },
      "HideDatabaseSectionSettings": {
        "type": "object",
        "properties": {
          "anchors": {
            "type": "boolean",
            "nullable": true
          },
          "attachments": {
            "type": "boolean",
            "nullable": true
          },
          "changes": {
            "type": "boolean",
            "nullable": true
          },
          "commentSection": {
            "type": "boolean",
            "nullable": true
          },
          "concepts": {
            "type": "boolean",
            "nullable": true
          },
          "created": {
            "type": "boolean",
            "nullable": true
          },
          "editButton": {
            "type": "boolean",
            "nullable": true
          },
          "favouriteButton": {
            "type": "boolean",
            "nullable": true
          },
          "hideEmptyAttributesButton": {
            "type": "boolean",
            "nullable": true
          },
          "jiraSearch": {
            "type": "boolean",
            "nullable": true
          },
          "likeButton": {
            "type": "boolean",
            "nullable": true
          },
          "moveObject": {
            "type": "boolean",
            "nullable": true
          },
          "removeObject": {
            "type": "boolean",
            "nullable": true
          },
          "renameObject": {
            "type": "boolean",
            "nullable": true
          },
          "shareObject": {
            "type": "boolean",
            "nullable": true
          },
          "updated": {
            "type": "boolean",
            "nullable": true
          },
          "watchingButton": {
            "type": "boolean",
            "nullable": true
          },
          "workflowStatus": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HideOutputSectionSettings": {
        "required": [
          "anchors",
          "attachments",
          "changes",
          "commentSection",
          "concepts",
          "created",
          "editButton",
          "favouriteButton",
          "hideEmptyAttributesButton",
          "jiraSearch",
          "likeButton",
          "moveObject",
          "removeObject",
          "renameObject",
          "shareObject",
          "updated",
          "watchingButton",
          "workflowStatus"
        ],
        "type": "object",
        "properties": {
          "anchors": {
            "type": "boolean"
          },
          "attachments": {
            "type": "boolean"
          },
          "changes": {
            "type": "boolean"
          },
          "commentSection": {
            "type": "boolean"
          },
          "concepts": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "editButton": {
            "type": "boolean"
          },
          "favouriteButton": {
            "type": "boolean"
          },
          "hideEmptyAttributesButton": {
            "type": "boolean"
          },
          "jiraSearch": {
            "type": "boolean"
          },
          "likeButton": {
            "type": "boolean"
          },
          "moveObject": {
            "type": "boolean"
          },
          "removeObject": {
            "type": "boolean"
          },
          "renameObject": {
            "type": "boolean"
          },
          "shareObject": {
            "type": "boolean"
          },
          "updated": {
            "type": "boolean"
          },
          "watchingButton": {
            "type": "boolean"
          },
          "workflowStatus": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "HideRelationsSettings": {
        "required": [
          "application",
          "relationType",
          "space"
        ],
        "type": "object",
        "properties": {
          "application": {
            "type": "boolean"
          },
          "relationType": {
            "type": "boolean"
          },
          "space": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "HierarchyDefinitionVM": {
        "required": [
          "hierarchyTypeId",
          "isDefault"
        ],
        "type": "object",
        "properties": {
          "hierarchyDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hierarchyTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "isDefault": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HierarchyDefinitionVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HierarchyDefinitionVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HomeDashboardFilter": {
        "required": [
          "includeSubspaces"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "includeRelationsId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "includeSubspaces": {
            "type": "boolean"
          },
          "includeUserRelationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HomeDashboardFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/HomeDashboardFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HttpStatusCode": {
        "enum": [
          100,
          101,
          102,
          103,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          226,
          300,
          301,
          302,
          303,
          304,
          305,
          306,
          307,
          308,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          421,
          422,
          423,
          424,
          426,
          428,
          429,
          431,
          451,
          500,
          501,
          502,
          503,
          504,
          505,
          506,
          507,
          508,
          510,
          511
        ],
        "type": "integer",
        "format": "int32"
      },
      "IActionResult": {
        "type": "object",
        "additionalProperties": false
      },
      "IApiCardInlineDataTypeBaseDatabaseType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IApiCardInlineDataTypeBaseOutputType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IBaseDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IMrObjectPropertyBaseChangeVM": {
        "type": "object",
        "additionalProperties": false
      },
      "IPkgBaseFeatureVM": {
        "type": "object",
        "properties": {
          "additionalData": {
            "type": "object",
            "additionalProperties": {
              "title": "Anything",
              "type": "object",
              "description": "Anything",
              "discriminator": {
                "propertyName": "Anything"
              }
            },
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "sourcePackageVersionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IPkgPatchBaseFeatureVM": {
        "type": "object",
        "properties": {
          "additionalData": {
            "type": "object",
            "additionalProperties": {
              "title": "Anything",
              "type": "object",
              "description": "Anything",
              "discriminator": {
                "propertyName": "Anything"
              }
            },
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "sourcePackageVersionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ISwaggerEntity": {
        "type": "object",
        "additionalProperties": false
      },
      "ImpactAnalysisSettings": {
        "required": [
          "adminAsRegularUser"
        ],
        "type": "object",
        "properties": {
          "adminAsRegularUser": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ImportDataAttributeVM": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportDataIdInputVM": {
        "type": "object",
        "properties": {
          "exactId": {
            "type": "string",
            "nullable": true
          },
          "hierarchyName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/ImportDataIdInputVM"
          }
        },
        "additionalProperties": false
      },
      "ImportDataRelationVM": {
        "type": "object",
        "properties": {
          "fromId": {
            "$ref": "#/components/schemas/ImportDataIdInputVM"
          },
          "toId": {
            "$ref": "#/components/schemas/ImportDataIdInputVM"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportDocumentSettings": {
        "type": "object",
        "properties": {
          "excelEnvironmentApi": {
            "type": "string",
            "nullable": true
          },
          "wordEnvironmentApi": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportError": {
        "type": "object",
        "properties": {
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportFileVM": {
        "required": [
          "applicationId",
          "fileKey",
          "fileName",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "fileKey": {
            "minLength": 1,
            "type": "string"
          },
          "fileName": {
            "minLength": 1,
            "type": "string"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ImportInfoVM": {
        "required": [
          "actualStage",
          "applicationId",
          "errorCount",
          "importInfoId",
          "importQueueId",
          "objectsAdded",
          "objectsDeleted",
          "objectsUpdated",
          "relationsAdded",
          "relationsDeleted",
          "spaceId",
          "stagesCount",
          "startTime",
          "userId"
        ],
        "type": "object",
        "properties": {
          "actualStage": {
            "type": "integer",
            "format": "int32"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationNameKey": {
            "type": "string",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "errorCount": {
            "type": "integer",
            "format": "int32"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "importInfoId": {
            "type": "integer",
            "format": "int32"
          },
          "importQueueId": {
            "type": "integer",
            "format": "int32"
          },
          "isSuccess": {
            "type": "boolean",
            "nullable": true
          },
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationLogVM"
            },
            "nullable": true
          },
          "objectsAdded": {
            "type": "integer",
            "format": "int32"
          },
          "objectsDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "objectsUpdated": {
            "type": "integer",
            "format": "int32"
          },
          "relationsAdded": {
            "type": "integer",
            "format": "int32"
          },
          "relationsDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "stagesCount": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImportError"
            },
            "nullable": true
          },
          "fileKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportResponseResultVM": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "$ref": "#/components/schemas/ImportResponse"
          }
        },
        "additionalProperties": false
      },
      "ImportSettings": {
        "required": [
          "allowCrossSpaceAppImport",
          "multiAppsImportEnabled"
        ],
        "type": "object",
        "properties": {
          "allowCrossSpaceAppImport": {
            "type": "boolean"
          },
          "allowedImportModes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dateFormat": {
            "type": "string",
            "nullable": true
          },
          "fullReloadDeletionMode": {
            "type": "string",
            "nullable": true
          },
          "minimalRightsLevel": {
            "type": "string",
            "nullable": true
          },
          "multiAppsImportEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ImportSettingsBase": {
        "required": [
          "allowCrossSpaceAppImport",
          "multiAppsImportEnabled"
        ],
        "type": "object",
        "properties": {
          "allowCrossSpaceAppImport": {
            "type": "boolean"
          },
          "allowedImportModes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dateFormat": {
            "type": "string",
            "nullable": true
          },
          "fullReloadDeletionMode": {
            "type": "string",
            "nullable": true
          },
          "minimalRightsLevel": {
            "type": "string",
            "nullable": true
          },
          "multiAppsImportEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "IndexInputVM": {
        "required": [
          "primary",
          "unique"
        ],
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "partitionBy": {
            "type": "string",
            "nullable": true
          },
          "partitionExpression": {
            "type": "string",
            "nullable": true
          },
          "primary": {
            "type": "boolean"
          },
          "stereotype": {
            "type": "string",
            "nullable": true
          },
          "unique": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "IndexerTokenizerInfoVM": {
        "type": "object",
        "properties": {
          "refreshIndexTask": {
            "$ref": "#/components/schemas/AppTaskInfoVM"
          },
          "tokenizeAllKeywordsTask": {
            "$ref": "#/components/schemas/AppTokenizationTaskVM"
          },
          "tokenizeAllTextsTask": {
            "$ref": "#/components/schemas/AppTokenizationTaskVM"
          }
        },
        "additionalProperties": false
      },
      "IngestionCloudSettings": {
        "type": "object",
        "properties": {
          "apiToken": {
            "type": "string",
            "nullable": true
          },
          "restApiAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngestionConnectorRequestedIm": {
        "required": [
          "connectorName"
        ],
        "type": "object",
        "properties": {
          "connectorName": {
            "minLength": 1,
            "type": "string"
          },
          "connectorUrl": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngestionFilter": {
        "type": "object",
        "properties": {
          "application": {
            "type": "string",
            "nullable": true
          },
          "connectionName": {
            "type": "string",
            "nullable": true
          },
          "dataSourceName": {
            "type": "string",
            "nullable": true
          },
          "dataSourceUuid": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ingestionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "inserted": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngestionFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/IngestionFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngestionLog": {
        "required": [
          "severity",
          "timeStamp"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "type": "integer",
            "format": "int32"
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "IngestionLogFilter": {
        "required": [
          "ingestionId"
        ],
        "type": "object",
        "properties": {
          "ingestionId": {
            "type": "integer",
            "format": "int32"
          },
          "ingestionLogId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "severityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "severityIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngestionLogFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/IngestionLogFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngestionLogOverviewVm": {
        "required": [
          "ingestionId",
          "ingestionLogId",
          "severityId",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "ingestionId": {
            "type": "integer",
            "format": "int32"
          },
          "ingestionLogId": {
            "type": "integer",
            "format": "int32"
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "severityId": {
            "type": "integer",
            "format": "int32"
          },
          "severityNameKey": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "IngestionLogOverviewVmPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngestionLogOverviewVm"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngestionLogSeverityVm": {
        "required": [
          "severityId"
        ],
        "type": "object",
        "properties": {
          "severityEnumKey": {
            "type": "string",
            "nullable": true
          },
          "severityId": {
            "type": "integer",
            "format": "int32"
          },
          "severityNameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngestionLogSeverityVmPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngestionLogSeverityVm"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngestionOverviewVm": {
        "required": [
          "deleted",
          "ingestionId",
          "ingestionState",
          "inserted",
          "started",
          "stateId",
          "updated"
        ],
        "type": "object",
        "properties": {
          "application": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationNameKey": {
            "type": "string",
            "nullable": true
          },
          "connectionName": {
            "type": "string",
            "nullable": true
          },
          "dataSourceName": {
            "type": "string",
            "nullable": true
          },
          "dataSourceUuid": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "integer",
            "format": "int32"
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ingestionId": {
            "type": "integer",
            "format": "int32"
          },
          "ingestionState": {
            "$ref": "#/components/schemas/IngestionProgressStateEnum"
          },
          "inserted": {
            "type": "integer",
            "format": "int32"
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "stateId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "statusNameKey": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IngestionOverviewVmPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngestionOverviewVm"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngestionProgressInfoInput": {
        "required": [
          "applicationId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IngestionProgressInfoVm": {
        "required": [
          "dataSourceId",
          "ingestionId",
          "ingestionProgress",
          "ingestionStatus",
          "objectsDeleted",
          "objectsInserted",
          "objectsUpdated",
          "relationsDeleted",
          "relationsInserted",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dataSourceId": {
            "type": "integer",
            "format": "int32"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ingestionId": {
            "type": "integer",
            "format": "int32"
          },
          "ingestionProgress": {
            "type": "integer",
            "format": "int32"
          },
          "ingestionStatus": {
            "$ref": "#/components/schemas/IngestionProgressStateEnum"
          },
          "objectsDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "objectsInserted": {
            "type": "integer",
            "format": "int32"
          },
          "objectsUpdated": {
            "type": "integer",
            "format": "int32"
          },
          "relationsDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "relationsInserted": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "IngestionProgressStateEnum": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "IngestionStateEnum": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19
        ],
        "type": "integer",
        "format": "int32"
      },
      "IngestionTemplate": {
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string",
            "nullable": true
          },
          "providerName": {
            "type": "string",
            "nullable": true
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Step"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InnerFlowInputVM": {
        "required": [
          "metamodelId",
          "nodeId"
        ],
        "type": "object",
        "properties": {
          "incomingNodeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "nodeId": {
            "type": "integer",
            "format": "int32"
          },
          "outgoingNodeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Input": {
        "required": [
          "encrypted",
          "key",
          "multiLine",
          "onEditDeletePassword",
          "required",
          "type"
        ],
        "type": "object",
        "properties": {
          "encrypted": {
            "type": "boolean"
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "labelKey": {
            "type": "string",
            "nullable": true
          },
          "labelVariant": {
            "enum": [
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "paragraph",
              "body1",
              "body1underline",
              "captionText1",
              "captionText1underline",
              "captionText1caps",
              "captionText2",
              "captionText3"
            ],
            "type": "string",
            "nullable": true
          },
          "multiLine": {
            "type": "integer",
            "format": "int32"
          },
          "onEditDeletePassword": {
            "type": "boolean"
          },
          "placeholderKey": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          },
          "tooltipKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "input"
            ],
            "type": "string",
            "readOnly": true
          },
          "variant": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstanceIM": {
        "type": "object",
        "properties": {
          "registrationGuid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Int32ResultVM": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "JiraSettings": {
        "type": "object",
        "properties": {
          "apiToken": {
            "type": "string",
            "nullable": true
          },
          "apiUrl": {
            "type": "string",
            "nullable": true
          },
          "personalAccessToken": {
            "type": "string",
            "nullable": true
          },
          "projectCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JiraTaskInfoFilter": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "urls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JiraTaskInfoFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/JiraTaskInfoFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JiraTaskInfoVM": {
        "type": "object",
        "properties": {
          "issueTypeIconUrl": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "statusColorName": {
            "type": "string",
            "nullable": true
          },
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "taskKey": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JiraTaskInfoVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JiraTaskInfoVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JsonInput": {
        "required": [
          "encrypted",
          "key",
          "multiLine",
          "onEditDeletePassword",
          "required",
          "type"
        ],
        "type": "object",
        "properties": {
          "encrypted": {
            "type": "boolean"
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "labelKey": {
            "type": "string",
            "nullable": true
          },
          "labelVariant": {
            "enum": [
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "paragraph",
              "body1",
              "body1underline",
              "captionText1",
              "captionText1underline",
              "captionText1caps",
              "captionText2",
              "captionText3"
            ],
            "type": "string",
            "nullable": true
          },
          "multiLine": {
            "type": "integer",
            "format": "int32"
          },
          "onEditDeletePassword": {
            "type": "boolean"
          },
          "placeholderKey": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          },
          "tooltipKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "json_input"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LanguageAddVM": {
        "required": [
          "languageCode"
        ],
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LanguageVM": {
        "required": [
          "languageCode",
          "languageId"
        ],
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "minLength": 1,
            "type": "string"
          },
          "languageId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LanguageVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LastActivityDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "seeAllLink": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "last-activity"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LastActivityDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "seeAllLink": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "last-activity"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LastActivityDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "seeAllLink": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "last-activity"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LastActivityOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "seeAllLink": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "last-activity"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LatestModelVersionByBranchFilterView": {
        "required": [
          "branchId"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "$ref": "#/components/schemas/BranchesModelsVersionsFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LdapGroupMappingSettings": {
        "required": [
          "typeId"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "typeId": {
            "$ref": "#/components/schemas/LdapGroupSyncTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "LdapGroupOnlyMappingSettings": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LdapGroupSyncTypeEnum": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "LdapMappingSettings": {
        "required": [
          "ldapPageSizeLimit"
        ],
        "type": "object",
        "properties": {
          "adminGroupMappingSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LdapGroupMappingSettings"
            },
            "nullable": true
          },
          "contributorGroupMappingSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LdapGroupMappingSettings"
            },
            "nullable": true
          },
          "descriptionAttributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "emailAttributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "firstNameAttributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "lastNameAttributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ldapGroupSearchQuery": {
            "type": "string",
            "nullable": true
          },
          "ldapPageSizeLimit": {
            "type": "integer",
            "format": "int32"
          },
          "ldapRootUserSearchQuery": {
            "type": "string",
            "nullable": true
          },
          "ldapUserIdAttribute": {
            "type": "string",
            "nullable": true
          },
          "ldapUserInGroupAttribute": {
            "type": "string",
            "nullable": true
          },
          "ldapUserObjectClass": {
            "type": "string",
            "nullable": true
          },
          "ldapUserSortAttribute": {
            "type": "string",
            "nullable": true
          },
          "loginAttribute": {
            "type": "string",
            "nullable": true
          },
          "nameAttributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "onlyGroupMappingSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LdapGroupOnlyMappingSettings"
            },
            "nullable": true
          },
          "phoneAttributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "viewerGroupMappingSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LdapGroupMappingSettings"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LdapSettings": {
        "required": [
          "serverPort",
          "useSsl"
        ],
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "serverNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "serverPort": {
            "type": "integer",
            "format": "int32"
          },
          "useSsl": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LengthStatisticsDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "histogramAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "maxValueAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "meanAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "medianAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "minValueAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "noValueText": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "length-statistics"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LengthStatisticsDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "histogramAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "maxValueAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "meanAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "medianAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "minValueAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "noValueText": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "length-statistics"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LengthStatisticsDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "histogramAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "maxValueAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "meanAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "medianAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "minValueAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "noValueText": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "length-statistics"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LengthStatisticsOutputTemplate": {
        "required": [
          "histogramAttribute",
          "maxValueAttribute",
          "meanAttribute",
          "medianAttribute",
          "minValueAttribute",
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "histogramAttribute": {
            "type": "integer",
            "format": "int32"
          },
          "maxValueAttribute": {
            "type": "integer",
            "format": "int32"
          },
          "meanAttribute": {
            "type": "integer",
            "format": "int32"
          },
          "medianAttribute": {
            "type": "integer",
            "format": "int32"
          },
          "minValueAttribute": {
            "type": "integer",
            "format": "int32"
          },
          "noValueText": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "length-statistics"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LicenseServerInstanceInfoVM": {
        "type": "object",
        "properties": {
          "paymentLink": {
            "type": "string",
            "nullable": true
          },
          "trialEndTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LicenseServiceSettings": {
        "type": "object",
        "properties": {
          "apiToken": {
            "type": "string",
            "nullable": true
          },
          "baseUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LineageSettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LinkVM": {
        "required": [
          "isQueryable"
        ],
        "type": "object",
        "properties": {
          "isQueryable": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MDImportJobVM": {
        "required": [
          "uuid"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jobId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "samplingId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceName": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "typeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "MDScriptDefinitionVM": {
        "required": [
          "uuid"
        ],
        "type": "object",
        "properties": {
          "queryTypeKey": {
            "type": "string",
            "nullable": true
          },
          "samplingId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "scriptDefinition": {
            "type": "string",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "MRObjectRelationGroupedVM": {
        "type": "object",
        "properties": {
          "inheritedFrom": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relations": {
            "$ref": "#/components/schemas/MrObjectRelationVMPagedVM"
          }
        },
        "additionalProperties": false
      },
      "MRObjectReplaceUserRelationVM": {
        "required": [
          "toUserId",
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "fromUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toUserId": {
            "type": "integer",
            "format": "int32"
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MRObjectUserRelationVM": {
        "type": "object",
        "properties": {
          "inheritedFrom": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "usersWithRelation": {
            "$ref": "#/components/schemas/AppUserSimpleObjectVMPagedVM"
          }
        },
        "additionalProperties": false
      },
      "MRSpaceBatchInputRelationVM": {
        "required": [
          "userIds",
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MRSpaceInputRelationVM": {
        "required": [
          "userId",
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MRSpaceUpdateRelationVM": {
        "required": [
          "toUserId",
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "fromUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toUserId": {
            "type": "integer",
            "format": "int32"
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MailSenderSettings": {
        "required": [
          "maxNotificationsInEmail",
          "notificationGroupThreshold"
        ],
        "type": "object",
        "properties": {
          "appLink": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "emailFooter": {
            "type": "string",
            "nullable": true
          },
          "emailSendingFrom": {
            "type": "string",
            "nullable": true
          },
          "instanceVerboseName": {
            "type": "string",
            "nullable": true
          },
          "maxNotificationsInEmail": {
            "type": "integer",
            "format": "int32"
          },
          "notificationGroupThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "supportEmail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MailServiceSettings": {
        "required": [
          "port"
        ],
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MainDatabasePatchTemplate": {
        "type": "object",
        "properties": {
          "centerArea": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDeleteComponent"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchUpdateTemplate"
                }
              ]
            },
            "nullable": true
          },
          "rightArea": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDeleteComponent"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchUpdateTemplate"
                }
              ]
            },
            "nullable": true
          },
          "settings": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NamedComponentDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/NamedComponentDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/DatabaseSettingsPatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/DatabaseSettingsPatchUpdateTemplate"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MainDatabaseTemplate": {
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string",
            "nullable": true
          },
          "centerArea": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TimeSelectorDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabaseTemplate"
                }
              ]
            },
            "nullable": true
          },
          "rightArea": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TimeSelectorDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabaseTemplate"
                }
              ]
            },
            "nullable": true
          },
          "settings": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/DatabaseSettingsTemplate"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MainOutputTemplate": {
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string",
            "nullable": true
          },
          "centralArea": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2OutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudOutputTemplate"
                }
              ]
            },
            "nullable": true,
            "readOnly": true
          },
          "rightArea": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2OutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudOutputTemplate"
                }
              ]
            },
            "nullable": true,
            "readOnly": true
          },
          "settings": {
            "$ref": "#/components/schemas/TemplateOutputSettings"
          }
        },
        "additionalProperties": false
      },
      "MappingVM": {
        "required": [
          "mapping",
          "objectTypeKey",
          "queryKey"
        ],
        "type": "object",
        "properties": {
          "mapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldMappingVM"
            }
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "queryKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MarketplacePackageCategoryVM": {
        "required": [
          "marketplacePackageCategoryId"
        ],
        "type": "object",
        "properties": {
          "marketplacePackageCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "nameValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarketplacePackageCategoryVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketplacePackageCategoryVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarketplacePackageOverviewVM": {
        "required": [
          "isDeleted",
          "isInstalled",
          "marketplacePackageId"
        ],
        "type": "object",
        "properties": {
          "claimValue": {
            "type": "string",
            "nullable": true
          },
          "documentationUrl": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isInstalled": {
            "type": "boolean"
          },
          "latestPackageVersion": {
            "type": "string",
            "nullable": true
          },
          "latestPackageVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "latestPackageVersionStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "marketplaceIconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "marketplacePackageCategoryIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "marketplacePackageId": {
            "type": "integer",
            "format": "int32"
          },
          "nameValue": {
            "type": "string",
            "nullable": true
          },
          "packageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarketplacePackageOverviewVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketplacePackageOverviewVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarketplaceSettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MasterDataHashVM": {
        "required": [
          "hash"
        ],
        "type": "object",
        "properties": {
          "hash": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeEnumKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MasterDataHashVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MasterDataHashVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MergeNodeVM": {
        "required": [
          "changeTypeId",
          "isVirtual",
          "transactionLogId",
          "transactionStateId"
        ],
        "type": "object",
        "properties": {
          "changeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MergeNodeVM"
            },
            "nullable": true
          },
          "conflictedChanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionLogShortInfoVM"
            },
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "extendedAttributeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isVirtual": {
            "type": "boolean"
          },
          "modelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectProperty": {
            "type": "string",
            "nullable": true
          },
          "objectPropertyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeName": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PdmPathVM"
            },
            "nullable": true
          },
          "previousTextValue": {
            "type": "string",
            "nullable": true
          },
          "propertyObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resolvedCustomTextValue": {
            "type": "string",
            "nullable": true
          },
          "selected": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "transactionLogId": {
            "type": "integer",
            "format": "int32"
          },
          "transactionStateId": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MergeNodeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MergeNodeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MetadataImportSettings": {
        "required": [
          "processingTimeout",
          "uploadFileSizeLimit"
        ],
        "type": "object",
        "properties": {
          "fileServicePath": {
            "type": "string",
            "nullable": true
          },
          "processingTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "uploadFileSizeLimit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ModelCodeTableVM": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModelCodeTableVMFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/ModelCodeTableVM"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModelCodeTableVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelCodeTableVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModelFilter": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "gestorName": {
            "type": "string",
            "nullable": true
          },
          "locked": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockedByUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lockedByUserName": {
            "type": "string",
            "nullable": true
          },
          "mandatoryAccessRights": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "updaterName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModelFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/ModelFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModelVersionInfoVM": {
        "required": [
          "branchId",
          "canApprove",
          "created",
          "gestorId",
          "modelId",
          "modelVersionId",
          "modelVersionStateId",
          "versionNumber"
        ],
        "type": "object",
        "properties": {
          "approved": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "approver": {
            "type": "string",
            "nullable": true
          },
          "approverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseBranchName": {
            "type": "string",
            "nullable": true
          },
          "baseVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseVersionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "canApprove": {
            "type": "boolean"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "gestorId": {
            "type": "integer",
            "format": "int32"
          },
          "modelId": {
            "type": "integer",
            "format": "int32"
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "modelVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "modelVersionStateId": {
            "type": "integer",
            "format": "int32"
          },
          "versionNumber": {
            "type": "integer",
            "format": "int32"
          },
          "versionStateName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModelsDetailModelVM": {
        "required": [
          "allModelVersionCount",
          "isModelOwnerGroup",
          "lastModelVersionId",
          "lastUpdateById",
          "lastUpdatedWhen",
          "masterVersionCount",
          "modelId",
          "modelOwnerId",
          "modelStateId",
          "sourceCount",
          "targetCount",
          "totalObjectCount"
        ],
        "type": "object",
        "properties": {
          "allModelVersionCount": {
            "type": "integer",
            "format": "int32"
          },
          "annotation": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "diagramCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "domainCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fullPath": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PathItemVM"
            },
            "nullable": true
          },
          "isModelOwnerGroup": {
            "type": "boolean"
          },
          "lastModelVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "lastUpdateById": {
            "type": "integer",
            "format": "int32"
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedWhen": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedWhere": {
            "type": "string",
            "nullable": true
          },
          "masterVersionCount": {
            "type": "integer",
            "format": "int32"
          },
          "modelId": {
            "type": "integer",
            "format": "int32"
          },
          "modelOwner": {
            "type": "string",
            "nullable": true
          },
          "modelOwnerId": {
            "type": "integer",
            "format": "int32"
          },
          "modelStateId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "procedureCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ruleCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceBranchName": {
            "type": "string",
            "nullable": true
          },
          "sourceCount": {
            "type": "integer",
            "format": "int32"
          },
          "tableCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalObjectCount": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "viewCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrApplicationInSpaceFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "shortcutKey": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrApplicationInSpaceFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrApplicationInSpaceFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrAttributeAddInputVM": {
        "required": [
          "attributeTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeValueReferenceTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "startVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrAttributeEditInputVM": {
        "type": "object",
        "properties": {
          "attributeValueReferenceTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "startVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrAttributeInObjectVM": {
        "required": [
          "attributeId",
          "attributeTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeLanguageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeTypeName": {
            "type": "string",
            "nullable": true
          },
          "attributeValueReferenceTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "calculatedTextValue": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "isEditable": {
            "type": "boolean",
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "placeholderKey": {
            "type": "string",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrAttributeInObjectVersionVM": {
        "required": [
          "attributeId",
          "attributeTypeId",
          "objectId",
          "startVersionId"
        ],
        "type": "object",
        "properties": {
          "attributeId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeLanguageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeTypeName": {
            "type": "string",
            "nullable": true
          },
          "attributeValueReferenceTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "calculatedTextValue": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "endVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "isEditable": {
            "type": "boolean",
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "placeholderKey": {
            "type": "string",
            "nullable": true
          },
          "startVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrAttributeLatestChangeVM": {
        "required": [
          "attributeId",
          "attributeTypeId",
          "objectId",
          "startVersionId",
          "updated",
          "updaterId"
        ],
        "type": "object",
        "properties": {
          "attributeId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeLanguageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeValueReferenceTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "startVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "updaterId": {
            "type": "integer",
            "format": "int32"
          },
          "updaterName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrChangeLogFilter": {
        "type": "object",
        "properties": {
          "actionTranslation": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "changeLogTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "currentUserRelationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "operationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "previousValue": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "toVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "valueChange": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrChangeLogFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrChangeLogFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrChangeLogVM": {
        "required": [
          "changeLogId",
          "created",
          "versionId"
        ],
        "type": "object",
        "properties": {
          "actionTranslation": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "changeLogId": {
            "type": "integer",
            "format": "int32"
          },
          "changeLogType": {
            "$ref": "#/components/schemas/CChangeLogTypeVM"
          },
          "changeLogTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "currentUserRelationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "operationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "previousValue": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrChangeLogVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrChangeLogVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrCommentAddInputVM": {
        "required": [
          "categoryId",
          "objectId",
          "textValue"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "commentTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "parentCommentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "textValue": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MrCommentEditInputVM": {
        "required": [
          "categoryId",
          "textValue"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "commentTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "textValue": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MrCommentFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "changedAfter": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBefore": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "commentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "commentTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeName": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrCommentFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrCommentFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrCommentTypeVM": {
        "required": [
          "categoryId",
          "commentTypeId",
          "isRemovable",
          "isSelectable",
          "isVisibleCategory"
        ],
        "type": "object",
        "properties": {
          "categoryDescriptionKey": {
            "type": "string",
            "nullable": true
          },
          "categoryEnumKey": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryNameKey": {
            "type": "string",
            "nullable": true
          },
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "commentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "isRemovable": {
            "type": "boolean"
          },
          "isSelectable": {
            "type": "boolean"
          },
          "isVisibleCategory": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "workflowId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrCommentTypeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrCommentTypeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrCommentVM": {
        "required": [
          "applicationId",
          "branchId",
          "commentId",
          "created",
          "creatorId",
          "objectId",
          "objectTypeId",
          "spaceId",
          "updated"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "commentId": {
            "type": "integer",
            "format": "int32"
          },
          "commentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrCommentTypeVM"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeName": {
            "type": "string",
            "nullable": true
          },
          "parentCommentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrCommentVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrCommentVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrCommentWorkflowStateVM": {
        "required": [
          "categoryId",
          "iconId",
          "isVisibleCategory",
          "workflowStateId"
        ],
        "type": "object",
        "properties": {
          "categoryDescriptionKey": {
            "type": "string",
            "nullable": true
          },
          "categoryEnumKey": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryNameKey": {
            "type": "string",
            "nullable": true
          },
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "isVisibleCategory": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrCommentWorkflowStateVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrCommentWorkflowStateVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrConceptPermissionInfo": {
        "required": [
          "applications",
          "attributeConditions",
          "branchId",
          "changed",
          "configuredAttributes",
          "configuredObjectRelations",
          "configuredUserRelations",
          "disableChildCreationBasedOnWorkflowState",
          "hasSpaceRead",
          "hasSpaceWrite",
          "isObjectNotCreatable",
          "isPublicSpace",
          "isSpaceAdmin",
          "objectIsDeleted",
          "objectNotCreatable",
          "objectRelationConditions",
          "objectType",
          "objectTypeFeatureAnonymousConceptCheckWorkflowOnPublish",
          "spaceId",
          "spaceState",
          "status",
          "userGroupObjectRelations",
          "userGroups",
          "userGroupSpaceRelations",
          "userObjectRelations",
          "userRelationsConditions",
          "userSpaceAdminGroups",
          "userSpaceReadGroups",
          "userSpaceRelations",
          "userSpaceWriteGroups",
          "workflow",
          "workflowTransitions"
        ],
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApplicationVM"
            }
          },
          "attributeConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RAttributeTypeConditionVM"
            }
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "changed": {
            "$ref": "#/components/schemas/MrObjectCompareResultVM"
          },
          "configuredAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RObjectAttributeVM"
            }
          },
          "configuredObjectRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RObjectRelationTypeVM"
            }
          },
          "configuredUserRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RObjectTypeUserObjectRelationTypeVM"
            }
          },
          "disableChildCreationBasedOnWorkflowState": {
            "type": "boolean"
          },
          "hasSpaceRead": {
            "type": "boolean"
          },
          "hasSpaceWrite": {
            "type": "boolean"
          },
          "isObjectNotCreatable": {
            "type": "boolean"
          },
          "isPublicSpace": {
            "type": "boolean"
          },
          "isSpaceAdmin": {
            "type": "boolean"
          },
          "mandatoryAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionInfoMandatoryEntity"
            },
            "nullable": true
          },
          "mandatoryObjectRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionInfoMandatoryEntity"
            },
            "nullable": true
          },
          "mandatoryUserRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionInfoMandatoryEntity"
            },
            "nullable": true
          },
          "objectIsDeleted": {
            "type": "boolean"
          },
          "objectNotCreatable": {
            "type": "boolean"
          },
          "objectRelationConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RRelationTypeConditionVM"
            }
          },
          "objectType": {
            "$ref": "#/components/schemas/CObjectTypeFeatureInfoVM"
          },
          "objectTypeFeatureAnonymousConceptCheckWorkflowOnPublish": {
            "type": "boolean"
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentStatus": {
            "$ref": "#/components/schemas/WorkflowStateWithRolesVM"
          },
          "sourceObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceObjectName": {
            "type": "string",
            "nullable": true
          },
          "sourceStatus": {
            "$ref": "#/components/schemas/WorkflowStateWithRolesVM"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceState": {
            "$ref": "#/components/schemas/CObjectStateEnum"
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStateWithRolesVM"
          },
          "userGroupObjectRelations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PermissionInfoGroupSpaceRelation"
            }
          },
          "userGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          },
          "userGroupSpaceRelations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PermissionInfoGroupSpaceRelation"
            }
          },
          "userObjectRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationVM"
            }
          },
          "userRelationsConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RUserObjectRelationTypeConditionVM"
            }
          },
          "userRole": {
            "$ref": "#/components/schemas/AppRoleEnum"
          },
          "userSpaceAdminGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          },
          "userSpaceReadGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          },
          "userSpaceRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationVM"
            }
          },
          "userSpaceWriteGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          },
          "workflow": {
            "$ref": "#/components/schemas/WorkflowVM"
          },
          "workflowTransitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStateTransitionsInfoVM"
            }
          }
        },
        "additionalProperties": false
      },
      "MrDynamicHierarchyFilter": {
        "required": [
          "applicationId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "hierarchyDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "levelDepth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentHierarchyLevelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrDynamicHierarchyFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrDynamicHierarchyFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrDynamicHierarchyPathInputVM": {
        "required": [
          "hierarchyChildLimit"
        ],
        "type": "object",
        "properties": {
          "hierarchyChildLimit": {
            "type": "integer",
            "format": "int32"
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrDynamicHierarchyVM": {
        "required": [
          "applicationId",
          "hasChildren",
          "hierarchyLevelId",
          "position",
          "spaceId",
          "startVersionId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrDynamicHierarchyVM"
            },
            "nullable": true
          },
          "hasChildren": {
            "type": "boolean"
          },
          "hierarchyDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hierarchyLevelId": {
            "type": "integer",
            "format": "int32"
          },
          "hierarchyPath": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrHierarchyLabelVM"
            },
            "nullable": true
          },
          "levelDepth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentHierarchyLevelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "startVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "totalObjectCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrDynamicHierarchyVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrDynamicHierarchyVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrEmbeddedTextInObjectVM": {
        "required": [
          "attributeId",
          "attributeTypeId",
          "containsLoop",
          "targetApplicationId",
          "targetObjectId",
          "targetObjectTypeId",
          "targetSpaceId"
        ],
        "type": "object",
        "properties": {
          "attributeEndVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributeLanguageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributeTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributeTypeName": {
            "type": "string",
            "nullable": true
          },
          "attributeValueReferenceTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "calculatedTextValue": {
            "type": "string",
            "nullable": true
          },
          "containsLoop": {
            "type": "boolean"
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "isEditable": {
            "type": "boolean",
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "numbering": {
            "type": "string",
            "nullable": true
          },
          "placeholderKey": {
            "type": "string",
            "nullable": true
          },
          "targetApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "targetObjectApplicationNameKey": {
            "type": "string",
            "nullable": true
          },
          "targetObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "targetObjectName": {
            "type": "string",
            "nullable": true
          },
          "targetObjectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "targetObjectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "targetObjectSpaceName": {
            "type": "string",
            "nullable": true
          },
          "targetObjectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "targetObjectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "targetSpaceId": {
            "type": "integer",
            "format": "int32"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrEmbeddedTextStatusVM": {
        "required": [
          "containsLoop"
        ],
        "type": "object",
        "properties": {
          "containsLoop": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MrEmptyAttributeResultVM": {
        "required": [
          "attributeId"
        ],
        "type": "object",
        "properties": {
          "attributeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrHierarchyLabelVM": {
        "type": "object",
        "properties": {
          "hierarchyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hierarchyLevelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrHybridHierarchyFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hierarchyDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hierarchyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentHierarchyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrHybridHierarchyFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrHybridHierarchyFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrHybridHierarchyVM": {
        "required": [
          "applicationId",
          "childCount",
          "createdVersionId",
          "hasChildren",
          "hierarchyId",
          "spaceId",
          "startVersionId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "childCount": {
            "type": "integer",
            "format": "int32"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrHybridHierarchyVM"
            },
            "nullable": true
          },
          "createdVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "hasChildren": {
            "type": "boolean"
          },
          "hierarchyId": {
            "type": "integer",
            "format": "int32"
          },
          "hierarchyLevelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hierarchyPath": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrHierarchyLabelVM"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentHierarchyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "startVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "totalObjectCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrHybridHierarchyVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrHybridHierarchyVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrImportDataBatchInputVM": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrImportDataInputVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrImportDataInputVM": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImportDataAttributeVM"
            },
            "nullable": true
          },
          "id": {
            "$ref": "#/components/schemas/ImportDataIdInputVM"
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImportDataRelationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrImportJobInputVM": {
        "required": [
          "errorStrategy",
          "mergeStrategy"
        ],
        "type": "object",
        "properties": {
          "errorStrategy": {
            "$ref": "#/components/schemas/CImportJobErrorStrategyEnum"
          },
          "mergeStrategy": {
            "$ref": "#/components/schemas/CImportJobMergeStrategyEnum"
          }
        },
        "additionalProperties": false
      },
      "MrImportJobVM": {
        "required": [
          "errorStrategy",
          "importJobId",
          "mergeStrategy"
        ],
        "type": "object",
        "properties": {
          "currentStage": {
            "$ref": "#/components/schemas/CJobStageEnum"
          },
          "errorStrategy": {
            "$ref": "#/components/schemas/CImportJobErrorStrategyEnum"
          },
          "importJobId": {
            "type": "integer",
            "format": "int32"
          },
          "mergeStrategy": {
            "$ref": "#/components/schemas/CImportJobMergeStrategyEnum"
          },
          "result": {
            "$ref": "#/components/schemas/CJobResultEnum"
          },
          "state": {
            "$ref": "#/components/schemas/CJobStateEnum"
          }
        },
        "additionalProperties": false
      },
      "MrMultirelationApiFilter": {
        "required": [
          "objectId"
        ],
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeFilters": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "objectTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrMultirelationApiFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrMultirelationApiFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrMultirelationColumnVM": {
        "required": [
          "applicationId",
          "objectId",
          "objectTypeId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectLevel1": {
            "type": "string",
            "nullable": true
          },
          "objectLevel2": {
            "type": "string",
            "nullable": true
          },
          "objectLevel3": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrMultirelationRowVM": {
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrMultirelationColumnVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrMultirelationRowVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrMultirelationRowVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectAddInputVM": {
        "required": [
          "applicationId",
          "attributes",
          "name",
          "objectTypeId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrAttributeAddInputVM"
            }
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectAddPrivatableInputVM": {
        "required": [
          "applicationId",
          "attributes",
          "name",
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "addToPrivateSpace": {
            "type": "boolean",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrAttributeAddInputVM"
            }
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectAddUserRelationVM": {
        "required": [
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "inheritFrom": {
            "$ref": "#/components/schemas/AttributeValueReferenceTypeEnum"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectApiFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "ignoreUserRelationGroups": {
            "type": "boolean",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "statusIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userObjectRelationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectApiFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectApiFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectApiVM": {
        "required": [
          "applicationId",
          "objectId",
          "objectTypeId",
          "spaceId",
          "statusId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectType": {
            "$ref": "#/components/schemas/CObjectTypeInObjectVM"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectApiVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectApiVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectApproveConceptInputVM": {
        "type": "object",
        "properties": {
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectAttributeRevertPreviewVM": {
        "required": [
          "attributeTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "calculatedTextValue": {
            "type": "string",
            "nullable": true
          },
          "embeddedTexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrEmbeddedTextInObjectVM"
            },
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectBulkDeleteInput": {
        "type": "object",
        "properties": {
          "apiTableFilter": {
            "$ref": "#/components/schemas/MrObjectCustomizableOverviewFilterFilterView"
          },
          "excludeObjectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectBulkEditAttribute": {
        "required": [
          "attributeTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "newValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectBulkEditInput": {
        "type": "object",
        "properties": {
          "apiTableFilter": {
            "$ref": "#/components/schemas/MrObjectCustomizableOverviewFilterFilterView"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectBulkEditAttribute"
            },
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "excludeObjectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectBulkEditObjectRelation"
            },
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectBulkEditProperty"
            },
            "nullable": true
          },
          "userRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectBulkEditUserRelation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectBulkEditObjectRelation": {
        "required": [
          "objectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "objectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectBulkEditOptionsInput": {
        "required": [
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "apiTableFilter": {
            "$ref": "#/components/schemas/MrObjectCustomizableOverviewFilterFilterView"
          },
          "objectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectBulkEditProperty": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectBulkEditUserRelation": {
        "required": [
          "userRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "userRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectChildRelationsFilter": {
        "type": "object",
        "properties": {
          "additionalSourceAttributes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "additionalTargetAttributes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dataDictionaryColumn": {
            "type": "string",
            "nullable": true
          },
          "dataDictionaryModel": {
            "type": "string",
            "nullable": true
          },
          "dataDictionaryObject": {
            "type": "string",
            "nullable": true
          },
          "excludeRelationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "excludeToObjectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromApplicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromHierarchyPath": {
            "type": "string",
            "nullable": true
          },
          "fromObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromObjectName": {
            "type": "string",
            "nullable": true
          },
          "fromObjectStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectStatusIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromSpaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromSpaceName": {
            "type": "string",
            "nullable": true
          },
          "includeChildrenWithNoRelation": {
            "type": "boolean",
            "nullable": true
          },
          "levels": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectRelationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "relationName": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "relationTypeName": {
            "type": "string",
            "nullable": true
          },
          "sourceAttributeValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "sourceTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceTypeIsUpgradable": {
            "type": "boolean",
            "nullable": true
          },
          "sourceTypeName": {
            "type": "string",
            "nullable": true
          },
          "startingLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetAttributeValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "toApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toApplicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toApplicationName": {
            "type": "string",
            "nullable": true
          },
          "toGrandParentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toGrandParentObjectName": {
            "type": "string",
            "nullable": true
          },
          "toGrandParentObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toHierarchyPath": {
            "type": "string",
            "nullable": true
          },
          "toObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toObjectName": {
            "type": "string",
            "nullable": true
          },
          "toObjectStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectStatusIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toParentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toParentObjectName": {
            "type": "string",
            "nullable": true
          },
          "toParentObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toSpaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toSpaceName": {
            "type": "string",
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectChildRelationsFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectChildRelationsFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectCommentFilter": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "changedAfter": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBefore": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "commentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "commentTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workflowStateIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectCommentFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectCommentFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectCommentWithReactionVM": {
        "required": [
          "branchId",
          "commentId",
          "created",
          "creatorId"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectCommentWithReactionVM"
            },
            "nullable": true
          },
          "commentData": {
            "type": "string",
            "nullable": true
          },
          "commentId": {
            "type": "integer",
            "format": "int32"
          },
          "commentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrCommentTypeVM"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "originalCreator": {
            "type": "string",
            "nullable": true
          },
          "originalCreatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "originalCreatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentCommentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reactionsSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserReactionSummary"
            },
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workflowStateTransitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStateUserTransitionVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectCommentWithReactionVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectCommentWithReactionVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectCompareResultVM": {
        "type": "object",
        "properties": {
          "addedRelationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "attributeTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "deletedRelationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "userObjectRelationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectConceptAddVM": {
        "required": [
          "attributes"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrAttributeAddInputVM"
            }
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectConceptEditVM": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectConceptListApiFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvalStateId": {
            "$ref": "#/components/schemas/CConceptApprovalStateEnum"
          },
          "approverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "declinerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "excludedCreatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDraft": {
            "type": "boolean",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "requesterForApprovalId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectConceptListApiFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectConceptListApiFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectConceptListFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvalStateId": {
            "$ref": "#/components/schemas/CConceptApprovalStateEnum"
          },
          "approverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "declinerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDraft": {
            "type": "boolean",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "requesterForApprovalId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectConceptListFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectConceptListFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectConceptListVM": {
        "required": [
          "approvalStateId",
          "branchId",
          "objectId",
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvalStateId": {
            "$ref": "#/components/schemas/CConceptApprovalStateEnum"
          },
          "approvalStatusNameKey": {
            "type": "string",
            "nullable": true
          },
          "approverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "conceptName": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "decliner": {
            "type": "string",
            "nullable": true
          },
          "declinerColorHex": {
            "type": "string",
            "nullable": true
          },
          "declinerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDraft": {
            "type": "boolean",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "numberOfChanges": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "requesterForApprovalId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sharedUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserVM"
            },
            "nullable": true
          },
          "sourceObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "startVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updater": {
            "type": "string",
            "nullable": true
          },
          "updaterColorHex": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectConceptListVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectConceptListVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectConceptShareAddVM": {
        "required": [
          "branchId",
          "objectId",
          "userIds"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "MrObjectConceptShareVM": {
        "required": [
          "branchId",
          "objectId",
          "userIds"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "MrObjectConceptVM": {
        "required": [
          "applicationId",
          "approvalStateId",
          "branchId",
          "canApply",
          "canMove",
          "dislikeCount",
          "dislikedByCurrentUser",
          "hasEditableEmptyAttributes",
          "isEditable",
          "isFromSourceHeadVersion",
          "lastChangedVersion",
          "likeCount",
          "likedByCurrentUser",
          "mandatoryAttributesFilled",
          "objectId",
          "objectName",
          "objectTypeId",
          "spaceId",
          "startVersion",
          "statusId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "approvalStateId": {
            "$ref": "#/components/schemas/CConceptApprovalStateEnum"
          },
          "approvalStatusNameKey": {
            "type": "string",
            "nullable": true
          },
          "attachmentCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MrAttributeInObjectVM"
            },
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "canApply": {
            "type": "boolean"
          },
          "canMove": {
            "type": "boolean"
          },
          "conceptName": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currentSourceObjectVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "decliner": {
            "type": "string",
            "nullable": true
          },
          "declinerColorHex": {
            "type": "string",
            "nullable": true
          },
          "declinerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dislikeCount": {
            "type": "integer",
            "format": "int32"
          },
          "dislikedByCurrentUser": {
            "type": "boolean"
          },
          "embeddedTexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrEmbeddedTextInObjectVM"
            },
            "nullable": true
          },
          "endVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasChildren": {
            "type": "boolean",
            "nullable": true
          },
          "hasEditableEmptyAttributes": {
            "type": "boolean"
          },
          "isDraft": {
            "type": "boolean",
            "nullable": true
          },
          "isEditable": {
            "type": "boolean"
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isFromSourceHeadVersion": {
            "type": "boolean"
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "lastChangedVersion": {
            "type": "integer",
            "format": "int32"
          },
          "likeCount": {
            "type": "integer",
            "format": "int32"
          },
          "likedByCurrentUser": {
            "type": "boolean"
          },
          "mandatoryAttributesFilled": {
            "type": "boolean"
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "numbering": {
            "type": "string",
            "nullable": true
          },
          "numberOfChanges": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectConceptCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "minLength": 1,
            "type": "string"
          },
          "objectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "objectType": {
            "$ref": "#/components/schemas/CObjectTypeInObjectVM"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentObjectName": {
            "type": "string",
            "nullable": true
          },
          "parentObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "pathNameObject": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "relations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MrObjectRelationSimpleVM"
            },
            "nullable": true
          },
          "sourceObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "startVersion": {
            "type": "integer",
            "format": "int32"
          },
          "statusId": {
            "type": "integer",
            "format": "int32"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "unresolvedDependencyCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updater": {
            "type": "string",
            "nullable": true
          },
          "updaterColorHex": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userObjectRelations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MrObjectUserObjectRelationVM"
            },
            "nullable": true
          },
          "workflowId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workflowStateTransitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStateTransitionVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectConditionalSearchFilter": {
        "required": [
          "objectId",
          "searchValue"
        ],
        "type": "object",
        "properties": {
          "basedOnFirstLevelRelationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "basedOnSecondLevelRelationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "searchValue": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MrObjectConditionalSearchFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectConditionalSearchFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectConditionalSearchVm": {
        "required": [
          "applicationId",
          "objectId",
          "objectTypeId",
          "spaceId",
          "workflowStateId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "numbering": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStateNameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectConditionalSearchVmPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectConditionalSearchVm"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectCusomizableRecommendationVM": {
        "required": [
          "applicationId",
          "created",
          "creatorId",
          "objectId",
          "objectTypeId",
          "spaceId",
          "statusId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MrObjectCustomizableOverviewAttributeVM"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetObjectRelationShortInfoVM"
            },
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeName": {
            "type": "string",
            "nullable": true
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "pathNames": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "sourceObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32"
          },
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterColorHex": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updaterName": {
            "type": "string",
            "nullable": true
          },
          "userRelations": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AppUserAttributeVM"
              },
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectCusomizableRecommendationVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectCusomizableRecommendationVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectCustomizableOverviewAttributeVM": {
        "required": [
          "isParentInherited",
          "isSpaceInherited"
        ],
        "type": "object",
        "properties": {
          "isParentInherited": {
            "type": "boolean"
          },
          "isSpaceInherited": {
            "type": "boolean"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectCustomizableOverviewFilter": {
        "type": "object",
        "properties": {
          "additionalAttributes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "additionalObjectRelations": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "additionalUserRelations": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "attributeValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "currentUserRelationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "hierarchyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "includeAllTimeViews": {
            "type": "boolean",
            "nullable": true
          },
          "includeFavouriteCount": {
            "type": "boolean",
            "nullable": true
          },
          "includeKarma": {
            "type": "boolean",
            "nullable": true
          },
          "includeLastMonthViews": {
            "type": "boolean",
            "nullable": true
          },
          "includeRelations": {
            "type": "boolean",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "levels": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectRelationValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectTypeName": {
            "type": "string",
            "nullable": true
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "sourceObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "statusIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updaterName": {
            "type": "string",
            "nullable": true
          },
          "userRelationValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectCustomizableOverviewFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectCustomizableOverviewFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectCustomizableOverviewVM": {
        "required": [
          "applicationId",
          "created",
          "creatorId",
          "numberOfFavourites",
          "numberOfRelation",
          "objectId",
          "objectKarma",
          "objectTypeId",
          "spaceId",
          "statusId",
          "viewsAllTime",
          "viewsIn1M"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MrObjectCustomizableOverviewAttributeVM"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "hierarchyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "numberOfFavourites": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfRelation": {
            "type": "integer",
            "format": "int32"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectKarma": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetObjectRelationShortInfoVM"
            },
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeName": {
            "type": "string",
            "nullable": true
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "pathNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PathName"
            },
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32"
          },
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterColorHex": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updaterName": {
            "type": "string",
            "nullable": true
          },
          "userRelations": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AppUserAttributeVM"
              },
              "nullable": true
            },
            "nullable": true
          },
          "viewsAllTime": {
            "type": "integer",
            "format": "int32"
          },
          "viewsIn1M": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectCustomizableOverviewVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectCustomizableOverviewVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectCustomizableRecommendationFilter": {
        "type": "object",
        "properties": {
          "additionalAttributes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "additionalObjectRelations": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "additionalUserRelations": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "attributeValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "currentUserRelationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectRelationValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectTypeName": {
            "type": "string",
            "nullable": true
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "sourceObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "statusIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterColorHex": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updaterName": {
            "type": "string",
            "nullable": true
          },
          "userRelationValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectCustomizableRecommendationFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectCustomizableRecommendationFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectDataCheckExistenceVM": {
        "required": [
          "fileExists"
        ],
        "type": "object",
        "properties": {
          "fileExists": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MrObjectDataCopyVM": {
        "required": [
          "fromFileId",
          "fromObjectId",
          "toObjectId"
        ],
        "type": "object",
        "properties": {
          "fromFileId": {
            "minLength": 1,
            "type": "string"
          },
          "fromObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "fromVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectDataDiffFilter": {
        "type": "object",
        "properties": {
          "actionTranslation": {
            "type": "string",
            "nullable": true
          },
          "creatorIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "objectDataName": {
            "type": "string",
            "nullable": true
          },
          "sourceVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updatedFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectDataDiffFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectDataDiffFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectDataDiffVM": {
        "required": [
          "applicationId",
          "branchId",
          "objectDataId",
          "objectId",
          "objectTypeId",
          "spaceId",
          "updated",
          "updaterId",
          "versionId"
        ],
        "type": "object",
        "properties": {
          "actionTranslation": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "objectDataId": {
            "type": "integer",
            "format": "int32"
          },
          "objectDataName": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "operationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "updaterColorHex": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32"
          },
          "updaterName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectDataDiffVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectDataDiffVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectDataFilter": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectDataFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectDataFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectDataInputVM": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectDataStreamVM": {
        "required": [
          "created"
        ],
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fileData": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectDataVM": {
        "required": [
          "creatorId",
          "objectDataId",
          "objectId",
          "startVersion"
        ],
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectDataId": {
            "type": "integer",
            "format": "int32"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "startVersion": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VersionInfoVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectDataVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectDataVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectDeclineConceptInputVM": {
        "type": "object",
        "properties": {
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectDeleteUserRelationVM": {
        "required": [
          "userId",
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "inheritFrom": {
            "$ref": "#/components/schemas/AttributeValueReferenceTypeEnum"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectDependencyActionEnum": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "MrObjectDependencyChangeFilter": {
        "type": "object",
        "properties": {
          "additionalDependentObjectUserRelations": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "additionalObjectUserRelations": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "attributeTranslation": {
            "type": "string",
            "nullable": true
          },
          "attributeTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "changeLogTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dependentObjectApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dependentObjectApplicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "dependentObjectApplicationNameKey": {
            "type": "string",
            "nullable": true
          },
          "dependentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dependentObjectName": {
            "type": "string",
            "nullable": true
          },
          "dependentObjectObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dependentObjectObjectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "dependentObjectObjectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "dependentObjectSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dependentObjectSpaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "dependentObjectSpaceName": {
            "type": "string",
            "nullable": true
          },
          "dependentObjectUserRelationValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "isValidated": {
            "type": "boolean",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "objectApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectApplicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectApplicationNameKey": {
            "type": "string",
            "nullable": true
          },
          "objectDependencyChangeLogId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectObjectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectObjectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "objectSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectSpaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectSpaceName": {
            "type": "string",
            "nullable": true
          },
          "objectUserRelationValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "operationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterColorHex": {
            "type": "string",
            "nullable": true
          },
          "updaterEmail": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updaterName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectDependencyChangeFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectDependencyChangeFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectDependencyChangeVM": {
        "required": [
          "canValidate",
          "changeLogTypeId",
          "created",
          "dependentObjectApplicationId",
          "dependentObjectId",
          "dependentObjectObjectTypeId",
          "dependentObjectSpaceId",
          "isValidated",
          "objectApplicationId",
          "objectDependencyChangeLogId",
          "objectId",
          "objectObjectTypeId",
          "objectSpaceId",
          "operationTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "canValidate": {
            "type": "boolean"
          },
          "changeLogTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "dependentObjectApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "dependentObjectApplicationNameKey": {
            "type": "string",
            "nullable": true
          },
          "dependentObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "dependentObjectName": {
            "type": "string",
            "nullable": true
          },
          "dependentObjectObjectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "dependentObjectObjectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "dependentObjectPath": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "dependentObjectSpaceId": {
            "type": "integer",
            "format": "int32"
          },
          "dependentObjectSpaceName": {
            "type": "string",
            "nullable": true
          },
          "dependentObjectUserRelations": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AppUserAttributeVM"
              },
              "nullable": true
            },
            "nullable": true
          },
          "isValidated": {
            "type": "boolean"
          },
          "objectApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "objectApplicationNameKey": {
            "type": "string",
            "nullable": true
          },
          "objectDependencyChangeLogId": {
            "type": "integer",
            "format": "int32"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectObjectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectObjectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "objectPath": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "objectSpaceId": {
            "type": "integer",
            "format": "int32"
          },
          "objectSpaceName": {
            "type": "string",
            "nullable": true
          },
          "objectUserRelations": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AppUserAttributeVM"
              },
              "nullable": true
            },
            "nullable": true
          },
          "operationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterColorHex": {
            "type": "string",
            "nullable": true
          },
          "updaterEmail": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updaterName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectDependencyChangeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectDependencyChangeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectDependencyEditInputVM": {
        "required": [
          "actionTypeId"
        ],
        "type": "object",
        "properties": {
          "actionTypeId": {
            "$ref": "#/components/schemas/MrObjectDependencyActionEnum"
          }
        },
        "additionalProperties": false
      },
      "MrObjectEditInputVM": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "addToPrivateSpace": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectExportFromSelectedFilter": {
        "type": "object",
        "properties": {
          "allObjects": {
            "type": "boolean",
            "nullable": true
          },
          "apiTableFilter": {
            "$ref": "#/components/schemas/MrObjectCustomizableOverviewFilterFilterView"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributeTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "excludeObjectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "hierarchies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectHierarchyInput"
            },
            "nullable": true
          },
          "relationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userObjectRelationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectExportInputVM": {
        "type": "object",
        "properties": {
          "comparingVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "documentTemplateKey": {
            "type": "string",
            "nullable": true
          },
          "selectedObjectFilter": {
            "$ref": "#/components/schemas/MrObjectExportFromSelectedFilter"
          },
          "splitByTopParent": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "sourceObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectForExportFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeName": {
            "type": "string",
            "nullable": true
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentObjectName": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "startVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workflowId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectForExportFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectForExportFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectGeneralStatisticsVM": {
        "required": [
          "count"
        ],
        "type": "object",
        "properties": {
          "changedInLastDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectHasChangedVM": {
        "required": [
          "hasChanged"
        ],
        "type": "object",
        "properties": {
          "hasChanged": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MrObjectHierarchyEditInfoVM": {
        "required": [
          "canAddChild",
          "canEdit"
        ],
        "type": "object",
        "properties": {
          "canAddChild": {
            "type": "boolean"
          },
          "canEdit": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MrObjectHierarchyFilter": {
        "type": "object",
        "properties": {
          "allowedChildObjectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectHierarchyFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectHierarchyFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectHierarchyInput": {
        "required": [
          "topParentId"
        ],
        "type": "object",
        "properties": {
          "objectIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectIdExportInput"
            },
            "nullable": true
          },
          "topParentId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectHierarchyPathInputVM": {
        "required": [
          "hierarchyChildLimit"
        ],
        "type": "object",
        "properties": {
          "hierarchyChildLimit": {
            "type": "integer",
            "format": "int32"
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectHierarchyVM": {
        "required": [
          "applicationId",
          "canDelete",
          "canMove",
          "childCount",
          "hasChildren",
          "objectId",
          "objectTypeId",
          "position",
          "spaceId",
          "versionId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "canDelete": {
            "type": "boolean"
          },
          "canMove": {
            "type": "boolean"
          },
          "childCount": {
            "type": "integer",
            "format": "int32"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectHierarchyVM"
            },
            "nullable": true
          },
          "hasChildren": {
            "type": "boolean"
          },
          "hierarchyPath": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrHierarchyLabelVM"
            },
            "nullable": true
          },
          "numbering": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "totalChildCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectHierarchyVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectHierarchyVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectIdExportInput": {
        "required": [
          "exclude",
          "id",
          "recursive"
        ],
        "type": "object",
        "properties": {
          "exclude": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "recursive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MrObjectIdsInHierarchyInput": {
        "required": [
          "format"
        ],
        "type": "object",
        "properties": {
          "apiTableFilter": {
            "$ref": "#/components/schemas/MrObjectCustomizableOverviewFilterFilterView"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "excludeObjectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "format": {
            "$ref": "#/components/schemas/FormatTypeEnum"
          },
          "selectedObjectIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectIdExportInput"
            },
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectMoveVM": {
        "required": [
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "insertBeforeObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "withChildren": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectMultipleUserRelationVM": {
        "required": [
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "inheritFrom": {
            "$ref": "#/components/schemas/AttributeValueReferenceTypeEnum"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectNumberingVM": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "startFromLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectPermissionInfo": {
        "required": [
          "applications",
          "attributeConditions",
          "configuredAttributes",
          "configuredObjectRelations",
          "configuredUserRelations",
          "hasSpaceRead",
          "hasSpaceWrite",
          "isPublicSpace",
          "isSpaceAdmin",
          "objectIsDeleted",
          "objectNotCreatable",
          "objectRelationConditions",
          "objectType",
          "spaceId",
          "spaceState",
          "status",
          "userGroupObjectRelations",
          "userGroups",
          "userGroupSpaceRelations",
          "userObjectRelations",
          "userRelationsConditions",
          "userSpaceAdminGroups",
          "userSpaceReadGroups",
          "userSpaceRelations",
          "userSpaceWriteGroups",
          "workflow",
          "workflowTransitions"
        ],
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApplicationVM"
            }
          },
          "attributeConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RAttributeTypeConditionVM"
            }
          },
          "configuredAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RObjectAttributeVM"
            }
          },
          "configuredObjectRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RObjectRelationTypeVM"
            }
          },
          "configuredUserRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RObjectTypeUserObjectRelationTypeVM"
            }
          },
          "hasSpaceRead": {
            "type": "boolean"
          },
          "hasSpaceWrite": {
            "type": "boolean"
          },
          "isPublicSpace": {
            "type": "boolean"
          },
          "isSpaceAdmin": {
            "type": "boolean"
          },
          "mandatoryAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionInfoMandatoryEntity"
            },
            "nullable": true
          },
          "mandatoryObjectRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionInfoMandatoryEntity"
            },
            "nullable": true
          },
          "mandatoryUserRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionInfoMandatoryEntity"
            },
            "nullable": true
          },
          "objectIsDeleted": {
            "type": "boolean"
          },
          "objectNotCreatable": {
            "type": "boolean"
          },
          "objectRelationConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RRelationTypeConditionVM"
            }
          },
          "objectType": {
            "$ref": "#/components/schemas/CObjectTypeFeatureInfoVM"
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceState": {
            "$ref": "#/components/schemas/CObjectStateEnum"
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStateWithRolesVM"
          },
          "userGroupObjectRelations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PermissionInfoGroupSpaceRelation"
            }
          },
          "userGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          },
          "userGroupSpaceRelations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PermissionInfoGroupSpaceRelation"
            }
          },
          "userObjectRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationVM"
            }
          },
          "userRelationsConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RUserObjectRelationTypeConditionVM"
            }
          },
          "userRole": {
            "$ref": "#/components/schemas/AppRoleEnum"
          },
          "userSpaceAdminGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          },
          "userSpaceReadGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          },
          "userSpaceRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationVM"
            }
          },
          "userSpaceWriteGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          },
          "workflow": {
            "$ref": "#/components/schemas/WorkflowVM"
          },
          "workflowTransitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStateTransitionsInfoVM"
            }
          }
        },
        "additionalProperties": false
      },
      "MrObjectPropertyChangeFilter": {
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributeTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "commentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "commentTypeCategoryRaw": {
            "type": "string",
            "nullable": true
          },
          "commentTypeRaw": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          },
          "objectPropertyTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "originalCreatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "originalCreatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "originalCreatorName": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userObjectRelationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectPropertyChangeFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectPropertyChangeFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectPropertyChangeVM": {
        "required": [
          "created",
          "creatorId",
          "id",
          "isRevertable",
          "objectPropertyTypeId",
          "revertToDate",
          "versionId",
          "workflowStateId"
        ],
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IMrObjectPropertyBaseChangeVM"
            },
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IMrObjectPropertyBaseChangeVM"
            },
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isRevertable": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          },
          "objectCommentText": {
            "type": "string",
            "nullable": true
          },
          "objectPropertyTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "oldValue": {
            "type": "string",
            "nullable": true
          },
          "originalCreatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "originalCreatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "originalCreatorName": {
            "type": "string",
            "nullable": true
          },
          "revertToDate": {
            "type": "string",
            "format": "date-time"
          },
          "versionId": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectPropertyChangeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectPropertyChangeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRecommendationFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeName": {
            "type": "string",
            "nullable": true
          },
          "sourceObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updaterName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRecommendationFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectRecommendationFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRecommendationVm": {
        "required": [
          "applicationId",
          "created",
          "creatorId",
          "isFavourite",
          "objectId",
          "objectTypeId",
          "spaceId",
          "statusId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "objectType": {
            "$ref": "#/components/schemas/CObjectTypeInObjectVM"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeName": {
            "type": "string",
            "nullable": true
          },
          "pathNames": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "sourceObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32"
          },
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updaterName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRecommendationVmPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectRecommendationVm"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationAddInputVM": {
        "required": [
          "fromObjectId",
          "relationTypeId",
          "toObjectId"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "fromObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationAddReferenceInputVM": {
        "required": [
          "fromObjectId"
        ],
        "type": "object",
        "properties": {
          "additionalAttributes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationBatchAddInputVM": {
        "required": [
          "fromObjectId",
          "relationTypeId",
          "toObjectIds"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "fromObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationBatchRemoveInputVM": {
        "required": [
          "objectRelationIds"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "objectRelationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationConceptDiffFilter": {
        "type": "object",
        "properties": {
          "additionalAttributes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "diffTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectRelationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "relationTypeName": {
            "type": "string",
            "nullable": true
          },
          "toApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationConceptDiffFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectRelationConceptDiffFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationConceptDiffVM": {
        "required": [
          "fromObjectId",
          "toObjectId"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "diffTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "fromObjectName": {
            "type": "string",
            "nullable": true
          },
          "fromObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromSpaceName": {
            "type": "string",
            "nullable": true
          },
          "objectRelationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeName": {
            "type": "string",
            "nullable": true
          },
          "toApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectName": {
            "type": "string",
            "nullable": true
          },
          "toObjectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "toObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toSpaceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationConceptDiffVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectRelationConceptDiffVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationDefaultSortFilter": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromApplicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectName": {
            "type": "string",
            "nullable": true
          },
          "fromObjectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromParentObjectName": {
            "type": "string",
            "nullable": true
          },
          "fromSpaceName": {
            "type": "string",
            "nullable": true
          },
          "objectRelationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "relationTypeName": {
            "type": "string",
            "nullable": true
          },
          "sourceTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "sourceTypeIsUpgradable": {
            "type": "boolean",
            "nullable": true
          },
          "sourceTypeName": {
            "type": "string",
            "nullable": true
          },
          "toApplicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectName": {
            "type": "string",
            "nullable": true
          },
          "toObjectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toSpaceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationDefaultSortFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectRelationDefaultSortFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationDetailDefaultSortVM": {
        "required": [
          "branchId",
          "fromApplicationId",
          "fromObjectTypeId",
          "fromSpaceId",
          "objectRelationId",
          "relationTypeId",
          "sourceTypeId",
          "sourceTypeIsUpgradable",
          "toApplicationId",
          "toObjectId",
          "toObjectTypeId",
          "toSpaceId"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "fromApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "fromApplicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromApplicationName": {
            "type": "string",
            "nullable": true
          },
          "fromObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectName": {
            "type": "string",
            "nullable": true
          },
          "fromObjectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "fromObjectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "fromObjectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromObjectTypeName": {
            "type": "string",
            "nullable": true
          },
          "fromParentObjectName": {
            "type": "string",
            "nullable": true
          },
          "fromParentObjectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "fromParentObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromParentObjectTypeName": {
            "type": "string",
            "nullable": true
          },
          "fromSpaceId": {
            "type": "integer",
            "format": "int32"
          },
          "fromSpaceName": {
            "type": "string",
            "nullable": true
          },
          "objectRelationId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "relationTypeName": {
            "type": "string",
            "nullable": true
          },
          "sourceTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "sourceTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "sourceTypeIsUpgradable": {
            "type": "boolean"
          },
          "sourceTypeName": {
            "type": "string",
            "nullable": true
          },
          "toApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "toApplicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectName": {
            "type": "string",
            "nullable": true
          },
          "toObjectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "toObjectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toObjectTypeName": {
            "type": "string",
            "nullable": true
          },
          "toSpaceId": {
            "type": "integer",
            "format": "int32"
          },
          "toSpaceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationDetailDefaultSortVMPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectRelationDetailDefaultSortVM"
            },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationFilter": {
        "type": "object",
        "properties": {
          "additionalSourceAttributes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "additionalTargetAttributes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dataDictionaryColumn": {
            "type": "string",
            "nullable": true
          },
          "dataDictionaryModel": {
            "type": "string",
            "nullable": true
          },
          "dataDictionaryObject": {
            "type": "string",
            "nullable": true
          },
          "excludeRelationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "excludeToObjectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromApplicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromHierarchyPath": {
            "type": "string",
            "nullable": true
          },
          "fromObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromObjectName": {
            "type": "string",
            "nullable": true
          },
          "fromObjectStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectStatusIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromSpaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromSpaceName": {
            "type": "string",
            "nullable": true
          },
          "objectRelationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationName": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "relationTypeName": {
            "type": "string",
            "nullable": true
          },
          "sourceAttributeValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "sourceTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceTypeIsUpgradable": {
            "type": "boolean",
            "nullable": true
          },
          "sourceTypeName": {
            "type": "string",
            "nullable": true
          },
          "targetAttributeValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "toApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toApplicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toApplicationName": {
            "type": "string",
            "nullable": true
          },
          "toGrandParentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toGrandParentObjectName": {
            "type": "string",
            "nullable": true
          },
          "toGrandParentObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toHierarchyPath": {
            "type": "string",
            "nullable": true
          },
          "toObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toObjectName": {
            "type": "string",
            "nullable": true
          },
          "toObjectStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectStatusIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toParentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toParentObjectName": {
            "type": "string",
            "nullable": true
          },
          "toParentObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toSpaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toSpaceName": {
            "type": "string",
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectRelationFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationFilterVM": {
        "type": "object",
        "properties": {
          "filterValues": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectRelationFilterValueVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationFilterValueVM": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationInheritInputVM": {
        "required": [
          "inheritFrom",
          "objectId",
          "relationTypeId"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "inheritFrom": {
            "$ref": "#/components/schemas/AttributeValueReferenceTypeEnum"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationOptionalVM": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dataDictionaryColumn": {
            "type": "string",
            "nullable": true
          },
          "dataDictionaryModel": {
            "type": "string",
            "nullable": true
          },
          "dataDictionaryObject": {
            "type": "string",
            "nullable": true
          },
          "fromApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromApplicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromHierarchyPath": {
            "type": "string",
            "nullable": true
          },
          "fromObjectAttributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "fromObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectName": {
            "type": "string",
            "nullable": true
          },
          "fromObjectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "fromObjectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "fromObjectStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectStatusIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromSpaceName": {
            "type": "string",
            "nullable": true
          },
          "objectRelationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationName": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeName": {
            "type": "string",
            "nullable": true
          },
          "sourceTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceTypeIsUpgradable": {
            "type": "boolean",
            "nullable": true
          },
          "sourceTypeName": {
            "type": "string",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "toApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toApplicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toApplicationName": {
            "type": "string",
            "nullable": true
          },
          "toGrandParentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toGrandParentObjectName": {
            "type": "string",
            "nullable": true
          },
          "toGrandParentObjectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "toGrandParentObjectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "toGrandParentObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toHierarchyPath": {
            "type": "string",
            "nullable": true
          },
          "toObjectAttributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "toObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectName": {
            "type": "string",
            "nullable": true
          },
          "toObjectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "toObjectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "toObjectStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectStatusIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toParentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toParentObjectName": {
            "type": "string",
            "nullable": true
          },
          "toParentObjectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "toParentObjectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "toParentObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toSpaceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationOptionalVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectRelationOptionalVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationRemoveInputVM": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationRevertPreviewVM": {
        "required": [
          "relationTypeId"
        ],
        "type": "object",
        "properties": {
          "objectRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectRelationValueRevertPreviewVM"
            },
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeNameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationSimpleVM": {
        "required": [
          "isEditable"
        ],
        "type": "object",
        "properties": {
          "isEditable": {
            "type": "boolean"
          },
          "isReadOnly": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationVM": {
        "required": [
          "fromApplicationId",
          "fromObjectId",
          "fromObjectStatusId",
          "fromObjectTypeId",
          "fromSpaceId",
          "relationTypeId",
          "sourceTypeId",
          "sourceTypeIsUpgradable",
          "toApplicationId",
          "toObjectId",
          "toObjectStatusId",
          "toObjectTypeId",
          "toSpaceId",
          "versionId"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dataDictionaryColumn": {
            "type": "string",
            "nullable": true
          },
          "dataDictionaryModel": {
            "type": "string",
            "nullable": true
          },
          "dataDictionaryObject": {
            "type": "string",
            "nullable": true
          },
          "fromApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "fromHierarchyPath": {
            "type": "string",
            "nullable": true
          },
          "fromObjectAttributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "fromObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "fromObjectName": {
            "type": "string",
            "nullable": true
          },
          "fromObjectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "fromObjectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "fromObjectStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "fromObjectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "fromSpaceId": {
            "type": "integer",
            "format": "int32"
          },
          "fromSpaceName": {
            "type": "string",
            "nullable": true
          },
          "inheritedFrom": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectRelationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationName": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeName": {
            "type": "string",
            "nullable": true
          },
          "sourceTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "sourceTypeIsUpgradable": {
            "type": "boolean"
          },
          "sourceTypeName": {
            "type": "string",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "toApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "toApplicationName": {
            "type": "string",
            "nullable": true
          },
          "toGrandParentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toGrandParentObjectName": {
            "type": "string",
            "nullable": true
          },
          "toGrandParentObjectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "toGrandParentObjectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "toGrandParentObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toHierarchyPath": {
            "type": "string",
            "nullable": true
          },
          "toObjectAttributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "toObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectName": {
            "type": "string",
            "nullable": true
          },
          "toObjectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "toObjectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "toObjectStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "toParentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toParentObjectName": {
            "type": "string",
            "nullable": true
          },
          "toParentObjectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "toParentObjectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "toParentObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toSpaceId": {
            "type": "integer",
            "format": "int32"
          },
          "toSpaceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectRelationVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationValueRevertPreviewVM": {
        "required": [
          "fromObjectId",
          "toObjectIconId",
          "toObjectId"
        ],
        "type": "object",
        "properties": {
          "fromObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectColorHex": {
            "type": "string",
            "nullable": true
          },
          "toObjectIconId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationVersionsDiffFilter": {
        "type": "object",
        "properties": {
          "additionalAttributes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "diffTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "relationTypeName": {
            "type": "string",
            "nullable": true
          },
          "sourceVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationVersionsDiffFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectRelationVersionsDiffFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationVersionsDiffVM": {
        "required": [
          "fromObjectId",
          "toObjectId"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "diffTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "fromObjectName": {
            "type": "string",
            "nullable": true
          },
          "fromObjectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "fromObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromSpaceName": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeName": {
            "type": "string",
            "nullable": true
          },
          "toApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectName": {
            "type": "string",
            "nullable": true
          },
          "toObjectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "toObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toSpaceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectRelationVersionsDiffVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectRelationVersionsDiffVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectReorderVM": {
        "required": [
          "reorderAll",
          "reverse"
        ],
        "type": "object",
        "properties": {
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reorderAll": {
            "type": "boolean"
          },
          "reverse": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MrObjectSearchFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "excludeObjectsWithAllPossibleDefinedRelationTypes": {
            "type": "boolean",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectSearchFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectSearchFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectSearchVM": {
        "required": [
          "hasSetAllPossibleRelationTypes",
          "objectId",
          "workflowStateId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "existingRelationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "hasSetAllPossibleRelationTypes": {
            "type": "boolean"
          },
          "numbering": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "possibleRelationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStateNameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectSearchVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectSearchVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectSendToApprovalInputVM": {
        "type": "object",
        "properties": {
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectShareVM": {
        "required": [
          "toUserIds"
        ],
        "type": "object",
        "properties": {
          "note": {
            "type": "string",
            "nullable": true
          },
          "toUserIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "MrObjectStatisticElementVM": {
        "required": [
          "count"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectStatisticsFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "changedInLastDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "from": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "includeSubspaces": {
            "type": "boolean",
            "nullable": true
          },
          "objectTypeId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "spaceId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userObjectRelationTypeId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "workflowStateId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectStatisticsFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrObjectStatisticsFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectStatisticsVM": {
        "type": "object",
        "properties": {
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectStatisticElementVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectTooltipVM": {
        "required": [
          "applicationId",
          "isDeleted",
          "objectId",
          "objectTypeId",
          "spaceId",
          "statusId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "objectType": {
            "$ref": "#/components/schemas/CObjectTypeInObjectVM"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "pathNameObject": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectUserObjectRelationRevertPreviewVM": {
        "required": [
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "userObjectRelationTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "usersWithRelation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectUserObjectRelationValueRevertPreviewVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectUserObjectRelationVM": {
        "type": "object",
        "properties": {
          "inheritedFrom": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isEditable": {
            "type": "boolean",
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "nullable": true
          },
          "usersWithRelation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserSimpleObjectVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectUserObjectRelationValueRevertPreviewVM": {
        "required": [
          "isGroup",
          "userId"
        ],
        "type": "object",
        "properties": {
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "isGroup": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectVM": {
        "required": [
          "applicationId",
          "branchId",
          "canMove",
          "dislikeCount",
          "dislikedByCurrentUser",
          "hasEditableEmptyAttributes",
          "isEditable",
          "lastChangedVersion",
          "likeCount",
          "likedByCurrentUser",
          "mandatoryAttributesFilled",
          "objectId",
          "objectName",
          "objectTypeId",
          "spaceId",
          "startVersion",
          "statusId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MrAttributeInObjectVM"
            },
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "canMove": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dislikeCount": {
            "type": "integer",
            "format": "int32"
          },
          "dislikedByCurrentUser": {
            "type": "boolean"
          },
          "embeddedTexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrEmbeddedTextInObjectVM"
            },
            "nullable": true
          },
          "endVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasChildren": {
            "type": "boolean",
            "nullable": true
          },
          "hasEditableEmptyAttributes": {
            "type": "boolean"
          },
          "isEditable": {
            "type": "boolean"
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "lastChangedVersion": {
            "type": "integer",
            "format": "int32"
          },
          "likeCount": {
            "type": "integer",
            "format": "int32"
          },
          "likedByCurrentUser": {
            "type": "boolean"
          },
          "mandatoryAttributesFilled": {
            "type": "boolean"
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "numbering": {
            "type": "string",
            "nullable": true
          },
          "objectConceptCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "minLength": 1,
            "type": "string"
          },
          "objectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "objectType": {
            "$ref": "#/components/schemas/CObjectTypeInObjectVM"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentObjectName": {
            "type": "string",
            "nullable": true
          },
          "parentObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "pathNameObject": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "relations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MrObjectRelationSimpleVM"
            },
            "nullable": true
          },
          "sourceObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "startVersion": {
            "type": "integer",
            "format": "int32"
          },
          "statusId": {
            "type": "integer",
            "format": "int32"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "unresolvedDependencyCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updater": {
            "type": "string",
            "nullable": true
          },
          "updaterColorHex": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userObjectRelations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MrObjectUserObjectRelationVM"
            },
            "nullable": true
          },
          "workflowId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workflowStateTransitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStateTransitionVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrObjectVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectVersionVM": {
        "required": [
          "applicationId",
          "branchId",
          "canMove",
          "dislikeCount",
          "dislikedByCurrentUser",
          "hasEditableEmptyAttributes",
          "isEditable",
          "lastChangedVersion",
          "likeCount",
          "likedByCurrentUser",
          "mandatoryAttributesFilled",
          "objectId",
          "objectName",
          "objectTypeId",
          "spaceId",
          "startVersion",
          "statusId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MrAttributeInObjectVersionVM"
            },
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "canMove": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dislikeCount": {
            "type": "integer",
            "format": "int32"
          },
          "dislikedByCurrentUser": {
            "type": "boolean"
          },
          "embeddedTexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrEmbeddedTextInObjectVM"
            },
            "nullable": true
          },
          "endVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasChildren": {
            "type": "boolean",
            "nullable": true
          },
          "hasEditableEmptyAttributes": {
            "type": "boolean"
          },
          "isEditable": {
            "type": "boolean"
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "lastChangedVersion": {
            "type": "integer",
            "format": "int32"
          },
          "likeCount": {
            "type": "integer",
            "format": "int32"
          },
          "likedByCurrentUser": {
            "type": "boolean"
          },
          "mandatoryAttributesFilled": {
            "type": "boolean"
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "nextVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "numbering": {
            "type": "string",
            "nullable": true
          },
          "objectConceptCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "minLength": 1,
            "type": "string"
          },
          "objectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "objectType": {
            "$ref": "#/components/schemas/CObjectTypeInObjectVM"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentObjectName": {
            "type": "string",
            "nullable": true
          },
          "parentObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "pathNameObject": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "previousVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MrObjectRelationSimpleVM"
            },
            "nullable": true
          },
          "sourceObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "startVersion": {
            "type": "integer",
            "format": "int32"
          },
          "statusId": {
            "type": "integer",
            "format": "int32"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "unresolvedDependencyCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updater": {
            "type": "string",
            "nullable": true
          },
          "updaterColorHex": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userObjectRelations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MrObjectUserObjectRelationVM"
            },
            "nullable": true
          },
          "workflowId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workflowStateTransitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStateTransitionVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrObjectWorkflowStateEditVM": {
        "type": "object",
        "properties": {
          "userObjectRelationTypes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrRawValueInputObsoleteVM": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrRawValueInputVM": {
        "required": [
          "entityKey",
          "subTypeId"
        ],
        "type": "object",
        "properties": {
          "entityKey": {
            "minLength": 1,
            "type": "string"
          },
          "subTypeId": {
            "$ref": "#/components/schemas/RawValueSubTypeEnum"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrRawValueVM": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrRelationEnum": {
        "type": "object",
        "properties": {
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "relationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "spaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSpaceSimpleInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrRelationEnumFilter": {
        "required": [
          "fromObjectId"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "toObjectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrRootSpaceVM": {
        "required": [
          "iconId",
          "isPublic",
          "objectStateId",
          "spaceId",
          "updated",
          "updaterId"
        ],
        "type": "object",
        "properties": {
          "businessOwners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserAttributeVM"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "isPublic": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectStateId": {
            "type": "integer",
            "format": "int32"
          },
          "parentSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSpacePathVM"
            },
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "stewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserAttributeVM"
            },
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "updaterId": {
            "type": "integer",
            "format": "int32"
          },
          "updaterName": {
            "type": "string",
            "nullable": true
          },
          "workflowId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrRootSpaceVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrRootSpaceVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSettingByLevelVM": {
        "required": [
          "level",
          "settingId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "settingId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSettingByLevelVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSettingByLevelVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSettingEditVM": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MrSnapshotAddVM": {
        "required": [
          "applicationId",
          "name",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "snapshotDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSnapshotEditVM": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MrSnapshotFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "snapshotId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSnapshotFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrSnapshotFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSnapshotVM": {
        "required": [
          "applicationId",
          "created",
          "creatorId",
          "snapshotDate",
          "snapshotId",
          "spaceId",
          "versionId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "snapshotDate": {
            "type": "string",
            "format": "date-time"
          },
          "snapshotId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrSnapshotVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSnapshotVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceAccessCountFilter": {
        "required": [
          "rootSpaces"
        ],
        "type": "object",
        "properties": {
          "changedInLastDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "from": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rootSpaces": {
            "type": "boolean"
          },
          "spaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceAccessCountFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrSpaceAccessCountFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceAddInputVM": {
        "required": [
          "copyPermissionFromParent",
          "iconId",
          "isPublic",
          "name"
        ],
        "type": "object",
        "properties": {
          "copyPermissionFromParent": {
            "type": "boolean"
          },
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "isPublic": {
            "type": "boolean"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "parentSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceAppGroupedAccessCountFilter": {
        "required": [
          "rootSpaces"
        ],
        "type": "object",
        "properties": {
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "bucketSize": {
            "type": "string",
            "nullable": true
          },
          "changedInLastDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "from": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "numberOfBuckets": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rootSpaces": {
            "type": "boolean"
          },
          "spaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceAppGroupedAccessCountFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrSpaceAppGroupedAccessCountFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceAppPermissionInfo": {
        "required": [
          "applications",
          "applicationState",
          "appObjectTypes",
          "attributeConditions",
          "configuredAttributes",
          "configuredUserRelations",
          "hasSpaceRead",
          "hasSpaceWrite",
          "isPublicSpace",
          "isSpaceAdmin",
          "objectNotCreatable",
          "objectType",
          "spaceId",
          "spaceState",
          "userGroups",
          "userGroupSpaceRelations",
          "userRelationsConditions",
          "userSpaceAdminGroups",
          "userSpaceReadGroups",
          "userSpaceRelations",
          "userSpaceWriteGroups"
        ],
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApplicationVM"
            }
          },
          "applicationState": {
            "$ref": "#/components/schemas/CObjectStateEnum"
          },
          "appObjectTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CObjectTypeFeatureInfoVM"
            }
          },
          "attributeConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RAttributeTypeConditionVM"
            }
          },
          "configuredAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RObjectAttributeVM"
            }
          },
          "configuredUserRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RObjectTypeUserObjectRelationTypeVM"
            }
          },
          "hasSpaceRead": {
            "type": "boolean"
          },
          "hasSpaceWrite": {
            "type": "boolean"
          },
          "isPublicSpace": {
            "type": "boolean"
          },
          "isSpaceAdmin": {
            "type": "boolean"
          },
          "objectNotCreatable": {
            "type": "boolean"
          },
          "objectType": {
            "$ref": "#/components/schemas/CObjectTypeFeatureInfoVM"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceState": {
            "$ref": "#/components/schemas/CObjectStateEnum"
          },
          "userGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          },
          "userGroupSpaceRelations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PermissionInfoGroupSpaceRelation"
            }
          },
          "userRelationsConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RUserObjectRelationTypeConditionVM"
            }
          },
          "userRole": {
            "$ref": "#/components/schemas/AppRoleEnum"
          },
          "userSpaceAdminGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          },
          "userSpaceReadGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          },
          "userSpaceRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationVM"
            }
          },
          "userSpaceWriteGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          }
        },
        "additionalProperties": false
      },
      "MrSpaceApplicationGroupedStatisticsVM": {
        "type": "object",
        "properties": {
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSpaceApplicationStatisticElement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceApplicationInfo": {
        "required": [
          "applicationId",
          "conceptCount",
          "snapshotCount",
          "spaceId",
          "workflowId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "conceptCount": {
            "type": "integer",
            "format": "int32"
          },
          "ingestionProgressInfoVm": {
            "$ref": "#/components/schemas/IngestionProgressInfoVm"
          },
          "snapshotCount": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "workflowId": {
            "type": "integer",
            "format": "int32"
          },
          "workflowNameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceApplicationStatisticElement": {
        "required": [
          "applicationId",
          "count",
          "groupNumber",
          "year"
        ],
        "type": "object",
        "properties": {
          "applicationDescriptionKey": {
            "type": "string",
            "nullable": true
          },
          "applicationEnumKey": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationNameKey": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "groupNumber": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrSpaceAppliedPermissionVM": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "subSpacesPermission": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSpaceAppliedPermissionVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceAttributeFilter": {
        "type": "object",
        "properties": {
          "attributeTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "attributeValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rights": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "userObjectRelationTypeEnumValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "userObjectRelationTypeValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceAttributeFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrSpaceAttributeFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceAttributeLatestChangeVM": {
        "required": [
          "attributeTypeId",
          "spaceAttributeId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "attributeLanguageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "spaceAttributeId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceAttributeVM": {
        "required": [
          "attributeTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "isEditable": {
            "type": "boolean",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceDashboardVM": {
        "required": [
          "applicationsCount",
          "favourite",
          "hasRead",
          "hasWrite",
          "iconId",
          "id",
          "isPublic",
          "objectsCount",
          "subSpaceCount"
        ],
        "type": "object",
        "properties": {
          "applicationsCount": {
            "type": "integer",
            "format": "int32"
          },
          "entityType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "favourite": {
            "type": "boolean"
          },
          "hasRead": {
            "type": "boolean"
          },
          "hasWrite": {
            "type": "boolean"
          },
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectsCount": {
            "type": "integer",
            "format": "int32"
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "subSpaceCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrSpaceDashboardVMPagedUrlVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSpaceDashboardVM"
            },
            "readOnly": true
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "urlItem": {
            "$ref": "#/components/schemas/MrSpaceDashboardVM"
          }
        },
        "additionalProperties": false
      },
      "MrSpaceDataFilter": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceDataFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrSpaceDataFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceDataVM": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceDataVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSpaceDataVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceEditAttributeInput": {
        "type": "object",
        "properties": {
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceEditInputVM": {
        "required": [
          "iconId",
          "isPublic",
          "name"
        ],
        "type": "object",
        "properties": {
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "isPublic": {
            "type": "boolean"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceExtendedApplicationVM": {
        "required": [
          "applicationId",
          "totalObjectsCount"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "totalObjectsCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrSpaceExtendedSubspaceVM": {
        "required": [
          "iconId",
          "isPublic",
          "objectCount",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "businessOwners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserAttributeVM"
            },
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean"
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectCount": {
            "type": "integer",
            "format": "int32"
          },
          "parentSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rights": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "stewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserAttributeVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceExtendedSubspaceVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSpaceExtendedSubspaceVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceExtendedVM": {
        "required": [
          "hasRead",
          "hasWrite",
          "iconId",
          "isPublic",
          "spaceId",
          "subspaceCount",
          "totalObjectsCount"
        ],
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSpaceExtendedApplicationVM"
            },
            "nullable": true
          },
          "businessOwners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserAttributeVM"
            },
            "nullable": true
          },
          "hasRead": {
            "type": "boolean"
          },
          "hasWrite": {
            "type": "boolean"
          },
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "isPublic": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "stewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserAttributeVM"
            },
            "nullable": true
          },
          "subspaceCount": {
            "type": "integer",
            "format": "int32"
          },
          "subspaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSpaceExtendedSubspaceVM"
            },
            "nullable": true
          },
          "totalObjectsCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrSpaceExtendedVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSpaceExtendedVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceFilter": {
        "type": "object",
        "properties": {
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean",
            "nullable": true
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rights": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrSpaceFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceGroupedAccessCountFilter": {
        "required": [
          "rootSpaces"
        ],
        "type": "object",
        "properties": {
          "bucketSize": {
            "type": "string",
            "nullable": true
          },
          "changedInLastDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "from": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "numberOfBuckets": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rootSpaces": {
            "type": "boolean"
          },
          "spaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceGroupedAccessCountFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrSpaceGroupedAccessCountFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceGroupedStatisticElement": {
        "required": [
          "count",
          "groupNumber",
          "year"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "groupNumber": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrSpaceGroupedStatisticsVM": {
        "type": "object",
        "properties": {
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSpaceGroupedStatisticElement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceIconVM": {
        "required": [
          "iconId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrSpaceIconVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSpaceIconVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpacePathVM": {
        "required": [
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpacePermissionInfo": {
        "required": [
          "applications",
          "attributeConditions",
          "configuredAttributes",
          "configuredUserRelations",
          "hasSpaceRead",
          "hasSpaceWrite",
          "isPublicSpace",
          "isSpaceAdmin",
          "objectNotCreatable",
          "objectType",
          "spaceId",
          "spaceState",
          "userGroups",
          "userGroupSpaceRelations",
          "userRelationsConditions",
          "userSpaceAdminGroups",
          "userSpaceReadGroups",
          "userSpaceRelations",
          "userSpaceWriteGroups"
        ],
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApplicationVM"
            }
          },
          "attributeConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RAttributeTypeConditionVM"
            }
          },
          "configuredAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RObjectAttributeVM"
            }
          },
          "configuredUserRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RObjectTypeUserObjectRelationTypeVM"
            }
          },
          "hasSpaceRead": {
            "type": "boolean"
          },
          "hasSpaceWrite": {
            "type": "boolean"
          },
          "isPublicSpace": {
            "type": "boolean"
          },
          "isSpaceAdmin": {
            "type": "boolean"
          },
          "objectNotCreatable": {
            "type": "boolean"
          },
          "objectType": {
            "$ref": "#/components/schemas/CObjectTypeFeatureInfoVM"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceState": {
            "$ref": "#/components/schemas/CObjectStateEnum"
          },
          "userGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          },
          "userGroupSpaceRelations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PermissionInfoGroupSpaceRelation"
            }
          },
          "userRelationsConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RUserObjectRelationTypeConditionVM"
            }
          },
          "userRole": {
            "$ref": "#/components/schemas/AppRoleEnum"
          },
          "userSpaceAdminGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          },
          "userSpaceReadGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          },
          "userSpaceRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationVM"
            }
          },
          "userSpaceWriteGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserGroupInfoVM"
            }
          }
        },
        "additionalProperties": false
      },
      "MrSpaceSimpleInfo": {
        "required": [
          "iconId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceTooltipVM": {
        "required": [
          "applicationCount",
          "iconId",
          "isDeleted",
          "isFavourite",
          "isPublic",
          "spaceId",
          "subspaceCount"
        ],
        "type": "object",
        "properties": {
          "applicationCount": {
            "type": "integer",
            "format": "int32"
          },
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isFavourite": {
            "type": "boolean"
          },
          "isPublic": {
            "type": "boolean"
          },
          "objectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSpacePathVM"
            },
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "subspaceCount": {
            "type": "integer",
            "format": "int32"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceUserSpaceRelationVM": {
        "type": "object",
        "properties": {
          "isEditable": {
            "type": "boolean",
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserSpaceSimpleVm"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceVM": {
        "required": [
          "applicationCount",
          "iconId",
          "isPublic",
          "spaceId",
          "subspaceCount"
        ],
        "type": "object",
        "properties": {
          "applicationCount": {
            "type": "integer",
            "format": "int32"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MrSpaceAttributeVM"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean"
          },
          "isSpaceAdmin": {
            "type": "boolean",
            "nullable": true
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "objectStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentPath": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "parentSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSpacePathVM"
            },
            "nullable": true
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "stewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserAttributeVM"
            },
            "nullable": true
          },
          "subspaceCount": {
            "type": "integer",
            "format": "int32"
          },
          "userSpaceRelations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MrSpaceUserSpaceRelationVM"
            },
            "nullable": true
          },
          "workflowId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSpaceVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSpaceValidateNameInputVM": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "parentSpaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSubObjectFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attributeTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "attributeValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "levels": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workflowStateIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSubObjectFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrSubObjectFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSubObjectVM": {
        "required": [
          "applicationId",
          "objectId",
          "objectTypeId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectType": {
            "$ref": "#/components/schemas/CObjectTypeInObjectVM"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workflowStateNameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrSubObjectVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrSubObjectVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrUserObjectRelationTypeAddInput": {
        "type": "object",
        "properties": {
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrUserObjectRelationTypeEditInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrUserObjectRelationTypeFeaturesVM": {
        "required": [
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CUserObjectRelationTypeFeatureVM"
            },
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrUserObjectRelationTypeFeaturesVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrUserObjectRelationTypeFeaturesVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrUserObjectRelationTypeVM": {
        "required": [
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrUserObjectRelationTypeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrUserObjectRelationTypeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrUserRelationTypeFilter": {
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrUserRelationTypeFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrUserRelationTypeFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrUserWorkflowStateTransitionFilter": {
        "type": "object",
        "properties": {
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "stateToId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "transitionStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "transitionStateNameKey": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrUserWorkflowStateTransitionFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrUserWorkflowStateTransitionFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrUserWorkflowStateTransitionVm": {
        "required": [
          "objectId",
          "stateFromId",
          "stateToId",
          "transitionStateId",
          "userId",
          "workflowId"
        ],
        "type": "object",
        "properties": {
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "stateFromId": {
            "type": "integer",
            "format": "int32"
          },
          "stateToId": {
            "type": "integer",
            "format": "int32"
          },
          "transitionStateId": {
            "type": "integer",
            "format": "int32"
          },
          "transitionStateNameKey": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "workflowId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MrUserWorkflowStateTransitionVmPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrUserWorkflowStateTransitionVm"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrVersionFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "month": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrVersionFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/MrVersionFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MrVersionVM": {
        "required": [
          "created",
          "creatorId",
          "month",
          "versionId",
          "year"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "versionId": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MultiRelationColumn": {
        "required": [
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MultiRelationDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "multi-relation-table"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatabaseTemplateMultiRelationModelValues"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MultiRelationDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "multi-relation-table"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatabaseTemplateMultiRelationModelValues"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MultiRelationDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "multi-relation-table"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatabaseTemplateMultiRelationModelValues"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MultiRelationOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiRelationColumn"
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "relations": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "multi-relation-table"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "NamedComponentDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "component"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NamedComponentDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "component"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NamedComponentDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "component"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewAppTagVM": {
        "type": "object",
        "properties": {
          "modelVersions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewBranchContextVM": {
        "type": "object",
        "properties": {
          "basedOnModelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseOnBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NoContentResult": {
        "required": [
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NotificationStatusEnum": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ObjectDashboardVM": {
        "required": [
          "applicationId",
          "applicationNameKey",
          "entityType",
          "favourite",
          "id",
          "name",
          "objectTypeDescriptionKey",
          "objectTypeId",
          "objectTypeNameKey",
          "spaceId",
          "spaceName"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationNameKey": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "minLength": 1,
            "type": "string",
            "readOnly": true
          },
          "favourite": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "objectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "objectRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetObjectRelationShortInfoVM"
            },
            "nullable": true
          },
          "objectTypeDescriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeNameKey": {
            "minLength": 1,
            "type": "string"
          },
          "pathNames": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "minLength": 1,
            "type": "string"
          },
          "userRelations": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AppUserAttributeVM"
              },
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectDashboardVMFullTextSearchRequestModelPagedVMf": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectDashboardVM"
            },
            "description": "Current results."
          },
          "filter": {
            "$ref": "#/components/schemas/FullTextSearchRequestModel"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectDashboardVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectDashboardVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectDetailDatabasePatchTemplate": {
        "type": "object",
        "properties": {
          "area": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDeleteComponent"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchUpdateTemplate"
                }
              ]
            },
            "nullable": true
          },
          "settings": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PkgPatchDeleteComponent"
              },
              {
                "$ref": "#/components/schemas/WrapperDatabasePatchReferenceTemplate"
              },
              {
                "$ref": "#/components/schemas/WrapperDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/WrapperDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/WordCloudDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/WordCloudDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/TabTableDatabasePatchReferenceTemplate"
              },
              {
                "$ref": "#/components/schemas/TabTableDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/TabTableDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/TabsDatabasePatchReferenceTemplate"
              },
              {
                "$ref": "#/components/schemas/TabsDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/TabsDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/TableOfContentsDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/TableOfContentsDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/TabAttributesDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/TabAttributesDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/SplitterDatabasePatchReferenceTemplate"
              },
              {
                "$ref": "#/components/schemas/SplitterDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/SplitterDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/SimpleRelationsDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/SimpleRelationsDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/DatabaseSettingsPatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/DatabaseSettingsPatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/SectionTitleDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/SectionTitleDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/SampleDataDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/SampleDataDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationsDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationsDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationAttributesDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationAttributesDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/RawValueDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/RawValueDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/PipelineRunDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/PipelineRunDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/PanelDatabasePatchReferenceTemplate"
              },
              {
                "$ref": "#/components/schemas/PanelDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/PanelDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/MultiRelationDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/MultiRelationDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/LengthStatisticsDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/LengthStatisticsDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/LastActivityDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/LastActivityDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/NamedComponentDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/NamedComponentDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/ChildListDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/ChildListDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/ChartDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/ChartDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationCardDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationCardDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationCardsDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationCardsDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCardDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCardDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCards2DatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCards2DatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCardsDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCardsDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/ButtonLinkDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/ButtonLinkDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/BinaryValueDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/BinaryValueDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/AttributesDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/AttributesDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiTableDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiTableDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiCardDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiCardDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiCardInlineDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiCardInlineDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/SearchDatabasePatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/SearchDatabasePatchUpdateTemplate"
              },
              {
                "$ref": "#/components/schemas/HeaderlessTextareaPatchAddTemplate"
              },
              {
                "$ref": "#/components/schemas/HeaderlessTextareaPatchUpdateTemplate"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectDetailDatabaseSettingsPatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "object-detail-settings"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ObjectDetailDatabaseSettingsPatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "object-detail-settings"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ObjectDetailDatabaseSettingsTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "object-detail-settings"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ObjectDetailDatabaseTemplate": {
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string",
            "nullable": true
          },
          "area": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsTemplate"
                }
              ]
            },
            "nullable": true
          },
          "settings": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/DatabaseSettingsTemplate"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectDetailOutputSettingsTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "object-detail-settings"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ObjectDetailOutputTemplate": {
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string",
            "nullable": true
          },
          "area": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiTableOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailOutputSettingsTemplate"
                }
              ]
            },
            "nullable": true,
            "readOnly": true
          },
          "settings": {
            "$ref": "#/components/schemas/ObjectDetailOutputSettingsTemplate"
          }
        },
        "additionalProperties": false
      },
      "ObjectExistenceVM": {
        "required": [
          "exists"
        ],
        "type": "object",
        "properties": {
          "exists": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ObjectPagedVMc": {
        "required": [
          "data",
          "overallCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { },
            "description": "Current results."
          },
          "overallCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectPathVM": {
        "type": "object",
        "properties": {
          "applicationPath": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationPathVM"
            },
            "nullable": true
          },
          "objectPath": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PathName"
            },
            "nullable": true
          },
          "spacePath": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpacePathVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectRelationWithFeaturesVM": {
        "required": [
          "descriptionKey",
          "enumKey",
          "features",
          "nameKey",
          "objectState",
          "relationTypeId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CObjectRelationFeatureVM"
            }
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectState": {
            "$ref": "#/components/schemas/CObjectStateEnum"
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ObjectTypeSimpleFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectsExportSettings": {
        "required": [
          "batchSize",
          "methodThreshold"
        ],
        "type": "object",
        "properties": {
          "batchSize": {
            "type": "integer",
            "format": "int32"
          },
          "dateFormat": {
            "type": "string",
            "nullable": true
          },
          "fileServicePath": {
            "type": "string",
            "nullable": true
          },
          "htmlToImageConverter": {
            "type": "string",
            "nullable": true
          },
          "libreOfficeExecutablePath": {
            "type": "string",
            "nullable": true
          },
          "methodThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "microsoftWordScriptsPath": {
            "type": "string",
            "nullable": true
          },
          "wordToolApplication": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OptionsVm": {
        "type": "object",
        "properties": {
          "relationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "scanMasterOnly": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "OutputDiagramType": {
        "required": [
          "isDefault"
        ],
        "type": "object",
        "properties": {
          "default": {
            "$ref": "#/components/schemas/DiagramTypeDefaultTemplate"
          },
          "isDefault": {
            "type": "boolean"
          },
          "metamodelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "object-relations",
              "diagram"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageBasicVM": {
        "required": [
          "packageId",
          "packageVersionId"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "packageId": {
            "type": "integer",
            "format": "int32"
          },
          "packageKey": {
            "type": "string",
            "nullable": true
          },
          "packageVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "provider": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageContentVM": {
        "required": [
          "assets"
        ],
        "type": "object",
        "properties": {
          "assets": {
            "$ref": "#/components/schemas/PkgAssetVM"
          },
          "autoInstall": {
            "type": "boolean",
            "nullable": true
          },
          "changeLog": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dependsOn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageDependencyVM"
            },
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/PkgSettingVM"
          }
        },
        "additionalProperties": false
      },
      "PackageDependencyVM": {
        "required": [
          "packageKey"
        ],
        "type": "object",
        "properties": {
          "packageKey": {
            "minLength": 1,
            "type": "string"
          },
          "version": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageExportOptionsInputVM": {
        "required": [
          "applicationKey",
          "packageKey",
          "packageName"
        ],
        "type": "object",
        "properties": {
          "applicationKey": {
            "minLength": 1,
            "type": "string"
          },
          "excludeApplicationSpaces": {
            "type": "boolean",
            "nullable": true
          },
          "excludeComponents": {
            "type": "boolean",
            "nullable": true
          },
          "excludeIcons": {
            "type": "boolean",
            "nullable": true
          },
          "generateFromMetadataConfigOnly": {
            "type": "boolean",
            "nullable": true
          },
          "ignoredWorkflowKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ignoredWorkflowStateKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "includeAll": {
            "type": "boolean",
            "nullable": true
          },
          "includeAssetsWithReservedPrefixes": {
            "type": "boolean",
            "nullable": true
          },
          "includeCommentTypeCategories": {
            "type": "boolean",
            "nullable": true
          },
          "includeDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "includeGlobalSettings": {
            "type": "boolean",
            "nullable": true
          },
          "includeIconCategories": {
            "type": "boolean",
            "nullable": true
          },
          "includeNotificationTemplates": {
            "type": "boolean",
            "nullable": true
          },
          "includeOutOfPlace": {
            "type": "boolean",
            "nullable": true
          },
          "includePages": {
            "type": "boolean",
            "nullable": true
          },
          "includeSearchForms": {
            "type": "boolean",
            "nullable": true
          },
          "includeSearchIndexes": {
            "type": "boolean",
            "nullable": true
          },
          "includeSearchQueries": {
            "type": "boolean",
            "nullable": true
          },
          "packageKey": {
            "minLength": 1,
            "type": "string"
          },
          "packageName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PackageInputVM": {
        "required": [
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 2000,
            "type": "string",
            "nullable": true
          },
          "key": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PackageOverviewFilter": {
        "type": "object",
        "properties": {
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "installedVersion": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "packageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageOverviewFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/PackageOverviewFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackagePatchContentDependencyVM": {
        "required": [
          "packageKey"
        ],
        "type": "object",
        "properties": {
          "packageKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PackagePatchContentVM": {
        "required": [
          "assets",
          "basePackageKey",
          "runAfter",
          "type"
        ],
        "type": "object",
        "properties": {
          "assets": {
            "$ref": "#/components/schemas/PkgPatchAssetVM"
          },
          "basePackageKey": {
            "minLength": 1,
            "type": "string"
          },
          "changeLog": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dependsOn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageDependencyVM"
            },
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "runAfter": {
            "$ref": "#/components/schemas/PackagePatchContentDependencyVM"
          },
          "type": {
            "minLength": 1,
            "enum": [
              "patch"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PackageProviderBasicVM": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageProviderBasicVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageProviderBasicVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageResolvedInfoVM": {
        "type": "object",
        "properties": {
          "appliedPatchPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageResolvedVersionInfoVM"
            },
            "nullable": true
          },
          "basePackage": {
            "$ref": "#/components/schemas/PackageResolvedVersionInfoVM"
          },
          "packageContent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageResolvedVersionInfoVM": {
        "required": [
          "packageId",
          "packageVersionId"
        ],
        "type": "object",
        "properties": {
          "packageId": {
            "type": "integer",
            "format": "int32"
          },
          "packageKey": {
            "type": "string",
            "nullable": true
          },
          "packageVersion": {
            "type": "string",
            "nullable": true
          },
          "packageVersionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PackageStateEnum": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "PackageSwaggerCustomComponentsVM": {
        "type": "object",
        "properties": {
          "baseMainDatabaseTemplate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationCardsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationRepositoryCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/AttributesDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/BinaryValueDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ButtonLinkDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ChartDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ChildListDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/DatabaseSettingsTemplate"
              },
              {
                "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/LastActivityDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/LengthStatisticsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/MultiRelationDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/PanelDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/PipelineRunDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/RawValueDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationAttributesDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SampleDataDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SearchDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SimpleRelationsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCards2DatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCardsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SplitterDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TabAttributesDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TabTableDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TableOfContentsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TabsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TimeSelectorDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/WrapperDatabaseTemplate"
              }
            ],
            "nullable": true
          },
          "baseMainOutputTemplate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApiCardOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiCardInlineOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiTableOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/AttributesOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/BinaryValueOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/ButtonLinkOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationCardOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationCardsOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationRepositoryCardOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationDataDictionaryOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/HeaderlessTextareaOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/SearchOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCardOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCardsOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCards2OutputTemplate"
              },
              {
                "$ref": "#/components/schemas/ChartOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/ChildListOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelUserOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/LastActivityOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/LengthStatisticsOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/MultiRelationOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/PanelOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/PipelineRunOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/RawValueOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationAttributesOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationsOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/SampleDataOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/SectionTitleOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/SimpleRelationsOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/SplitterOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/TableOfContentsOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/TabTableOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/TabAttributesOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/TabsOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/WordCloudOutputTemplate"
              }
            ],
            "nullable": true
          },
          "baseObjectDetailDatabaseTemplate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/AttributesDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/PanelDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TabsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsTemplate"
              }
            ],
            "nullable": true
          },
          "baseObjectDetailOutputTemplate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApiTableOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/AttributesOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelUserOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/PanelOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationsOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TabsOutputTemplate"
              },
              {
                "$ref": "#/components/schemas/ObjectDetailOutputSettingsTemplate"
              }
            ],
            "nullable": true
          },
          "swaggerEntities": {
            "$ref": "#/components/schemas/ISwaggerEntity"
          }
        },
        "additionalProperties": false
      },
      "PackageTypeEnum": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "PackageVM": {
        "required": [
          "isCloneable",
          "isDeletable",
          "isDraftAddable",
          "isInstalledFromMarketplace",
          "isInstalledVersionLatest",
          "isPackageInfoEditable",
          "isPackageKeyEditable",
          "isTaskRunning",
          "packageId",
          "packageStateId",
          "packageTypeId"
        ],
        "type": "object",
        "properties": {
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "installedVersion": {
            "type": "string",
            "nullable": true
          },
          "isCloneable": {
            "type": "boolean"
          },
          "isDeletable": {
            "type": "boolean"
          },
          "isDraftAddable": {
            "type": "boolean"
          },
          "isInstalledFromMarketplace": {
            "type": "boolean"
          },
          "isInstalledVersionLatest": {
            "type": "boolean"
          },
          "isPackageInfoEditable": {
            "type": "boolean"
          },
          "isPackageKeyEditable": {
            "type": "boolean"
          },
          "isTaskRunning": {
            "type": "boolean"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "packageId": {
            "type": "integer",
            "format": "int32"
          },
          "packageStateId": {
            "$ref": "#/components/schemas/PackageStateEnum"
          },
          "packageStateNameKey": {
            "type": "string",
            "nullable": true
          },
          "packageTypeId": {
            "$ref": "#/components/schemas/PackageTypeEnum"
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskTypeId": {
            "$ref": "#/components/schemas/TaskTypeEnum"
          },
          "taskTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterColorHex": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updaterUserName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageVersionBasicVM": {
        "required": [
          "isDraft",
          "packageVersionId",
          "packageVersionStateId"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "isDraft": {
            "type": "boolean"
          },
          "packageJson": {
            "type": "string",
            "nullable": true
          },
          "packageVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "packageVersionStateId": {
            "$ref": "#/components/schemas/PackageVersionStateEnum"
          },
          "packageVersionStateNameKey": {
            "type": "string",
            "nullable": true
          },
          "validationTask": {
            "$ref": "#/components/schemas/Int32ResultVM"
          },
          "version": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageVersionEditInputVM": {
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 2000,
            "type": "string",
            "nullable": true
          },
          "packageJson": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageVersionInputVM": {
        "required": [
          "packageId"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 2000,
            "type": "string",
            "nullable": true
          },
          "packageId": {
            "type": "integer",
            "format": "int32"
          },
          "packageJson": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageVersionIssueFilter": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "packageVersionIssueTypeId": {
            "$ref": "#/components/schemas/PackageVersionIssueTypeEnum"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageVersionIssueFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/PackageVersionIssueFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageVersionIssueTypeEnum": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "PackageVersionIssueVM": {
        "required": [
          "created",
          "packageVersionIssueTypeId"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "packageVersionIssueTypeId": {
            "$ref": "#/components/schemas/PackageVersionIssueTypeEnum"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageVersionIssueVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageVersionIssueVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageVersionOverviewFilter": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "packageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "packageKey": {
            "type": "string",
            "nullable": true
          },
          "packageName": {
            "type": "string",
            "nullable": true
          },
          "packageVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageVersionOverviewFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/PackageVersionOverviewFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageVersionStateEnum": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "PackageVersionVM": {
        "required": [
          "errorsCount",
          "isDraft",
          "isEditable",
          "isInstallable",
          "isLatestVersioned",
          "isRollbackable",
          "isTaskRunning",
          "packageId",
          "packageVersionId",
          "packageVersionStateId",
          "totalIssuesCount",
          "updated",
          "updaterId",
          "warningsCount"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "errorsCount": {
            "type": "integer",
            "format": "int32"
          },
          "installed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDraft": {
            "type": "boolean"
          },
          "isEditable": {
            "type": "boolean"
          },
          "isInstallable": {
            "type": "boolean"
          },
          "isLatestVersioned": {
            "type": "boolean"
          },
          "isRollbackable": {
            "type": "boolean"
          },
          "isTaskRunning": {
            "type": "boolean"
          },
          "packageId": {
            "type": "integer",
            "format": "int32"
          },
          "packageJson": {
            "type": "string",
            "nullable": true
          },
          "packageKey": {
            "type": "string",
            "nullable": true
          },
          "packageName": {
            "type": "string",
            "nullable": true
          },
          "packageVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "packageVersionStateId": {
            "$ref": "#/components/schemas/PackageVersionStateEnum"
          },
          "packageVersionStateNameKey": {
            "type": "string",
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskTypeId": {
            "$ref": "#/components/schemas/TaskTypeEnum"
          },
          "taskTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "totalIssuesCount": {
            "type": "integer",
            "format": "int32"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "updaterColorHex": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32"
          },
          "updaterUserName": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "warningsCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PackageVersionVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageVersionVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackagesSettings": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "nullable": true
          },
          "schema": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PageDashboardVM": {
        "required": [
          "iconId",
          "id",
          "isFavourite",
          "orderNumber"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isFavourite": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "urlPattern": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PageDashboardVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageDashboardVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedNotificationVM": {
        "required": [
          "data",
          "overallNoticedCount",
          "overallUnreadCount",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppNotificationVM"
            },
            "description": "Current results."
          },
          "overallNoticedCount": {
            "type": "integer",
            "format": "int32"
          },
          "overallUnreadCount": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedVersionVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrVersionVM"
            },
            "description": "Current results."
          },
          "first": {
            "$ref": "#/components/schemas/MrVersionVM"
          },
          "last": {
            "$ref": "#/components/schemas/MrVersionVM"
          },
          "next": {
            "$ref": "#/components/schemas/MrVersionVM"
          },
          "previous": {
            "$ref": "#/components/schemas/MrVersionVM"
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PanelDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/PanelDatabaseSettings"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "panel"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TimeSelectorDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabaseTemplate"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PanelDatabasePatchReferenceTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "panel"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDeleteComponent"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchUpdateTemplate"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PanelDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/PanelDatabaseSettings"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "panel"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TimeSelectorDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabaseTemplate"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PanelDatabaseSettings": {
        "type": "object",
        "properties": {
          "visibleToRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PanelDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/PanelDatabaseSettings"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "panel"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TimeSelectorDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabaseTemplate"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PanelOutputSettings": {
        "type": "object",
        "properties": {
          "visibleToRoles": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PanelOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/PanelOutputSettings"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "panel"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2OutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudOutputTemplate"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParameterVM": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PathItemVM": {
        "required": [
          "depthIndex"
        ],
        "type": "object",
        "properties": {
          "depthIndex": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PathName": {
        "required": [
          "objectId",
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PathNameList": {
        "type": "object",
        "properties": {
          "pathNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PathName"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PdmPathVM": {
        "required": [
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "objectTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PdmToGlossarySettings": {
        "required": [
          "enabled",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PdmToMrCodelistSettings": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PermissionInfoGroupSpaceRelation": {
        "required": [
          "groupId",
          "groupName"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationVM"
            },
            "nullable": true
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "groupName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PermissionInfoMandatoryEntity": {
        "required": [
          "hasValue",
          "id"
        ],
        "type": "object",
        "properties": {
          "hasValue": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PermissionTypeEnum": {
        "enum": [
          10,
          20,
          30,
          40,
          50,
          60,
          70,
          80,
          90,
          100,
          110,
          120,
          130,
          140
        ],
        "type": "integer",
        "format": "int32"
      },
      "PermissionVM": {
        "required": [
          "permissionId",
          "permissionTypeId"
        ],
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "integer",
            "format": "int32"
          },
          "permissionTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PipelineRunAfterResponseTemplate": {
        "required": [
          "refreshLeftMenu",
          "refreshObjectContent",
          "refreshPage"
        ],
        "type": "object",
        "properties": {
          "refreshLeftMenu": {
            "type": "boolean"
          },
          "refreshObjectContent": {
            "type": "boolean"
          },
          "refreshPage": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PipelineRunDatabasePatchAddTemplate": {
        "required": [
          "action",
          "pipeline",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "activity": {
            "type": "string",
            "nullable": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "afterResponse": {
            "$ref": "#/components/schemas/PipelineRunAfterResponseTemplate"
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "pipeline": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "tooltip": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "pipeline_run"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PipelineRunDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "pipeline",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "activity": {
            "type": "string",
            "nullable": true
          },
          "afterResponse": {
            "$ref": "#/components/schemas/PipelineRunAfterResponseTemplate"
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "pipeline": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "tooltip": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "pipeline_run"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PipelineRunDatabaseTemplate": {
        "required": [
          "pipeline",
          "type"
        ],
        "type": "object",
        "properties": {
          "activity": {
            "type": "string",
            "nullable": true
          },
          "afterResponse": {
            "$ref": "#/components/schemas/PipelineRunAfterResponseTemplate"
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "pipeline": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "tooltip": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "pipeline_run"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PipelineRunOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "activity": {
            "type": "string",
            "nullable": true
          },
          "afterResponse": {
            "$ref": "#/components/schemas/PipelineRunAfterResponseTemplate"
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "pipeline": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "tooltip": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "pipeline_run"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PkgApplicationHierarchyDefinitionVM": {
        "required": [
          "hierarchyDefinitionKey"
        ],
        "type": "object",
        "properties": {
          "childrenCountType": {
            "type": "string",
            "nullable": true
          },
          "hierarchyDefinitionKey": {
            "minLength": 1,
            "type": "string"
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgApplicationTemplateVM": {
        "type": "object",
        "properties": {
          "main": {
            "$ref": "#/components/schemas/ApplicationDatabaseTemplate"
          }
        },
        "additionalProperties": false
      },
      "PkgApplicationVM": {
        "required": [
          "colorKey",
          "defaultObjectTypeKey",
          "key",
          "name",
          "shortcut"
        ],
        "type": "object",
        "properties": {
          "colorKey": {
            "minLength": 1,
            "type": "string"
          },
          "dataIntegrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDiApplicationDataIntegrationVM"
            },
            "nullable": true
          },
          "defaultObjectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "exportTemplateKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgExportTemplateVM"
            },
            "nullable": true
          },
          "hierarchyDefinitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgApplicationHierarchyDefinitionVM"
            },
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationApplicationVM"
            },
            "nullable": true
          },
          "objectTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "search": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchVM"
            },
            "nullable": true
          },
          "settings": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_application_data_lineage",
                        "is_application_data_dictionary",
                        "is_application_code_tables",
                        "is_application_dawiso_objects",
                        "is_application_pdm_app",
                        "media_gray_background",
                        "no_background_color_app_badge",
                        "hide_comment_section",
                        "read_only_hierarchy",
                        "object_not_creatable",
                        "snapshot_enabled",
                        "word_export_enabled",
                        "excel_export_enabled",
                        "pdf_export_enabled",
                        "excel_import_enabled",
                        "versioning_on_sort_order_enabled",
                        "change_analysis_enabled",
                        "disable_change_of_numbering",
                        "disable_sort_objects",
                        "has_token_keywords",
                        "has_token_texts",
                        "check_exact_match",
                        "exact_match_spaces",
                        "disable_duplicate_validation_for_spaceapp",
                        "force_confirmation_after_object_move",
                        "copy_paste_as_plaintext_like",
                        "object_workflow_space_admin_as_regular_user",
                        "move_object_based_on_role"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "order_number"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "integer",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "color",
                        "object_ladder_numbering_pattern",
                        "changed_text_color",
                        "deleted_text_color"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "excel_import_settings"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "$ref": "#/components/schemas/ImportSettingsBase"
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "excel_export_settings"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "$ref": "#/components/schemas/ExportSettingsBase"
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "external_loads"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "$ref": "#/components/schemas/ExternalLoadsSettingsBase"
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "token_keyword_spaces",
                        "token_keyword_apps"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "shortcut": {
            "minLength": 1,
            "type": "string"
          },
          "spaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSpaceApplicationVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "templates": {
            "$ref": "#/components/schemas/PkgApplicationTemplateVM"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgAssetVM": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgApplicationVM"
            },
            "nullable": true
          },
          "attributeTypeObjectConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgAttributeTypeObjectConditionVM"
            },
            "nullable": true
          },
          "attributeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgAttributeTypeVM"
            },
            "nullable": true
          },
          "colors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgColorVM"
            },
            "nullable": true
          },
          "commentTypeCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgCCommentTypeCategoryVM"
            },
            "nullable": true
          },
          "commentTypeCategoryApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgRCommentTypeCategoryApplicationVM"
            },
            "nullable": true
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgComponentVM"
            },
            "nullable": true
          },
          "dataIntegrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDiDataIntegrationInApplicationVM"
            },
            "nullable": true
          },
          "dataSourceDefinitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDiDataSourceTypeVM"
            },
            "nullable": true
          },
          "domainTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDomainTypeVM"
            },
            "nullable": true
          },
          "externalDataSources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgExternalDataSourceVM"
            },
            "nullable": true
          },
          "graphMetamodels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgGraphMetamodelVM"
            },
            "nullable": true
          },
          "hierarchyDefinitionApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgHierarchyDefinitionInApplicationVM"
            },
            "nullable": true
          },
          "hierarchyDefinitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgHierarchyDefinitionVM"
            },
            "nullable": true
          },
          "iconCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgIconCategoryVM"
            },
            "nullable": true
          },
          "icons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgIconVM"
            },
            "nullable": true
          },
          "notificationTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationTemplateVM"
            },
            "nullable": true
          },
          "objectTypeApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeInApplicationVM"
            },
            "nullable": true
          },
          "objectTypeRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectRelationTypeVM"
            },
            "nullable": true
          },
          "objectTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeVM"
            },
            "nullable": true
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgPageVM"
            },
            "nullable": true
          },
          "pipelineActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDfaActivityFullVM"
            },
            "nullable": true
          },
          "pipelines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDfaPipelineVM"
            },
            "nullable": true
          },
          "queryMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgQueryMappingVM"
            },
            "nullable": true
          },
          "querySets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgQuerySetVM"
            },
            "nullable": true
          },
          "relationTypeCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgRelationTypeCategoryVM"
            },
            "nullable": true
          },
          "relationTypeObjectConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgRelationTypeConditionVM"
            },
            "nullable": true
          },
          "relationTypeObjectFeatures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgRelationTypeObjectFeatureVM"
            },
            "nullable": true
          },
          "relationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgRelationTypeVM"
            },
            "nullable": true
          },
          "searchForms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchFormVM"
            },
            "nullable": true
          },
          "searchIndexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchIndexVM"
            },
            "nullable": true
          },
          "searchIndexSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchIndexSettingsVM"
            },
            "nullable": true
          },
          "searchQueries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchQueryVM"
            },
            "nullable": true
          },
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgMrSettingsVM"
            },
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgTranslationVM"
            },
            "nullable": true
          },
          "userRelationTypeObjectConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgUserRelationTypeObjectConditionVM"
            },
            "nullable": true
          },
          "userRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgUserRelationTypeVM"
            },
            "nullable": true
          },
          "workflows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgWorkflowVM"
            },
            "nullable": true
          },
          "workflowStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgWorkflowStateVM"
            },
            "nullable": true
          },
          "workflowTransitionTriggers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgWorkflowTransitionTriggerFullVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgAttributeTypeObjectConditionVM": {
        "required": [
          "objectTypeKey",
          "unlockedAttributeTypeKey",
          "userRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "unlockedAttributeTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "userRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "workflowStateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgAttributeTypeVM": {
        "required": [
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_translatable",
                        "is_mandatory",
                        "is_html",
                        "is_space_inheritable",
                        "is_token_keyword",
                        "is_token_text",
                        "is_not_presented_in_changes",
                        "is_number",
                        "is_checkbox",
                        "is_date",
                        "has_multiple_values",
                        "has_no_results_label",
                        "is_multiline",
                        "is_static_select",
                        "is_sql_raw",
                        "is_not_presented_in_changes_but_send_to_fe",
                        "is_search_type_term",
                        "is_search_type_text",
                        "is_search_type_number_10",
                        "is_search_type_number_100",
                        "is_search_type_number_1_000",
                        "is_search_type_number_10_000",
                        "is_search_type_number_100_000",
                        "is_search_type_number_1_000_000",
                        "is_search_type_bool",
                        "is_search_type_date",
                        "sort_by_number",
                        "is_url_link",
                        "clear_new_line",
                        "is_datetime",
                        "is_time",
                        "is_sql_mariadb",
                        "is_sql_mysql",
                        "is_sql_postgresql",
                        "is_sql_db2",
                        "is_sql_plsql",
                        "is_sql_n1ql",
                        "is_sql_redshift",
                        "is_sql_spark",
                        "is_sql_tsql",
                        "force_comment",
                        "is_parent_inheritable",
                        "is_dependency_change",
                        "is_script_javascript",
                        "is_script_csharp",
                        "is_script_scala",
                        "is_script_typescript",
                        "is_script_html",
                        "is_script_css",
                        "is_script_xml",
                        "is_script_kotlin",
                        "is_script_php",
                        "is_script_python",
                        "is_attribute_type_domain_analysis",
                        "is_search_default_result_text",
                        "is_yes_no",
                        "is_yes_no_icon",
                        "is_attribute_type_fullness",
                        "is_jira_field",
                        "is_attribute_type_diagram_description",
                        "is_primary_key_attribute",
                        "is_data_type_attribute",
                        "is_nullability_attribute",
                        "is_core_diagram_attribute_primary_key",
                        "is_core_diagram_attribute_foreign_key",
                        "is_core_diagram_attribute_data_type",
                        "is_core_diagram_attribute_nullability",
                        "is_core_diagram_attribute_stereotype",
                        "can_be_shown_in_diagram",
                        "include_in_ai_summary",
                        "disable_excel_template_export",
                        "is_core_diagram_attribute_knowledge_weight",
                        "is_primary_definition",
                        "is_attribute_type_space_short_description",
                        "is_attribute_type_codelist_table",
                        "is_attribute_type_stereotype",
                        "is_attribute_type_is_public",
                        "is_attribute_type_concept_note",
                        "is_attribute_type_order_number",
                        "is_attribute_type_data_type",
                        "is_attribute_type_filter_field_name",
                        "is_attribute_type_key_column",
                        "is_attribute_type_description_column_en",
                        "is_attribute_type_description_column_cs",
                        "is_attribute_type_description_column_fr",
                        "is_attribute_type_value_column",
                        "is_attribute_type_diagram_data",
                        "is_attribute_type_process_codelist",
                        "is_attribute_type_name",
                        "is_ai_generated_summary",
                        "is_ai_generated_summary_toggle_value",
                        "is_attribute_type_diagram_recalculation_flag",
                        "is_attribute_type_recommended",
                        "is_domain_definition",
                        "is_core_diagram_data_type_icon",
                        "is_attribute_type_concept_approval_decision_note",
                        "is_attribute_type_concept_name",
                        "is_domain_alternative_names"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationAttributeTypeVM"
            },
            "nullable": true
          },
          "placeholder": {
            "type": "string",
            "nullable": true
          },
          "search": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgCCommentTypeAddVM": {
        "required": [
          "action",
          "colorKey",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "colorKey": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isRemovable": {
            "type": "boolean",
            "nullable": true
          },
          "isVisible": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "workflowKey": {
            "type": "string",
            "nullable": true
          },
          "workflowStateKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgCCommentTypeCategoryVM": {
        "required": [
          "defaultCommentTypeKey",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "commentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgCCommentTypeVM"
            },
            "nullable": true
          },
          "defaultCommentTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "nullable": true
          },
          "isVisible": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgCCommentTypeDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgCCommentTypeReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgCCommentTypeUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "colorKey": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isRemovable": {
            "type": "boolean",
            "nullable": true
          },
          "isVisible": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "workflowKey": {
            "type": "string",
            "nullable": true
          },
          "workflowStateKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgCCommentTypeVM": {
        "required": [
          "colorKey",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "colorKey": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isRemovable": {
            "type": "boolean",
            "nullable": true
          },
          "isVisible": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "workflowKey": {
            "type": "string",
            "nullable": true
          },
          "workflowStateKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgColorVM": {
        "required": [
          "colorHex",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "colorHex": {
            "maxLength": 7,
            "minLength": 1,
            "type": "string"
          },
          "colorHoverHex": {
            "maxLength": 7,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgComponentVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "template": {
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationCardsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationRepositoryCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/AttributesDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/BinaryValueDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ButtonLinkDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ChartDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ChildListDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/DatabaseSettingsTemplate"
              },
              {
                "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/LastActivityDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/LengthStatisticsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/MultiRelationDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/PanelDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/PipelineRunDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/RawValueDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationAttributesDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SampleDataDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SearchDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SimpleRelationsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCards2DatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCardsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SplitterDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TabAttributesDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TabTableDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TableOfContentsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TabsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TimeSelectorDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/WrapperDatabaseTemplate"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgContentRootVM": {
        "required": [
          "package"
        ],
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string",
            "nullable": true
          },
          "package": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PackageContentVM"
              },
              {
                "$ref": "#/components/schemas/PackagePatchContentVM"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "PkgDfaActivityFullVM": {
        "required": [
          "executionOrderNumber",
          "key",
          "name",
          "pipelineKey",
          "statement",
          "type"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "executionOrderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isReturningData": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "parameters": {
            "type": "string",
            "nullable": true
          },
          "pipelineKey": {
            "minLength": 1,
            "type": "string"
          },
          "runInTransaction": {
            "type": "boolean",
            "nullable": true
          },
          "statement": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "minLength": 1,
            "enum": [
              "sql_query",
              "sql_procedure",
              "sql_script"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgDfaActivityVM": {
        "required": [
          "key",
          "name",
          "statement",
          "type"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "executionOrderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isReturningData": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "parameters": {
            "type": "string",
            "nullable": true
          },
          "runInTransaction": {
            "type": "boolean",
            "nullable": true
          },
          "statement": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "minLength": 1,
            "enum": [
              "sql_query",
              "sql_procedure",
              "sql_script"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgDfaPipelineVM": {
        "required": [
          "key",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDfaActivityVM"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "enum": [
              "dawiso_internal",
              "customer_specific"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgDiApplicationDataIntegrationVM": {
        "required": [
          "dataSourceDefinitionKey",
          "mappings",
          "versionKey"
        ],
        "type": "object",
        "properties": {
          "dataSourceDefinitionKey": {
            "minLength": 1,
            "type": "string"
          },
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingVM"
            }
          },
          "versionKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgDiDataIntegrationInApplicationVM": {
        "required": [
          "applicationKey",
          "dataSourceDefinitionKey",
          "mappings",
          "versionKey"
        ],
        "type": "object",
        "properties": {
          "applicationKey": {
            "minLength": 1,
            "type": "string"
          },
          "dataSourceDefinitionKey": {
            "minLength": 1,
            "type": "string"
          },
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingVM"
            }
          },
          "versionKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgDiDataSourceTypeVM": {
        "required": [
          "key",
          "name",
          "provider"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "provider": {
            "minLength": 1,
            "type": "string"
          },
          "queries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDiMessageTypeVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDiDataSourceVersionVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgDiDataSourceVersionBaseOptionsVM": {
        "required": [
          "batchSize",
          "convertBooleanToNumeric"
        ],
        "type": "object",
        "properties": {
          "batchSize": {
            "type": "integer",
            "format": "int32"
          },
          "convertBooleanToNumeric": {
            "type": "boolean"
          },
          "ingestionFormat": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgDiDataSourceVersionVM": {
        "required": [
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/PkgDiDataSourceVersionBaseOptionsVM"
          },
          "queryDefinitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDiQueryDefinitionVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "template": {
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgDiMessageTypeVM": {
        "required": [
          "baseType",
          "key",
          "type"
        ],
        "type": "object",
        "properties": {
          "abbreviation": {
            "type": "string",
            "nullable": true
          },
          "baseType": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "enum": [
              "object",
              "relation",
              "generic"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgDiQueryDefinitionVM": {
        "required": [
          "fields",
          "format",
          "options",
          "order",
          "queryKey"
        ],
        "type": "object",
        "properties": {
          "definition": {
            "type": "string",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldVm"
            }
          },
          "format": {
            "minLength": 1,
            "type": "string"
          },
          "isCompressed": {
            "type": "boolean",
            "nullable": true
          },
          "isExecutable": {
            "type": "boolean",
            "nullable": true
          },
          "isOrdered": {
            "type": "boolean",
            "nullable": true
          },
          "options": {
            "$ref": "#/components/schemas/OptionsVm"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "queryKey": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgDomainTypeVM": {
        "required": [
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "searchTemplate": {
            "$ref": "#/components/schemas/PkgSearchTemplateVM"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgEntityTranslationVM": {
        "required": [
          "languageKey"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "languageKey": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shortcut": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgExportTemplateVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgExternalDataSourceVM": {
        "required": [
          "name",
          "type",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "hierarchyDefinitionKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "queryMappingKey": {
            "type": "string",
            "nullable": true
          },
          "querySetKey": {
            "type": "string",
            "nullable": true
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "type": "string"
          },
          "uuid": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PkgFacetedSearchDefinitionVM": {
        "type": "object",
        "properties": {
          "defaultFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchTemplateFacetedVM"
            },
            "nullable": true
          },
          "formId": {
            "type": "string",
            "nullable": true
          },
          "resultTextLinesAfter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resultTextLinesBefore": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FacetedSearchSortVM"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgGraphDefaultLabels": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "minLength": 1,
            "enum": [
              "attributeTypeKey",
              "relationTypeKey",
              "userObjectRelationTypeKey"
            ],
            "type": "string"
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgGraphDisplayLevelVM": {
        "required": [
          "displayTypeKey",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "displayTypeKey": {
            "minLength": 1,
            "enum": [
              "folder",
              "object",
              "column",
              "er_object",
              "er_column",
              "knowledge_object"
            ],
            "type": "string"
          },
          "isSingleHideable": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgGraphObjectTypeVM"
            },
            "nullable": true
          },
          "parentKey": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgGraphMetamodelVM": {
        "required": [
          "key",
          "name",
          "viewTypeKey"
        ],
        "type": "object",
        "properties": {
          "defaultLabels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgGraphDefaultLabels"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "displayLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgGraphDisplayLevelVM"
            },
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "relationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgGraphRelationTypesVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "viewTypeKey": {
            "minLength": 1,
            "enum": [
              "data_lineage",
              "entity_relation",
              "relation"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgGraphObjectTypeVM": {
        "type": "object",
        "properties": {
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgGraphRelationTypesVM": {
        "required": [
          "key",
          "lineDisplayTypeKey"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "lineDisplayTypeKey": {
            "minLength": 1,
            "enum": [
              "data_lineage",
              "foreign_key",
              "knowledge_relation",
              "knowledge_parent",
              "indirect_flow"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgHierarchyDefinitionInApplicationVM": {
        "required": [
          "applicationKey",
          "hierarchyDefinitionKey"
        ],
        "type": "object",
        "properties": {
          "applicationKey": {
            "minLength": 1,
            "type": "string"
          },
          "childrenCountType": {
            "type": "string",
            "nullable": true
          },
          "hierarchyDefinitionKey": {
            "minLength": 1,
            "type": "string"
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgHierarchyDefinitionLevelVM": {
        "required": [
          "key",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "hasFixedParent": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "parentLevelKey": {
            "type": "string",
            "nullable": true
          },
          "template": {
            "$ref": "#/components/schemas/MainDatabaseTemplate"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "type": {
            "maxLength": 3,
            "minLength": 1,
            "enum": [
              "OBJ",
              "FLD"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgHierarchyDefinitionVM": {
        "required": [
          "key",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "disableParentUpdate": {
            "type": "boolean",
            "nullable": true
          },
          "hasSameLevelParent": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "levels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgHierarchyDefinitionLevelVM"
            },
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgIconCategoryVM": {
        "required": [
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "defaultIconKey": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgIconVM": {
        "required": [
          "categoryKey",
          "content",
          "contentType",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "categoryKey": {
            "minLength": 1,
            "type": "string"
          },
          "content": {
            "minLength": 1,
            "type": "string"
          },
          "contentType": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgMrSettingsVM": {
        "required": [
          "setting"
        ],
        "type": "object",
        "properties": {
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "setting": {
            "oneOf": [
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "hide_comment_section",
                      "read_only_hierarchy",
                      "object_not_creatable",
                      "snapshot_enabled",
                      "word_export_enabled",
                      "excel_export_enabled",
                      "pdf_export_enabled",
                      "excel_import_enabled",
                      "versioning_on_sort_order_enabled",
                      "change_analysis_enabled",
                      "object_workflow_space_admin_as_regular_user",
                      "is_application_data_lineage",
                      "media_gray_background",
                      "no_background_color_app_badge",
                      "disable_change_of_numbering",
                      "disable_sort_objects",
                      "has_token_keywords",
                      "has_token_texts",
                      "check_exact_match",
                      "exact_match_spaces",
                      "disable_duplicate_validation_for_spaceapp",
                      "move_object_based_on_role",
                      "force_confirmation_after_object_move",
                      "copy_paste_as_plaintext_like",
                      "is_application_data_dictionary",
                      "is_application_code_tables",
                      "is_application_dawiso_objects",
                      "is_application_pdm_app"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "order_number"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "integer",
                    "nullable": true
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "color",
                      "object_ladder_numbering_pattern",
                      "changed_text_color",
                      "deleted_text_color"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "excel_import_settings"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "$ref": "#/components/schemas/ImportSettingsBase"
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "excel_export_settings"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "$ref": "#/components/schemas/ExportSettingsBase"
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "external_loads"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "$ref": "#/components/schemas/ExternalLoadsSettingsBase"
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "token_keyword_spaces",
                      "token_keyword_apps"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "nullable": true
                  }
                }
              }
            ]
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgNotificationApplicationVM": {
        "required": [
          "notificationTemplateKey",
          "recipientUserRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "attributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "notificationTemplateKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "recipientUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "relationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          },
          "userRelationTypeKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgNotificationAttributeTypeVM": {
        "required": [
          "notificationTemplateKey",
          "recipientUserRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "notificationTemplateKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "recipientUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgNotificationObjectTypeVM": {
        "required": [
          "notificationTemplateKey",
          "recipientUserRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "attributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "notificationTemplateKey": {
            "minLength": 1,
            "type": "string"
          },
          "recipientUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "relationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          },
          "userRelationTypeKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgNotificationRelationTypeVM": {
        "required": [
          "notificationTemplateKey",
          "recipientUserRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "notificationTemplateKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "recipientUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgNotificationTemplateVM": {
        "required": [
          "key",
          "notificationChannelKey",
          "notificationTypeKey",
          "titleTemplate"
        ],
        "type": "object",
        "anyOf": [
          {
            "required": [
              "descriptionHtmlTemplate"
            ],
            "properties": {
              "notificationChannelKey": {
                "enum": [
                  "email",
                  "grouped_email"
                ],
                "type": "string"
              },
              "descriptionHtmlTemplate": {
                "type": "string"
              }
            }
          },
          {
            "properties": {
              "notificationChannelKey": {
                "enum": [
                  "web_socket"
                ],
                "type": "string"
              }
            }
          }
        ],
        "properties": {
          "descriptionHtmlTemplate": {
            "type": "string",
            "nullable": true
          },
          "descriptionTemplate": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "moduleKey": {
            "enum": [
              "dictionary",
              "glossary",
              "hidden",
              "branching",
              "simple_flow"
            ],
            "type": "string",
            "nullable": true
          },
          "notificationChannelKey": {
            "minLength": 1,
            "enum": [
              "web_socket",
              "email",
              "grouped_email"
            ],
            "type": "string"
          },
          "notificationTypeKey": {
            "minLength": 1,
            "enum": [
              "user_assigned_to_object_attribute",
              "child_object_created",
              "object_modified",
              "concept_shared",
              "concept_remove_sharing",
              "concept_applied",
              "concept_applied_by_creator",
              "your_concept_was_applied",
              "user_added_to_group",
              "user_removed_from_group",
              "task_finished",
              "user_assigned_to_space_attribute",
              "space_modified",
              "task_updated",
              "space_request_access",
              "object_share",
              "user_object_tag",
              "user_comment_tag",
              "user_space_tag",
              "user_application_tag",
              "merge_request_resolved",
              "merge_request_approved",
              "merge_request_disapproved",
              "merge_request_started_propagating",
              "model_owner_has_changed",
              "model_version_changes_approved",
              "model_version_changes_disapproved",
              "model_version_changes_started_propagating",
              "user_object_relation_assigned",
              "user_object_relation_unassigned",
              "object_workflow_state_has_changed",
              "registration",
              "registration_failed_dawiso",
              "registration_failed_user",
              "forgotten_password",
              "pwd_metadata_load_finished",
              "user_object_relation_assigned_in_app",
              "user_object_relation_unassigned_in_app",
              "user_object_relation_assigned_in_space",
              "user_object_relation_unassigned_in_space",
              "objects_export_started",
              "objects_export_finished",
              "objects_export_failed",
              "refresh_frontend",
              "grouped_notification",
              "import_object_added",
              "import_object_modified",
              "import_object_deleted",
              "import_started",
              "import_finished",
              "refresh_numbering_started",
              "refresh_numbering_finished",
              "refresh_numbering_failed",
              "object_all_users_workflow_has_changed",
              "comment_added",
              "user_import_finished",
              "user_import_failed",
              "report_import_progress",
              "db_proc_started",
              "db_proc_object_added",
              "db_proc_object_updated",
              "db_proc_object_deleted",
              "db_proc_finished",
              "bulk_edit_started",
              "bulk_edit_finished",
              "bulk_delete_started",
              "bulk_delete_finished",
              "package_delete_progress",
              "package_version_install_progress",
              "package_version_validation_progress",
              "package_version_rollback_progress",
              "attribute_edit",
              "object_relation_add",
              "object_relation_delete",
              "notification_threshold_overflow",
              "ingestion_report_progress",
              "attribute_value_changed",
              "marketplace_package_version_install_progress",
              "marketplace_package_delete_progress",
              "bulk_edit_info",
              "master_hash_update",
              "bulk_domains_info",
              "send_concept_to_approval",
              "send_anonymous_concept_to_approval",
              "concept_approved",
              "anonymous_concept_approved",
              "concept_declined",
              "anonymous_concept_declined"
            ],
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "titleTemplate": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgNotificationUserRelationTypeVM": {
        "required": [
          "notificationTemplateKey",
          "recipientUserRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "notificationTemplateKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "recipientUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgNotificationVM": {
        "required": [
          "notificationTemplateKey",
          "recipientUserRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "attributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "notificationTemplateKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "recipientUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "relationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          },
          "userRelationTypeKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgObjectRelationTypeVM": {
        "required": [
          "fromObjectTypeKey",
          "relationTypeKey",
          "toObjectTypeKey"
        ],
        "type": "object",
        "properties": {
          "fromObjectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "relationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "toObjectTypeKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgObjectTemplateVM": {
        "type": "object",
        "properties": {
          "main": {
            "$ref": "#/components/schemas/MainDatabaseTemplate"
          },
          "objectDetail": {
            "$ref": "#/components/schemas/ObjectDetailDatabaseTemplate"
          },
          "search": {
            "$ref": "#/components/schemas/PkgSearchTemplateVM"
          }
        },
        "additionalProperties": false
      },
      "PkgObjectTypeAttributeTypeVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeConditionVM"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_translatable",
                        "is_mandatory",
                        "is_html",
                        "is_space_inheritable",
                        "is_token_keyword",
                        "is_token_text",
                        "is_not_presented_in_changes",
                        "is_number",
                        "is_checkbox",
                        "is_date",
                        "has_multiple_values",
                        "has_no_results_label",
                        "is_multiline",
                        "is_static_select",
                        "is_sql_raw",
                        "is_not_presented_in_changes_but_send_to_fe",
                        "is_search_type_term",
                        "is_search_type_text",
                        "is_search_type_number_10",
                        "is_search_type_number_100",
                        "is_search_type_number_1_000",
                        "is_search_type_number_10_000",
                        "is_search_type_number_100_000",
                        "is_search_type_number_1_000_000",
                        "is_search_type_bool",
                        "is_search_type_date",
                        "sort_by_number",
                        "is_url_link",
                        "clear_new_line",
                        "is_datetime",
                        "is_time",
                        "is_sql_mariadb",
                        "is_sql_mysql",
                        "is_sql_postgresql",
                        "is_sql_db2",
                        "is_sql_plsql",
                        "is_sql_n1ql",
                        "is_sql_redshift",
                        "is_sql_spark",
                        "is_sql_tsql",
                        "force_comment",
                        "is_parent_inheritable",
                        "is_dependency_change",
                        "is_script_javascript",
                        "is_script_csharp",
                        "is_script_scala",
                        "is_script_typescript",
                        "is_script_html",
                        "is_script_css",
                        "is_script_xml",
                        "is_script_kotlin",
                        "is_script_php",
                        "is_script_python",
                        "is_attribute_type_domain_analysis",
                        "is_search_default_result_text",
                        "is_yes_no",
                        "is_yes_no_icon",
                        "is_attribute_type_fullness",
                        "is_jira_field",
                        "is_attribute_type_diagram_description",
                        "is_primary_key_attribute",
                        "is_data_type_attribute",
                        "is_nullability_attribute",
                        "is_core_diagram_attribute_primary_key",
                        "is_core_diagram_attribute_foreign_key",
                        "is_core_diagram_attribute_data_type",
                        "is_core_diagram_attribute_nullability",
                        "is_core_diagram_attribute_stereotype",
                        "can_be_shown_in_diagram",
                        "include_in_ai_summary",
                        "disable_excel_template_export",
                        "is_core_diagram_attribute_knowledge_weight",
                        "is_primary_definition",
                        "is_attribute_type_space_short_description",
                        "is_attribute_type_codelist_table",
                        "is_attribute_type_stereotype",
                        "is_attribute_type_is_public",
                        "is_attribute_type_concept_note",
                        "is_attribute_type_order_number",
                        "is_attribute_type_data_type",
                        "is_attribute_type_filter_field_name",
                        "is_attribute_type_key_column",
                        "is_attribute_type_description_column_en",
                        "is_attribute_type_description_column_cs",
                        "is_attribute_type_description_column_fr",
                        "is_attribute_type_value_column",
                        "is_attribute_type_diagram_data",
                        "is_attribute_type_process_codelist",
                        "is_attribute_type_name",
                        "is_ai_generated_summary",
                        "is_ai_generated_summary_toggle_value",
                        "is_attribute_type_diagram_recalculation_flag",
                        "is_attribute_type_recommended",
                        "is_domain_definition",
                        "is_core_diagram_data_type_icon",
                        "is_attribute_type_concept_approval_decision_note",
                        "is_attribute_type_concept_name",
                        "is_domain_alternative_names"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "hasUserAutofill": {
            "type": "boolean",
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgObjectTypeConditionVM": {
        "required": [
          "userRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "userRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "workflowStateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgObjectTypeGraphObjectTypeVM": {
        "required": [
          "displayLevelKey",
          "metamodelKey"
        ],
        "type": "object",
        "properties": {
          "displayLevelKey": {
            "minLength": 1,
            "type": "string"
          },
          "metamodelKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgObjectTypeInApplicationVM": {
        "required": [
          "applicationKey",
          "objectTypeKey"
        ],
        "type": "object",
        "properties": {
          "applicationKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgObjectTypeUserRelationTypeAddVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeConditionVM"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_searchable_attribute",
                        "is_mandatory",
                        "is_space_inheritable",
                        "is_parent_object_inheritable",
                        "force_comment",
                        "is_dependency_change",
                        "can_change_impact_analysis",
                        "is_user_object_relation_type_admin",
                        "is_user_object_relation_type_steward",
                        "is_user_object_relation_type_business_owner",
                        "is_user_object_relation_type_private_space_owner",
                        "is_not_versioned",
                        "is_not_presented_in_changes",
                        "is_default_user_space_relation",
                        "is_single_value",
                        "disable_excel_template_export",
                        "is_allowed_to_move_in_move_object_based_on_role",
                        "can_be_shown_in_diagram",
                        "is_user_object_relation_type_favourite",
                        "is_user_object_relation_type_watch",
                        "is_user_object_relation_type_shared_with_me",
                        "is_user_object_relation_type_liked",
                        "is_user_object_relation_type_disliked"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "nullable": true
          },
          "isSingleValue": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgObjectTypeUserRelationTypeDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgObjectTypeUserRelationTypeReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeConditionAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeConditionDeleteVM"
                }
              ]
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_searchable_attribute",
                        "is_mandatory",
                        "is_space_inheritable",
                        "is_parent_object_inheritable",
                        "force_comment",
                        "is_dependency_change",
                        "can_change_impact_analysis",
                        "is_user_object_relation_type_admin",
                        "is_user_object_relation_type_steward",
                        "is_user_object_relation_type_business_owner",
                        "is_user_object_relation_type_private_space_owner",
                        "is_not_versioned",
                        "is_not_presented_in_changes",
                        "is_default_user_space_relation",
                        "is_single_value",
                        "disable_excel_template_export",
                        "is_allowed_to_move_in_move_object_based_on_role",
                        "can_be_shown_in_diagram",
                        "is_user_object_relation_type_favourite",
                        "is_user_object_relation_type_watch",
                        "is_user_object_relation_type_shared_with_me",
                        "is_user_object_relation_type_liked",
                        "is_user_object_relation_type_disliked"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_searchable_attribute",
                        "is_mandatory",
                        "is_space_inheritable",
                        "is_parent_object_inheritable",
                        "force_comment",
                        "is_dependency_change",
                        "can_change_impact_analysis",
                        "is_user_object_relation_type_admin",
                        "is_user_object_relation_type_steward",
                        "is_user_object_relation_type_business_owner",
                        "is_user_object_relation_type_private_space_owner",
                        "is_not_versioned",
                        "is_not_presented_in_changes",
                        "is_default_user_space_relation",
                        "is_single_value",
                        "disable_excel_template_export",
                        "is_allowed_to_move_in_move_object_based_on_role",
                        "can_be_shown_in_diagram",
                        "is_user_object_relation_type_favourite",
                        "is_user_object_relation_type_watch",
                        "is_user_object_relation_type_shared_with_me",
                        "is_user_object_relation_type_liked",
                        "is_user_object_relation_type_disliked",
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "delete"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgObjectTypeUserRelationTypeUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeConditionVM"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_searchable_attribute",
                        "is_mandatory",
                        "is_space_inheritable",
                        "is_parent_object_inheritable",
                        "force_comment",
                        "is_dependency_change",
                        "can_change_impact_analysis",
                        "is_user_object_relation_type_admin",
                        "is_user_object_relation_type_steward",
                        "is_user_object_relation_type_business_owner",
                        "is_user_object_relation_type_private_space_owner",
                        "is_not_versioned",
                        "is_not_presented_in_changes",
                        "is_default_user_space_relation",
                        "is_single_value",
                        "disable_excel_template_export",
                        "is_allowed_to_move_in_move_object_based_on_role",
                        "can_be_shown_in_diagram",
                        "is_user_object_relation_type_favourite",
                        "is_user_object_relation_type_watch",
                        "is_user_object_relation_type_shared_with_me",
                        "is_user_object_relation_type_liked",
                        "is_user_object_relation_type_disliked"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "nullable": true
          },
          "isSingleValue": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgObjectTypeUserRelationTypeVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeConditionVM"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_searchable_attribute",
                        "is_mandatory",
                        "is_space_inheritable",
                        "is_parent_object_inheritable",
                        "force_comment",
                        "is_dependency_change",
                        "can_change_impact_analysis",
                        "is_user_object_relation_type_admin",
                        "is_user_object_relation_type_steward",
                        "is_user_object_relation_type_business_owner",
                        "is_user_object_relation_type_private_space_owner",
                        "is_not_versioned",
                        "is_not_presented_in_changes",
                        "is_default_user_space_relation",
                        "is_single_value",
                        "disable_excel_template_export",
                        "is_allowed_to_move_in_move_object_based_on_role",
                        "can_be_shown_in_diagram",
                        "is_user_object_relation_type_favourite",
                        "is_user_object_relation_type_watch",
                        "is_user_object_relation_type_shared_with_me",
                        "is_user_object_relation_type_liked",
                        "is_user_object_relation_type_disliked"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "nullable": true
          },
          "isSingleValue": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgObjectTypeVM": {
        "required": [
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "attributeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeAttributeTypeVM"
            },
            "nullable": true
          },
          "categoryKey": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "domainTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_data_dictionary_type",
                        "create_from_child_panel_only",
                        "create_without_concept",
                        "is_dependency_change",
                        "not_creatable_in_root",
                        "is_token_exact_value_match",
                        "is_condition_based_editable",
                        "disable_child_creation_based_on_workflow_state",
                        "anonymous_concept_check_workflow_on_publish",
                        "is_data_model_object",
                        "is_data_model_column",
                        "is_object_type_diagram",
                        "is_object_type_error",
                        "is_object_type_script",
                        "is_object_type_space",
                        "is_object_type_code_list_table",
                        "is_object_type_code_list_column",
                        "is_object_type_pdm_app_model",
                        "is_object_type_file",
                        "is_object_type_model",
                        "is_object_type_table",
                        "is_object_type_view",
                        "is_object_type_column",
                        "is_object_type_domain",
                        "is_object_type_domain_area"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "facet_sort_order"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "integer",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "graphDisplayLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeGraphObjectTypeVM"
            },
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "initialWorkflowStateKey": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "moduleKey": {
            "enum": [
              "dictionary",
              "glossary",
              "hidden",
              "branching",
              "simple_flow"
            ],
            "type": "string",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationObjectTypeVM"
            },
            "nullable": true
          },
          "search": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "templates": {
            "$ref": "#/components/schemas/PkgObjectTemplateVM"
          },
          "tooltipAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "userRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeUserRelationTypeVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPageVM": {
        "required": [
          "key",
          "name",
          "template"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_space_dashboard",
                        "is_application_dashboard"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "locationKey": {
            "enum": [
              "dashboard",
              "homepage-tabs",
              "top-menu"
            ],
            "type": "string",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentKey": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "template": {
            "$ref": "#/components/schemas/MainDatabaseTemplate"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchApplicationAddVM": {
        "required": [
          "action",
          "colorKey",
          "defaultObjectTypeKey",
          "key",
          "name",
          "shortcut"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "colorKey": {
            "minLength": 1,
            "type": "string"
          },
          "dataIntegrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDiApplicationDataIntegrationVM"
            },
            "nullable": true
          },
          "defaultObjectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "exportTemplateKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgExportTemplateVM"
            },
            "nullable": true
          },
          "hierarchyDefinitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgApplicationHierarchyDefinitionVM"
            },
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationApplicationVM"
            },
            "nullable": true
          },
          "objectTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "search": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchVM"
            },
            "nullable": true
          },
          "settings": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_application_data_lineage",
                        "is_application_data_dictionary",
                        "is_application_code_tables",
                        "is_application_dawiso_objects",
                        "is_application_pdm_app",
                        "media_gray_background",
                        "no_background_color_app_badge",
                        "hide_comment_section",
                        "read_only_hierarchy",
                        "object_not_creatable",
                        "snapshot_enabled",
                        "word_export_enabled",
                        "excel_export_enabled",
                        "pdf_export_enabled",
                        "excel_import_enabled",
                        "versioning_on_sort_order_enabled",
                        "change_analysis_enabled",
                        "disable_change_of_numbering",
                        "disable_sort_objects",
                        "has_token_keywords",
                        "has_token_texts",
                        "check_exact_match",
                        "exact_match_spaces",
                        "disable_duplicate_validation_for_spaceapp",
                        "force_confirmation_after_object_move",
                        "copy_paste_as_plaintext_like",
                        "object_workflow_space_admin_as_regular_user",
                        "move_object_based_on_role"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "order_number"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "integer",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "color",
                        "object_ladder_numbering_pattern",
                        "changed_text_color",
                        "deleted_text_color"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "excel_import_settings"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "$ref": "#/components/schemas/ImportSettingsBase"
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "excel_export_settings"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "$ref": "#/components/schemas/ExportSettingsBase"
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "external_loads"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "$ref": "#/components/schemas/ExternalLoadsSettingsBase"
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "token_keyword_spaces",
                        "token_keyword_apps"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "shortcut": {
            "minLength": 1,
            "type": "string"
          },
          "spaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSpaceApplicationVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "templates": {
            "$ref": "#/components/schemas/PkgApplicationTemplateVM"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchApplicationDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchApplicationHierarchyDefinitionAddVM": {
        "required": [
          "action",
          "hierarchyDefinitionKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "childrenCountType": {
            "type": "string",
            "nullable": true
          },
          "hierarchyDefinitionKey": {
            "minLength": 1,
            "type": "string"
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchApplicationHierarchyDefinitionDeleteVM": {
        "required": [
          "action",
          "hierarchyDefinitionKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "hierarchyDefinitionKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchApplicationHierarchyDefinitionUpdateVM": {
        "required": [
          "action",
          "hierarchyDefinitionKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "childrenCountType": {
            "type": "string",
            "nullable": true
          },
          "hierarchyDefinitionKey": {
            "minLength": 1,
            "type": "string"
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchApplicationObjectTypeAddVM": {
        "required": [
          "action",
          "value"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchApplicationObjectTypeDeleteVM": {
        "required": [
          "action",
          "value"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchApplicationReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "dataIntegrations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDiApplicationDataIntegrationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDiApplicationDataIntegrationDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDiApplicationDataIntegrationUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "hierarchyDefinitions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchApplicationHierarchyDefinitionAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchApplicationHierarchyDefinitionDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchApplicationHierarchyDefinitionUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeKeys": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchApplicationObjectTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchApplicationObjectTypeDeleteVM"
                }
              ]
            },
            "nullable": true
          },
          "settings": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_application_data_lineage",
                        "is_application_data_dictionary",
                        "is_application_code_tables",
                        "is_application_dawiso_objects",
                        "is_application_pdm_app",
                        "media_gray_background",
                        "no_background_color_app_badge",
                        "hide_comment_section",
                        "read_only_hierarchy",
                        "object_not_creatable",
                        "snapshot_enabled",
                        "word_export_enabled",
                        "excel_export_enabled",
                        "pdf_export_enabled",
                        "excel_import_enabled",
                        "versioning_on_sort_order_enabled",
                        "change_analysis_enabled",
                        "disable_change_of_numbering",
                        "disable_sort_objects",
                        "has_token_keywords",
                        "has_token_texts",
                        "check_exact_match",
                        "exact_match_spaces",
                        "disable_duplicate_validation_for_spaceapp",
                        "force_confirmation_after_object_move",
                        "copy_paste_as_plaintext_like",
                        "object_workflow_space_admin_as_regular_user",
                        "move_object_based_on_role"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "order_number"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "integer",
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "color",
                        "object_ladder_numbering_pattern",
                        "changed_text_color",
                        "deleted_text_color"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "string",
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "excel_import_settings"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "$ref": "#/components/schemas/ImportSettingsBase"
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "excel_export_settings"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "$ref": "#/components/schemas/ExportSettingsBase"
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "external_loads"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "$ref": "#/components/schemas/ExternalLoadsSettingsBase"
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "token_keyword_spaces",
                        "token_keyword_apps"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_application_data_lineage",
                        "is_application_data_dictionary",
                        "is_application_code_tables",
                        "is_application_dawiso_objects",
                        "is_application_pdm_app",
                        "media_gray_background",
                        "no_background_color_app_badge",
                        "hide_comment_section",
                        "read_only_hierarchy",
                        "object_not_creatable",
                        "snapshot_enabled",
                        "word_export_enabled",
                        "excel_export_enabled",
                        "pdf_export_enabled",
                        "excel_import_enabled",
                        "versioning_on_sort_order_enabled",
                        "change_analysis_enabled",
                        "disable_change_of_numbering",
                        "disable_sort_objects",
                        "has_token_keywords",
                        "has_token_texts",
                        "check_exact_match",
                        "exact_match_spaces",
                        "disable_duplicate_validation_for_spaceapp",
                        "force_confirmation_after_object_move",
                        "copy_paste_as_plaintext_like",
                        "object_workflow_space_admin_as_regular_user",
                        "move_object_based_on_role",
                        "order_number",
                        "color",
                        "object_ladder_numbering_pattern",
                        "changed_text_color",
                        "deleted_text_color",
                        "excel_import_settings",
                        "excel_export_settings",
                        "external_loads",
                        "token_keyword_spaces",
                        "token_keyword_apps"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "delete"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "templates": {
            "$ref": "#/components/schemas/PkgPatchApplicationTemplateVM"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchApplicationTemplateVM": {
        "type": "object",
        "properties": {
          "main": {
            "$ref": "#/components/schemas/ApplicationDatabasePatchTemplate"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchApplicationUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "colorKey": {
            "type": "string",
            "nullable": true
          },
          "dataIntegrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDiApplicationDataIntegrationVM"
            },
            "nullable": true
          },
          "defaultObjectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "exportTemplateKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgExportTemplateVM"
            },
            "nullable": true
          },
          "hierarchyDefinitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgApplicationHierarchyDefinitionVM"
            },
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationApplicationVM"
            },
            "nullable": true
          },
          "objectTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "search": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchVM"
            },
            "nullable": true
          },
          "settings": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_application_data_lineage",
                        "is_application_data_dictionary",
                        "is_application_code_tables",
                        "is_application_dawiso_objects",
                        "is_application_pdm_app",
                        "media_gray_background",
                        "no_background_color_app_badge",
                        "hide_comment_section",
                        "read_only_hierarchy",
                        "object_not_creatable",
                        "snapshot_enabled",
                        "word_export_enabled",
                        "excel_export_enabled",
                        "pdf_export_enabled",
                        "excel_import_enabled",
                        "versioning_on_sort_order_enabled",
                        "change_analysis_enabled",
                        "disable_change_of_numbering",
                        "disable_sort_objects",
                        "has_token_keywords",
                        "has_token_texts",
                        "check_exact_match",
                        "exact_match_spaces",
                        "disable_duplicate_validation_for_spaceapp",
                        "force_confirmation_after_object_move",
                        "copy_paste_as_plaintext_like",
                        "object_workflow_space_admin_as_regular_user",
                        "move_object_based_on_role"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "order_number"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "integer",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "color",
                        "object_ladder_numbering_pattern",
                        "changed_text_color",
                        "deleted_text_color"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "excel_import_settings"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "$ref": "#/components/schemas/ImportSettingsBase"
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "excel_export_settings"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "$ref": "#/components/schemas/ExportSettingsBase"
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "external_loads"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "$ref": "#/components/schemas/ExternalLoadsSettingsBase"
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "token_keyword_spaces",
                        "token_keyword_apps"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "shortcut": {
            "type": "string",
            "nullable": true
          },
          "spaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSpaceApplicationVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "templates": {
            "$ref": "#/components/schemas/PkgApplicationTemplateVM"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchAssetVM": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchApplicationReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchApplicationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchApplicationDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchApplicationUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "attributeTypeObjectConditions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchAttributeTypeObjectConditionAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchAttributeTypeObjectConditionDeleteVM"
                }
              ]
            },
            "nullable": true
          },
          "attributeTypes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchAttributeTypeReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchAttributeTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchAttributeTypeDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchAttributeTypeUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "colors": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchColorReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchColorAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchColorDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchColorUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "commentTypeCategories": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchCCommentTypeCategoryReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchCCommentTypeCategoryAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchCCommentTypeCategoryDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchCCommentTypeCategoryUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "commentTypeCategoryApplications": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchRCommentTypeCategoryApplicationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchRCommentTypeCategoryApplicationDeleteVM"
                }
              ]
            },
            "nullable": true
          },
          "components": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchComponentAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchComponentDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchComponentUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "dataIntegrations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDiDataIntegrationInApplicationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDiDataIntegrationInApplicationDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDiDataIntegrationInApplicationUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "dataSourceDefinitions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDiDataSourceTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDiDataSourceTypeDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDiDataSourceTypeUpdateVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDiDataSourceTypeReferenceVM"
                }
              ]
            },
            "nullable": true
          },
          "domainTypes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDomainTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDomainTypeDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDomainTypeUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "externalDataSources": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchExternalDataSourceReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchExternalDataSourceAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchExternalDataSourceDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchExternalDataSourceUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "graphMetamodels": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchGraphMetamodelReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchGraphMetamodelAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchGraphMetamodelDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchGraphMetamodelUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "hierarchyDefinitionApplications": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchHierarchyDefinitionInApplicationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchHierarchyDefinitionInApplicationDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchHierarchyDefinitionInApplicationUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "hierarchyDefinitions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchHierarchyDefinitionReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchHierarchyDefinitionAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchHierarchyDefinitionDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchHierarchyDefinitionUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "iconCategories": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchIconCategoryReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchIconCategoryAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchIconCategoryDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchIconCategoryUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "icons": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchIconReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchIconAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchIconDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchIconUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "notificationTemplates": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchNotificationTemplateAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchNotificationTemplateDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchNotificationTemplateUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "objectTypeApplications": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeInApplicationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeInApplicationDeleteVM"
                }
              ]
            },
            "nullable": true
          },
          "objectTypeRelations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchObjectRelationTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchObjectRelationTypeDeleteVM"
                }
              ]
            },
            "nullable": true
          },
          "objectTypes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "pages": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchPageReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchPageAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchPageDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchPageUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "pipelineActivities": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDfaActivityFullAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDfaActivityFullDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDfaActivityFullUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "pipelines": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDfaPipelineReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDfaPipelineAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDfaPipelineDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDfaPipelineUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "queryMappings": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchQueryMappingReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchQueryMappingAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchQueryMappingDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchQueryMappingUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "querySets": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchQuerySetReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchQuerySetAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchQuerySetDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchQuerySetUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "relationTypeCategories": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchRelationTypeCategoryAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchRelationTypeCategoryDeleteVM"
                }
              ]
            },
            "nullable": true
          },
          "relationTypeObjectConditions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchRelationTypeConditionAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchRelationTypeConditionDeleteVM"
                }
              ]
            },
            "nullable": true
          },
          "relationTypeObjectFeatures": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchRelationTypeObjectFeatureAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchRelationTypeObjectFeatureUpdateVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchRelationTypeObjectFeatureDeleteVM"
                }
              ]
            },
            "nullable": true
          },
          "relationTypes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchRelationTypeReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchRelationTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchRelationTypeDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchRelationTypeUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "searchForms": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchSearchFormReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchFormAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchFormDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchFormUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "searchIndexes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchSearchIndexAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchIndexDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchIndexUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "searchIndexSettings": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchSearchIndexSettingsAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchIndexSettingsDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchIndexSettingsUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "searchQueries": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchSearchQueryAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchQueryDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchQueryUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "settings": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchMrSettingsAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchMrSettingsDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchMrSettingsUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchTranslationReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchTranslationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchTranslationDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchTranslationUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "userRelationTypeObjectConditions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchUserRelationTypeObjectConditionAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchUserRelationTypeObjectConditionDeleteVM"
                }
              ]
            },
            "nullable": true
          },
          "userRelationTypes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchUserRelationTypeReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchUserRelationTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchUserRelationTypeDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchUserRelationTypeUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "workflows": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "workflowStates": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowStateReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowStateAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowStateDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowStateUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "workflowTransitionTriggers": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowTransitionTriggerFullAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowTransitionTriggerFullDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowTransitionTriggerFullUpdateVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchAttributeTypeAddVM": {
        "required": [
          "action",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_translatable",
                        "is_mandatory",
                        "is_html",
                        "is_space_inheritable",
                        "is_token_keyword",
                        "is_token_text",
                        "is_not_presented_in_changes",
                        "is_number",
                        "is_checkbox",
                        "is_date",
                        "has_multiple_values",
                        "has_no_results_label",
                        "is_multiline",
                        "is_static_select",
                        "is_sql_raw",
                        "is_not_presented_in_changes_but_send_to_fe",
                        "is_search_type_term",
                        "is_search_type_text",
                        "is_search_type_number_10",
                        "is_search_type_number_100",
                        "is_search_type_number_1_000",
                        "is_search_type_number_10_000",
                        "is_search_type_number_100_000",
                        "is_search_type_number_1_000_000",
                        "is_search_type_bool",
                        "is_search_type_date",
                        "sort_by_number",
                        "is_url_link",
                        "clear_new_line",
                        "is_datetime",
                        "is_time",
                        "is_sql_mariadb",
                        "is_sql_mysql",
                        "is_sql_postgresql",
                        "is_sql_db2",
                        "is_sql_plsql",
                        "is_sql_n1ql",
                        "is_sql_redshift",
                        "is_sql_spark",
                        "is_sql_tsql",
                        "force_comment",
                        "is_parent_inheritable",
                        "is_dependency_change",
                        "is_script_javascript",
                        "is_script_csharp",
                        "is_script_scala",
                        "is_script_typescript",
                        "is_script_html",
                        "is_script_css",
                        "is_script_xml",
                        "is_script_kotlin",
                        "is_script_php",
                        "is_script_python",
                        "is_attribute_type_domain_analysis",
                        "is_search_default_result_text",
                        "is_yes_no",
                        "is_yes_no_icon",
                        "is_attribute_type_fullness",
                        "is_jira_field",
                        "is_attribute_type_diagram_description",
                        "is_primary_key_attribute",
                        "is_data_type_attribute",
                        "is_nullability_attribute",
                        "is_core_diagram_attribute_primary_key",
                        "is_core_diagram_attribute_foreign_key",
                        "is_core_diagram_attribute_data_type",
                        "is_core_diagram_attribute_nullability",
                        "is_core_diagram_attribute_stereotype",
                        "can_be_shown_in_diagram",
                        "include_in_ai_summary",
                        "disable_excel_template_export",
                        "is_core_diagram_attribute_knowledge_weight",
                        "is_primary_definition",
                        "is_attribute_type_space_short_description",
                        "is_attribute_type_codelist_table",
                        "is_attribute_type_stereotype",
                        "is_attribute_type_is_public",
                        "is_attribute_type_concept_note",
                        "is_attribute_type_order_number",
                        "is_attribute_type_data_type",
                        "is_attribute_type_filter_field_name",
                        "is_attribute_type_key_column",
                        "is_attribute_type_description_column_en",
                        "is_attribute_type_description_column_cs",
                        "is_attribute_type_description_column_fr",
                        "is_attribute_type_value_column",
                        "is_attribute_type_diagram_data",
                        "is_attribute_type_process_codelist",
                        "is_attribute_type_name",
                        "is_ai_generated_summary",
                        "is_ai_generated_summary_toggle_value",
                        "is_attribute_type_diagram_recalculation_flag",
                        "is_attribute_type_recommended",
                        "is_domain_definition",
                        "is_core_diagram_data_type_icon",
                        "is_attribute_type_concept_approval_decision_note",
                        "is_attribute_type_concept_name",
                        "is_domain_alternative_names"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationAttributeTypeVM"
            },
            "nullable": true
          },
          "placeholder": {
            "type": "string",
            "nullable": true
          },
          "search": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchAttributeTypeDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchAttributeTypeObjectConditionAddVM": {
        "required": [
          "action",
          "objectTypeKey",
          "unlockedAttributeTypeKey",
          "userRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "unlockedAttributeTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "userRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "workflowStateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchAttributeTypeObjectConditionDeleteVM": {
        "required": [
          "action",
          "objectTypeKey",
          "unlockedAttributeTypeKey",
          "userRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "unlockedAttributeTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "userRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "workflowStateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchAttributeTypeReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_translatable",
                        "is_mandatory",
                        "is_html",
                        "is_space_inheritable",
                        "is_token_keyword",
                        "is_token_text",
                        "is_not_presented_in_changes",
                        "is_number",
                        "is_checkbox",
                        "is_date",
                        "has_multiple_values",
                        "has_no_results_label",
                        "is_multiline",
                        "is_static_select",
                        "is_sql_raw",
                        "is_not_presented_in_changes_but_send_to_fe",
                        "is_search_type_term",
                        "is_search_type_text",
                        "is_search_type_number_10",
                        "is_search_type_number_100",
                        "is_search_type_number_1_000",
                        "is_search_type_number_10_000",
                        "is_search_type_number_100_000",
                        "is_search_type_number_1_000_000",
                        "is_search_type_bool",
                        "is_search_type_date",
                        "sort_by_number",
                        "is_url_link",
                        "clear_new_line",
                        "is_datetime",
                        "is_time",
                        "is_sql_mariadb",
                        "is_sql_mysql",
                        "is_sql_postgresql",
                        "is_sql_db2",
                        "is_sql_plsql",
                        "is_sql_n1ql",
                        "is_sql_redshift",
                        "is_sql_spark",
                        "is_sql_tsql",
                        "force_comment",
                        "is_parent_inheritable",
                        "is_dependency_change",
                        "is_script_javascript",
                        "is_script_csharp",
                        "is_script_scala",
                        "is_script_typescript",
                        "is_script_html",
                        "is_script_css",
                        "is_script_xml",
                        "is_script_kotlin",
                        "is_script_php",
                        "is_script_python",
                        "is_attribute_type_domain_analysis",
                        "is_search_default_result_text",
                        "is_yes_no",
                        "is_yes_no_icon",
                        "is_attribute_type_fullness",
                        "is_jira_field",
                        "is_attribute_type_diagram_description",
                        "is_primary_key_attribute",
                        "is_data_type_attribute",
                        "is_nullability_attribute",
                        "is_core_diagram_attribute_primary_key",
                        "is_core_diagram_attribute_foreign_key",
                        "is_core_diagram_attribute_data_type",
                        "is_core_diagram_attribute_nullability",
                        "is_core_diagram_attribute_stereotype",
                        "can_be_shown_in_diagram",
                        "include_in_ai_summary",
                        "disable_excel_template_export",
                        "is_core_diagram_attribute_knowledge_weight",
                        "is_primary_definition",
                        "is_attribute_type_space_short_description",
                        "is_attribute_type_codelist_table",
                        "is_attribute_type_stereotype",
                        "is_attribute_type_is_public",
                        "is_attribute_type_concept_note",
                        "is_attribute_type_order_number",
                        "is_attribute_type_data_type",
                        "is_attribute_type_filter_field_name",
                        "is_attribute_type_key_column",
                        "is_attribute_type_description_column_en",
                        "is_attribute_type_description_column_cs",
                        "is_attribute_type_description_column_fr",
                        "is_attribute_type_value_column",
                        "is_attribute_type_diagram_data",
                        "is_attribute_type_process_codelist",
                        "is_attribute_type_name",
                        "is_ai_generated_summary",
                        "is_ai_generated_summary_toggle_value",
                        "is_attribute_type_diagram_recalculation_flag",
                        "is_attribute_type_recommended",
                        "is_domain_definition",
                        "is_core_diagram_data_type_icon",
                        "is_attribute_type_concept_approval_decision_note",
                        "is_attribute_type_concept_name",
                        "is_domain_alternative_names"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_translatable",
                        "is_mandatory",
                        "is_html",
                        "is_space_inheritable",
                        "is_token_keyword",
                        "is_token_text",
                        "is_not_presented_in_changes",
                        "is_number",
                        "is_checkbox",
                        "is_date",
                        "has_multiple_values",
                        "has_no_results_label",
                        "is_multiline",
                        "is_static_select",
                        "is_sql_raw",
                        "is_not_presented_in_changes_but_send_to_fe",
                        "is_search_type_term",
                        "is_search_type_text",
                        "is_search_type_number_10",
                        "is_search_type_number_100",
                        "is_search_type_number_1_000",
                        "is_search_type_number_10_000",
                        "is_search_type_number_100_000",
                        "is_search_type_number_1_000_000",
                        "is_search_type_bool",
                        "is_search_type_date",
                        "sort_by_number",
                        "is_url_link",
                        "clear_new_line",
                        "is_datetime",
                        "is_time",
                        "is_sql_mariadb",
                        "is_sql_mysql",
                        "is_sql_postgresql",
                        "is_sql_db2",
                        "is_sql_plsql",
                        "is_sql_n1ql",
                        "is_sql_redshift",
                        "is_sql_spark",
                        "is_sql_tsql",
                        "force_comment",
                        "is_parent_inheritable",
                        "is_dependency_change",
                        "is_script_javascript",
                        "is_script_csharp",
                        "is_script_scala",
                        "is_script_typescript",
                        "is_script_html",
                        "is_script_css",
                        "is_script_xml",
                        "is_script_kotlin",
                        "is_script_php",
                        "is_script_python",
                        "is_attribute_type_domain_analysis",
                        "is_search_default_result_text",
                        "is_yes_no",
                        "is_yes_no_icon",
                        "is_attribute_type_fullness",
                        "is_jira_field",
                        "is_attribute_type_diagram_description",
                        "is_primary_key_attribute",
                        "is_data_type_attribute",
                        "is_nullability_attribute",
                        "is_core_diagram_attribute_primary_key",
                        "is_core_diagram_attribute_foreign_key",
                        "is_core_diagram_attribute_data_type",
                        "is_core_diagram_attribute_nullability",
                        "is_core_diagram_attribute_stereotype",
                        "can_be_shown_in_diagram",
                        "include_in_ai_summary",
                        "disable_excel_template_export",
                        "is_core_diagram_attribute_knowledge_weight",
                        "is_primary_definition",
                        "is_attribute_type_space_short_description",
                        "is_attribute_type_codelist_table",
                        "is_attribute_type_stereotype",
                        "is_attribute_type_is_public",
                        "is_attribute_type_concept_note",
                        "is_attribute_type_order_number",
                        "is_attribute_type_data_type",
                        "is_attribute_type_filter_field_name",
                        "is_attribute_type_key_column",
                        "is_attribute_type_description_column_en",
                        "is_attribute_type_description_column_cs",
                        "is_attribute_type_description_column_fr",
                        "is_attribute_type_value_column",
                        "is_attribute_type_diagram_data",
                        "is_attribute_type_process_codelist",
                        "is_attribute_type_name",
                        "is_ai_generated_summary",
                        "is_ai_generated_summary_toggle_value",
                        "is_attribute_type_diagram_recalculation_flag",
                        "is_attribute_type_recommended",
                        "is_domain_definition",
                        "is_core_diagram_data_type_icon",
                        "is_attribute_type_concept_approval_decision_note",
                        "is_attribute_type_concept_name",
                        "is_domain_alternative_names",
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "delete"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchAttributeTypeUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_translatable",
                        "is_mandatory",
                        "is_html",
                        "is_space_inheritable",
                        "is_token_keyword",
                        "is_token_text",
                        "is_not_presented_in_changes",
                        "is_number",
                        "is_checkbox",
                        "is_date",
                        "has_multiple_values",
                        "has_no_results_label",
                        "is_multiline",
                        "is_static_select",
                        "is_sql_raw",
                        "is_not_presented_in_changes_but_send_to_fe",
                        "is_search_type_term",
                        "is_search_type_text",
                        "is_search_type_number_10",
                        "is_search_type_number_100",
                        "is_search_type_number_1_000",
                        "is_search_type_number_10_000",
                        "is_search_type_number_100_000",
                        "is_search_type_number_1_000_000",
                        "is_search_type_bool",
                        "is_search_type_date",
                        "sort_by_number",
                        "is_url_link",
                        "clear_new_line",
                        "is_datetime",
                        "is_time",
                        "is_sql_mariadb",
                        "is_sql_mysql",
                        "is_sql_postgresql",
                        "is_sql_db2",
                        "is_sql_plsql",
                        "is_sql_n1ql",
                        "is_sql_redshift",
                        "is_sql_spark",
                        "is_sql_tsql",
                        "force_comment",
                        "is_parent_inheritable",
                        "is_dependency_change",
                        "is_script_javascript",
                        "is_script_csharp",
                        "is_script_scala",
                        "is_script_typescript",
                        "is_script_html",
                        "is_script_css",
                        "is_script_xml",
                        "is_script_kotlin",
                        "is_script_php",
                        "is_script_python",
                        "is_attribute_type_domain_analysis",
                        "is_search_default_result_text",
                        "is_yes_no",
                        "is_yes_no_icon",
                        "is_attribute_type_fullness",
                        "is_jira_field",
                        "is_attribute_type_diagram_description",
                        "is_primary_key_attribute",
                        "is_data_type_attribute",
                        "is_nullability_attribute",
                        "is_core_diagram_attribute_primary_key",
                        "is_core_diagram_attribute_foreign_key",
                        "is_core_diagram_attribute_data_type",
                        "is_core_diagram_attribute_nullability",
                        "is_core_diagram_attribute_stereotype",
                        "can_be_shown_in_diagram",
                        "include_in_ai_summary",
                        "disable_excel_template_export",
                        "is_core_diagram_attribute_knowledge_weight",
                        "is_primary_definition",
                        "is_attribute_type_space_short_description",
                        "is_attribute_type_codelist_table",
                        "is_attribute_type_stereotype",
                        "is_attribute_type_is_public",
                        "is_attribute_type_concept_note",
                        "is_attribute_type_order_number",
                        "is_attribute_type_data_type",
                        "is_attribute_type_filter_field_name",
                        "is_attribute_type_key_column",
                        "is_attribute_type_description_column_en",
                        "is_attribute_type_description_column_cs",
                        "is_attribute_type_description_column_fr",
                        "is_attribute_type_value_column",
                        "is_attribute_type_diagram_data",
                        "is_attribute_type_process_codelist",
                        "is_attribute_type_name",
                        "is_ai_generated_summary",
                        "is_ai_generated_summary_toggle_value",
                        "is_attribute_type_diagram_recalculation_flag",
                        "is_attribute_type_recommended",
                        "is_domain_definition",
                        "is_core_diagram_data_type_icon",
                        "is_attribute_type_concept_approval_decision_note",
                        "is_attribute_type_concept_name",
                        "is_domain_alternative_names"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationAttributeTypeVM"
            },
            "nullable": true
          },
          "placeholder": {
            "type": "string",
            "nullable": true
          },
          "search": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchCCommentTypeCategoryAddVM": {
        "required": [
          "action",
          "defaultCommentTypeKey",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "commentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgCCommentTypeVM"
            },
            "nullable": true
          },
          "defaultCommentTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "nullable": true
          },
          "isVisible": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchCCommentTypeCategoryDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchCCommentTypeCategoryReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "commentTypes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgCCommentTypeReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgCCommentTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgCCommentTypeDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgCCommentTypeUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationUpdateVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchCCommentTypeCategoryUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "commentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgCCommentTypeVM"
            },
            "nullable": true
          },
          "defaultCommentTypeKey": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "nullable": true
          },
          "isVisible": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchColorAddVM": {
        "required": [
          "action",
          "colorHex",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "colorHex": {
            "maxLength": 7,
            "minLength": 1,
            "type": "string"
          },
          "colorHoverHex": {
            "maxLength": 7,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchColorDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchColorReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationUpdateVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchColorUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "colorHex": {
            "maxLength": 7,
            "type": "string",
            "nullable": true
          },
          "colorHoverHex": {
            "maxLength": 7,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchComponentAddVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "template": {
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationCardsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationRepositoryCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/AttributesDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/BinaryValueDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ButtonLinkDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ChartDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ChildListDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/DatabaseSettingsTemplate"
              },
              {
                "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/LastActivityDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/LengthStatisticsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/MultiRelationDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/PanelDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/PipelineRunDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/RawValueDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationAttributesDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SampleDataDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SearchDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SimpleRelationsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCards2DatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCardsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SplitterDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TabAttributesDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TabTableDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TableOfContentsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TabsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TimeSelectorDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/WrapperDatabaseTemplate"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchComponentDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchComponentUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "template": {
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationCardsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ApplicationRepositoryCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/AttributesDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/BinaryValueDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ButtonLinkDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ChartDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/ChildListDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/DatabaseSettingsTemplate"
              },
              {
                "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/LastActivityDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/LengthStatisticsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/MultiRelationDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/PanelDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/PipelineRunDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/RawValueDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationAttributesDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/RelationsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SampleDataDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SearchDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SimpleRelationsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCardDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCards2DatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SpaceCardsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/SplitterDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TabAttributesDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TabTableDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TableOfContentsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TabsDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/TimeSelectorDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
              },
              {
                "$ref": "#/components/schemas/WrapperDatabaseTemplate"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDeleteComponent": {
        "required": [
          "action",
          "componentId"
        ],
        "type": "object",
        "properties": {
          "action": {
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDfaActivityAddVM": {
        "required": [
          "action",
          "key",
          "name",
          "statement",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "executionOrderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isReturningData": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "parameters": {
            "type": "string",
            "nullable": true
          },
          "runInTransaction": {
            "type": "boolean",
            "nullable": true
          },
          "statement": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "minLength": 1,
            "enum": [
              "sql_query",
              "sql_procedure",
              "sql_script"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDfaActivityDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDfaActivityFullAddVM": {
        "required": [
          "action",
          "executionOrderNumber",
          "key",
          "name",
          "pipelineKey",
          "statement",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "executionOrderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isReturningData": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "parameters": {
            "type": "string",
            "nullable": true
          },
          "pipelineKey": {
            "minLength": 1,
            "type": "string"
          },
          "runInTransaction": {
            "type": "boolean",
            "nullable": true
          },
          "statement": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "minLength": 1,
            "enum": [
              "sql_query",
              "sql_procedure",
              "sql_script"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDfaActivityFullDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDfaActivityFullUpdateVM": {
        "required": [
          "action",
          "executionOrderNumber",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "executionOrderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isReturningData": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "string",
            "nullable": true
          },
          "pipelineKey": {
            "type": "string",
            "nullable": true
          },
          "runInTransaction": {
            "type": "boolean",
            "nullable": true
          },
          "statement": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "sql_query",
              "sql_procedure",
              "sql_script"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDfaActivityUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "executionOrderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isReturningData": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "string",
            "nullable": true
          },
          "runInTransaction": {
            "type": "boolean",
            "nullable": true
          },
          "statement": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "sql_query",
              "sql_procedure",
              "sql_script"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDfaPipelineAddVM": {
        "required": [
          "action",
          "key",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDfaActivityVM"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "enum": [
              "dawiso_internal",
              "customer_specific"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDfaPipelineDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDfaPipelineReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "activities": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDfaActivityAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDfaActivityDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDfaActivityUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDfaPipelineUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDfaActivityVM"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "dawiso_internal",
              "customer_specific"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiApplicationDataIntegrationAddVM": {
        "required": [
          "action",
          "dataSourceDefinitionKey",
          "mappings",
          "versionKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "dataSourceDefinitionKey": {
            "minLength": 1,
            "type": "string"
          },
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingVM"
            }
          },
          "versionKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiApplicationDataIntegrationDeleteVM": {
        "required": [
          "action",
          "dataSourceDefinitionKey",
          "versionKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "dataSourceDefinitionKey": {
            "minLength": 1,
            "type": "string"
          },
          "versionKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiApplicationDataIntegrationUpdateVM": {
        "required": [
          "action",
          "dataSourceDefinitionKey",
          "mappings",
          "versionKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "dataSourceDefinitionKey": {
            "minLength": 1,
            "type": "string"
          },
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingVM"
            }
          },
          "versionKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiDataIntegrationInApplicationAddVM": {
        "required": [
          "action",
          "applicationKey",
          "dataSourceDefinitionKey",
          "mappings",
          "versionKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "minLength": 1,
            "type": "string"
          },
          "dataSourceDefinitionKey": {
            "minLength": 1,
            "type": "string"
          },
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingVM"
            }
          },
          "versionKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiDataIntegrationInApplicationDeleteVM": {
        "required": [
          "action",
          "dataSourceDefinitionKey",
          "versionKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "dataSourceDefinitionKey": {
            "minLength": 1,
            "type": "string"
          },
          "versionKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiDataIntegrationInApplicationUpdateVM": {
        "required": [
          "action",
          "applicationKey",
          "dataSourceDefinitionKey",
          "mappings",
          "versionKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "minLength": 1,
            "type": "string"
          },
          "dataSourceDefinitionKey": {
            "minLength": 1,
            "type": "string"
          },
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingVM"
            }
          },
          "versionKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiDataSourceTypeAddVM": {
        "required": [
          "action",
          "key",
          "name",
          "provider"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "provider": {
            "minLength": 1,
            "type": "string"
          },
          "queries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDiMessageTypeVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDiDataSourceVersionVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiDataSourceTypeDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiDataSourceTypeReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "queries": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDiMessageTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDiMessageTypeUpdateVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDiMessageTypeDeleteVM"
                }
              ]
            },
            "nullable": true
          },
          "versions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDiDataSourceVersionAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDiDataSourceVersionUpdateVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchDiDataSourceVersionDeleteVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiDataSourceTypeUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "queries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDiMessageTypeVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDiDataSourceVersionVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiDataSourceVersionAddVM": {
        "required": [
          "action",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/PkgDiDataSourceVersionBaseOptionsVM"
          },
          "queryDefinitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDiQueryDefinitionVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "template": {
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiDataSourceVersionDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiDataSourceVersionUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "$ref": "#/components/schemas/PkgDiDataSourceVersionBaseOptionsVM"
          },
          "queryDefinitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgDiQueryDefinitionVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "template": {
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiMessageTypeAddVM": {
        "required": [
          "action",
          "baseType",
          "key",
          "type"
        ],
        "type": "object",
        "properties": {
          "abbreviation": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "baseType": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "enum": [
              "object",
              "relation",
              "generic"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiMessageTypeDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDiMessageTypeUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "abbreviation": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "baseType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "object",
              "relation",
              "generic"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDomainTypeAddVM": {
        "required": [
          "action",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "searchTemplate": {
            "$ref": "#/components/schemas/PkgSearchTemplateVM"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDomainTypeDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchDomainTypeUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "searchTemplate": {
            "$ref": "#/components/schemas/PkgSearchTemplateVM"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchEntityTranslationAddVM": {
        "required": [
          "action",
          "languageKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "languageKey": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shortcut": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchEntityTranslationDeleteVM": {
        "required": [
          "action",
          "languageKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "languageKey": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shortcut": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchEntityTranslationUpdateVM": {
        "required": [
          "action",
          "languageKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "languageKey": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shortcut": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchExternalDataSourceAddVM": {
        "required": [
          "action",
          "name",
          "type",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "hierarchyDefinitionKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "queryMappingKey": {
            "type": "string",
            "nullable": true
          },
          "querySetKey": {
            "type": "string",
            "nullable": true
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "type": "string"
          },
          "uuid": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchExternalDataSourceDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchExternalDataSourceReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationUpdateVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchExternalDataSourceUpdateVM": {
        "required": [
          "action",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "hierarchyDefinitionKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "queryMappingKey": {
            "type": "string",
            "nullable": true
          },
          "querySetKey": {
            "type": "string",
            "nullable": true
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchGraphDisplayLevelAddVM": {
        "required": [
          "action",
          "displayTypeKey",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "displayTypeKey": {
            "minLength": 1,
            "enum": [
              "folder",
              "object",
              "column",
              "er_object",
              "er_column",
              "knowledge_object"
            ],
            "type": "string"
          },
          "isSingleHideable": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgGraphObjectTypeVM"
            },
            "nullable": true
          },
          "parentKey": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchGraphDisplayLevelDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchGraphDisplayLevelReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchGraphObjectTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchGraphObjectTypeDeleteVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchGraphDisplayLevelUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "displayTypeKey": {
            "enum": [
              "folder",
              "object",
              "column",
              "er_object",
              "er_column",
              "knowledge_object"
            ],
            "type": "string",
            "nullable": true
          },
          "isSingleHideable": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgGraphObjectTypeVM"
            },
            "nullable": true
          },
          "parentKey": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchGraphMetamodelAddVM": {
        "required": [
          "action",
          "key",
          "name",
          "viewTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "defaultLabels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgGraphDefaultLabels"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "displayLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgGraphDisplayLevelVM"
            },
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "relationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgGraphRelationTypesVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "viewTypeKey": {
            "minLength": 1,
            "enum": [
              "data_lineage",
              "entity_relation",
              "relation"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchGraphMetamodelDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchGraphMetamodelReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "displayLevels": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchGraphDisplayLevelReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchGraphDisplayLevelAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchGraphDisplayLevelDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchGraphDisplayLevelUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "relationTypes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchGraphRelationTypesAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchGraphRelationTypesDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchGraphRelationTypesUpdateVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchGraphMetamodelUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "defaultLabels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgGraphDefaultLabels"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "displayLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgGraphDisplayLevelVM"
            },
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "relationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgGraphRelationTypesVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "viewTypeKey": {
            "enum": [
              "data_lineage",
              "entity_relation",
              "relation"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchGraphObjectTypeAddVM": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchGraphObjectTypeDeleteVM": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchGraphRelationTypesAddVM": {
        "required": [
          "action",
          "key",
          "lineDisplayTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "lineDisplayTypeKey": {
            "minLength": 1,
            "enum": [
              "data_lineage",
              "foreign_key",
              "knowledge_relation",
              "knowledge_parent",
              "indirect_flow"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchGraphRelationTypesDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchGraphRelationTypesUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "lineDisplayTypeKey": {
            "enum": [
              "data_lineage",
              "foreign_key",
              "knowledge_relation",
              "knowledge_parent",
              "indirect_flow"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchHierarchyDefinitionAddVM": {
        "required": [
          "action",
          "key",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "disableParentUpdate": {
            "type": "boolean",
            "nullable": true
          },
          "hasSameLevelParent": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "levels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgHierarchyDefinitionLevelVM"
            },
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchHierarchyDefinitionDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchHierarchyDefinitionInApplicationAddVM": {
        "required": [
          "action",
          "applicationKey",
          "hierarchyDefinitionKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "minLength": 1,
            "type": "string"
          },
          "childrenCountType": {
            "type": "string",
            "nullable": true
          },
          "hierarchyDefinitionKey": {
            "minLength": 1,
            "type": "string"
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchHierarchyDefinitionInApplicationDeleteVM": {
        "required": [
          "action",
          "applicationKey",
          "hierarchyDefinitionKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "minLength": 1,
            "type": "string"
          },
          "hierarchyDefinitionKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchHierarchyDefinitionInApplicationUpdateVM": {
        "required": [
          "action",
          "applicationKey",
          "hierarchyDefinitionKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "minLength": 1,
            "type": "string"
          },
          "childrenCountType": {
            "type": "string",
            "nullable": true
          },
          "hierarchyDefinitionKey": {
            "minLength": 1,
            "type": "string"
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchHierarchyDefinitionLevelAddVM": {
        "required": [
          "action",
          "key",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "hasFixedParent": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "parentLevelKey": {
            "type": "string",
            "nullable": true
          },
          "template": {
            "$ref": "#/components/schemas/MainDatabaseTemplate"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "type": {
            "maxLength": 3,
            "minLength": 1,
            "enum": [
              "OBJ",
              "FLD"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchHierarchyDefinitionLevelDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchHierarchyDefinitionReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "levels": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchHierarchyDefinitionLevelAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchHierarchyDefinitionLevelDeleteVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchHierarchyDefinitionUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "disableParentUpdate": {
            "type": "boolean",
            "nullable": true
          },
          "hasSameLevelParent": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "levels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgHierarchyDefinitionLevelVM"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchIconAddVM": {
        "required": [
          "action",
          "categoryKey",
          "content",
          "contentType",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "categoryKey": {
            "minLength": 1,
            "type": "string"
          },
          "content": {
            "minLength": 1,
            "type": "string"
          },
          "contentType": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchIconCategoryAddVM": {
        "required": [
          "action",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "defaultIconKey": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchIconCategoryDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchIconCategoryReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationUpdateVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchIconCategoryUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "defaultIconKey": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchIconDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchIconReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchIconUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "categoryKey": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchMrSettingsAddVM": {
        "required": [
          "action",
          "setting"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "setting": {
            "oneOf": [
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "hide_comment_section",
                      "read_only_hierarchy",
                      "object_not_creatable",
                      "snapshot_enabled",
                      "word_export_enabled",
                      "excel_export_enabled",
                      "pdf_export_enabled",
                      "excel_import_enabled",
                      "versioning_on_sort_order_enabled",
                      "change_analysis_enabled",
                      "object_workflow_space_admin_as_regular_user",
                      "is_application_data_lineage",
                      "media_gray_background",
                      "no_background_color_app_badge",
                      "disable_change_of_numbering",
                      "disable_sort_objects",
                      "has_token_keywords",
                      "has_token_texts",
                      "check_exact_match",
                      "exact_match_spaces",
                      "disable_duplicate_validation_for_spaceapp",
                      "move_object_based_on_role",
                      "force_confirmation_after_object_move",
                      "copy_paste_as_plaintext_like",
                      "is_application_data_dictionary",
                      "is_application_code_tables",
                      "is_application_dawiso_objects",
                      "is_application_pdm_app"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "order_number"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "integer",
                    "nullable": true
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "color",
                      "object_ladder_numbering_pattern",
                      "changed_text_color",
                      "deleted_text_color"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "excel_import_settings"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "$ref": "#/components/schemas/ImportSettingsBase"
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "excel_export_settings"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "$ref": "#/components/schemas/ExportSettingsBase"
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "external_loads"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "$ref": "#/components/schemas/ExternalLoadsSettingsBase"
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "token_keyword_spaces",
                      "token_keyword_apps"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "nullable": true
                  }
                }
              }
            ]
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchMrSettingsDeleteSettingKeyVM": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchMrSettingsDeleteVM": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "setting": {
            "$ref": "#/components/schemas/PkgPatchMrSettingsDeleteSettingKeyVM"
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchMrSettingsUpdateVM": {
        "required": [
          "action",
          "setting"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "setting": {
            "oneOf": [
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "hide_comment_section",
                      "read_only_hierarchy",
                      "object_not_creatable",
                      "snapshot_enabled",
                      "word_export_enabled",
                      "excel_export_enabled",
                      "pdf_export_enabled",
                      "excel_import_enabled",
                      "versioning_on_sort_order_enabled",
                      "change_analysis_enabled",
                      "object_workflow_space_admin_as_regular_user",
                      "is_application_data_lineage",
                      "media_gray_background",
                      "no_background_color_app_badge",
                      "disable_change_of_numbering",
                      "disable_sort_objects",
                      "has_token_keywords",
                      "has_token_texts",
                      "check_exact_match",
                      "exact_match_spaces",
                      "disable_duplicate_validation_for_spaceapp",
                      "move_object_based_on_role",
                      "force_confirmation_after_object_move",
                      "copy_paste_as_plaintext_like",
                      "is_application_data_dictionary",
                      "is_application_code_tables",
                      "is_application_dawiso_objects",
                      "is_application_pdm_app"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "order_number"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "integer",
                    "nullable": true
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "color",
                      "object_ladder_numbering_pattern",
                      "changed_text_color",
                      "deleted_text_color"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "excel_import_settings"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "$ref": "#/components/schemas/ImportSettingsBase"
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "excel_export_settings"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "$ref": "#/components/schemas/ExportSettingsBase"
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "external_loads"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "$ref": "#/components/schemas/ExternalLoadsSettingsBase"
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "token_keyword_spaces",
                      "token_keyword_apps"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "nullable": true
                  }
                }
              }
            ]
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchNotificationTemplateAddVM": {
        "required": [
          "action",
          "key",
          "notificationChannelKey",
          "notificationTypeKey",
          "titleTemplate"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "descriptionHtmlTemplate": {
            "type": "string",
            "nullable": true
          },
          "descriptionTemplate": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "moduleKey": {
            "enum": [
              "dictionary",
              "glossary",
              "hidden",
              "branching",
              "simple_flow"
            ],
            "type": "string",
            "nullable": true
          },
          "notificationChannelKey": {
            "minLength": 1,
            "enum": [
              "web_socket",
              "email",
              "grouped_email"
            ],
            "type": "string"
          },
          "notificationTypeKey": {
            "minLength": 1,
            "enum": [
              "user_assigned_to_object_attribute",
              "child_object_created",
              "object_modified",
              "concept_shared",
              "concept_remove_sharing",
              "concept_applied",
              "concept_applied_by_creator",
              "your_concept_was_applied",
              "user_added_to_group",
              "user_removed_from_group",
              "task_finished",
              "user_assigned_to_space_attribute",
              "space_modified",
              "task_updated",
              "space_request_access",
              "object_share",
              "user_object_tag",
              "user_comment_tag",
              "user_space_tag",
              "user_application_tag",
              "merge_request_resolved",
              "merge_request_approved",
              "merge_request_disapproved",
              "merge_request_started_propagating",
              "model_owner_has_changed",
              "model_version_changes_approved",
              "model_version_changes_disapproved",
              "model_version_changes_started_propagating",
              "user_object_relation_assigned",
              "user_object_relation_unassigned",
              "object_workflow_state_has_changed",
              "registration",
              "registration_failed_dawiso",
              "registration_failed_user",
              "forgotten_password",
              "pwd_metadata_load_finished",
              "user_object_relation_assigned_in_app",
              "user_object_relation_unassigned_in_app",
              "user_object_relation_assigned_in_space",
              "user_object_relation_unassigned_in_space",
              "objects_export_started",
              "objects_export_finished",
              "objects_export_failed",
              "refresh_frontend",
              "grouped_notification",
              "import_object_added",
              "import_object_modified",
              "import_object_deleted",
              "import_started",
              "import_finished",
              "refresh_numbering_started",
              "refresh_numbering_finished",
              "refresh_numbering_failed",
              "object_all_users_workflow_has_changed",
              "comment_added",
              "user_import_finished",
              "user_import_failed",
              "report_import_progress",
              "db_proc_started",
              "db_proc_object_added",
              "db_proc_object_updated",
              "db_proc_object_deleted",
              "db_proc_finished",
              "bulk_edit_started",
              "bulk_edit_finished",
              "bulk_delete_started",
              "bulk_delete_finished",
              "package_delete_progress",
              "package_version_install_progress",
              "package_version_validation_progress",
              "package_version_rollback_progress",
              "attribute_edit",
              "object_relation_add",
              "object_relation_delete",
              "notification_threshold_overflow",
              "ingestion_report_progress",
              "attribute_value_changed",
              "marketplace_package_version_install_progress",
              "marketplace_package_delete_progress",
              "bulk_edit_info",
              "master_hash_update",
              "bulk_domains_info",
              "send_concept_to_approval",
              "send_anonymous_concept_to_approval",
              "concept_approved",
              "anonymous_concept_approved",
              "concept_declined",
              "anonymous_concept_declined"
            ],
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "titleTemplate": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchNotificationTemplateDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchNotificationTemplateUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "descriptionHtmlTemplate": {
            "type": "string",
            "nullable": true
          },
          "descriptionTemplate": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "moduleKey": {
            "enum": [
              "dictionary",
              "glossary",
              "hidden",
              "branching",
              "simple_flow"
            ],
            "type": "string",
            "nullable": true
          },
          "notificationChannelKey": {
            "enum": [
              "web_socket",
              "email",
              "grouped_email"
            ],
            "type": "string",
            "nullable": true
          },
          "notificationTypeKey": {
            "enum": [
              "user_assigned_to_object_attribute",
              "child_object_created",
              "object_modified",
              "concept_shared",
              "concept_remove_sharing",
              "concept_applied",
              "concept_applied_by_creator",
              "your_concept_was_applied",
              "user_added_to_group",
              "user_removed_from_group",
              "task_finished",
              "user_assigned_to_space_attribute",
              "space_modified",
              "task_updated",
              "space_request_access",
              "object_share",
              "user_object_tag",
              "user_comment_tag",
              "user_space_tag",
              "user_application_tag",
              "merge_request_resolved",
              "merge_request_approved",
              "merge_request_disapproved",
              "merge_request_started_propagating",
              "model_owner_has_changed",
              "model_version_changes_approved",
              "model_version_changes_disapproved",
              "model_version_changes_started_propagating",
              "user_object_relation_assigned",
              "user_object_relation_unassigned",
              "object_workflow_state_has_changed",
              "registration",
              "registration_failed_dawiso",
              "registration_failed_user",
              "forgotten_password",
              "pwd_metadata_load_finished",
              "user_object_relation_assigned_in_app",
              "user_object_relation_unassigned_in_app",
              "user_object_relation_assigned_in_space",
              "user_object_relation_unassigned_in_space",
              "objects_export_started",
              "objects_export_finished",
              "objects_export_failed",
              "refresh_frontend",
              "grouped_notification",
              "import_object_added",
              "import_object_modified",
              "import_object_deleted",
              "import_started",
              "import_finished",
              "refresh_numbering_started",
              "refresh_numbering_finished",
              "refresh_numbering_failed",
              "object_all_users_workflow_has_changed",
              "comment_added",
              "user_import_finished",
              "user_import_failed",
              "report_import_progress",
              "db_proc_started",
              "db_proc_object_added",
              "db_proc_object_updated",
              "db_proc_object_deleted",
              "db_proc_finished",
              "bulk_edit_started",
              "bulk_edit_finished",
              "bulk_delete_started",
              "bulk_delete_finished",
              "package_delete_progress",
              "package_version_install_progress",
              "package_version_validation_progress",
              "package_version_rollback_progress",
              "attribute_edit",
              "object_relation_add",
              "object_relation_delete",
              "notification_threshold_overflow",
              "ingestion_report_progress",
              "attribute_value_changed",
              "marketplace_package_version_install_progress",
              "marketplace_package_delete_progress",
              "bulk_edit_info",
              "master_hash_update",
              "bulk_domains_info",
              "send_concept_to_approval",
              "send_anonymous_concept_to_approval",
              "concept_approved",
              "anonymous_concept_approved",
              "concept_declined",
              "anonymous_concept_declined"
            ],
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "titleTemplate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectRelationTypeAddVM": {
        "required": [
          "action",
          "fromObjectTypeKey",
          "relationTypeKey",
          "toObjectTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "fromObjectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "relationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "toObjectTypeKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectRelationTypeDeleteVM": {
        "required": [
          "action",
          "fromObjectTypeKey",
          "relationTypeKey",
          "toObjectTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "fromObjectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "relationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "toObjectTypeKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTemplateVM": {
        "type": "object",
        "properties": {
          "main": {
            "$ref": "#/components/schemas/MainDatabasePatchTemplate"
          },
          "objectDetail": {
            "$ref": "#/components/schemas/ObjectDetailDatabasePatchTemplate"
          },
          "search": {
            "$ref": "#/components/schemas/PkgSearchPatchTemplateVM"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeAddVM": {
        "required": [
          "action",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "attributeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeAttributeTypeVM"
            },
            "nullable": true
          },
          "categoryKey": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "domainTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_data_dictionary_type",
                        "create_from_child_panel_only",
                        "create_without_concept",
                        "is_dependency_change",
                        "not_creatable_in_root",
                        "is_token_exact_value_match",
                        "is_condition_based_editable",
                        "disable_child_creation_based_on_workflow_state",
                        "anonymous_concept_check_workflow_on_publish",
                        "is_data_model_object",
                        "is_data_model_column",
                        "is_object_type_diagram",
                        "is_object_type_error",
                        "is_object_type_script",
                        "is_object_type_space",
                        "is_object_type_code_list_table",
                        "is_object_type_code_list_column",
                        "is_object_type_pdm_app_model",
                        "is_object_type_file",
                        "is_object_type_model",
                        "is_object_type_table",
                        "is_object_type_view",
                        "is_object_type_column",
                        "is_object_type_domain",
                        "is_object_type_domain_area"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "facet_sort_order"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "integer",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "graphDisplayLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeGraphObjectTypeVM"
            },
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "initialWorkflowStateKey": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "moduleKey": {
            "enum": [
              "dictionary",
              "glossary",
              "hidden",
              "branching",
              "simple_flow"
            ],
            "type": "string",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationObjectTypeVM"
            },
            "nullable": true
          },
          "search": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "templates": {
            "$ref": "#/components/schemas/PkgObjectTemplateVM"
          },
          "tooltipAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "userRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeUserRelationTypeVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeAttributeTypeAddVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeConditionVM"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_translatable",
                        "is_mandatory",
                        "is_html",
                        "is_space_inheritable",
                        "is_token_keyword",
                        "is_token_text",
                        "is_not_presented_in_changes",
                        "is_number",
                        "is_checkbox",
                        "is_date",
                        "has_multiple_values",
                        "has_no_results_label",
                        "is_multiline",
                        "is_static_select",
                        "is_sql_raw",
                        "is_not_presented_in_changes_but_send_to_fe",
                        "is_search_type_term",
                        "is_search_type_text",
                        "is_search_type_number_10",
                        "is_search_type_number_100",
                        "is_search_type_number_1_000",
                        "is_search_type_number_10_000",
                        "is_search_type_number_100_000",
                        "is_search_type_number_1_000_000",
                        "is_search_type_bool",
                        "is_search_type_date",
                        "sort_by_number",
                        "is_url_link",
                        "clear_new_line",
                        "is_datetime",
                        "is_time",
                        "is_sql_mariadb",
                        "is_sql_mysql",
                        "is_sql_postgresql",
                        "is_sql_db2",
                        "is_sql_plsql",
                        "is_sql_n1ql",
                        "is_sql_redshift",
                        "is_sql_spark",
                        "is_sql_tsql",
                        "force_comment",
                        "is_parent_inheritable",
                        "is_dependency_change",
                        "is_script_javascript",
                        "is_script_csharp",
                        "is_script_scala",
                        "is_script_typescript",
                        "is_script_html",
                        "is_script_css",
                        "is_script_xml",
                        "is_script_kotlin",
                        "is_script_php",
                        "is_script_python",
                        "is_attribute_type_domain_analysis",
                        "is_search_default_result_text",
                        "is_yes_no",
                        "is_yes_no_icon",
                        "is_attribute_type_fullness",
                        "is_jira_field",
                        "is_attribute_type_diagram_description",
                        "is_primary_key_attribute",
                        "is_data_type_attribute",
                        "is_nullability_attribute",
                        "is_core_diagram_attribute_primary_key",
                        "is_core_diagram_attribute_foreign_key",
                        "is_core_diagram_attribute_data_type",
                        "is_core_diagram_attribute_nullability",
                        "is_core_diagram_attribute_stereotype",
                        "can_be_shown_in_diagram",
                        "include_in_ai_summary",
                        "disable_excel_template_export",
                        "is_core_diagram_attribute_knowledge_weight",
                        "is_primary_definition",
                        "is_attribute_type_space_short_description",
                        "is_attribute_type_codelist_table",
                        "is_attribute_type_stereotype",
                        "is_attribute_type_is_public",
                        "is_attribute_type_concept_note",
                        "is_attribute_type_order_number",
                        "is_attribute_type_data_type",
                        "is_attribute_type_filter_field_name",
                        "is_attribute_type_key_column",
                        "is_attribute_type_description_column_en",
                        "is_attribute_type_description_column_cs",
                        "is_attribute_type_description_column_fr",
                        "is_attribute_type_value_column",
                        "is_attribute_type_diagram_data",
                        "is_attribute_type_process_codelist",
                        "is_attribute_type_name",
                        "is_ai_generated_summary",
                        "is_ai_generated_summary_toggle_value",
                        "is_attribute_type_diagram_recalculation_flag",
                        "is_attribute_type_recommended",
                        "is_domain_definition",
                        "is_core_diagram_data_type_icon",
                        "is_attribute_type_concept_approval_decision_note",
                        "is_attribute_type_concept_name",
                        "is_domain_alternative_names"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "hasUserAutofill": {
            "type": "boolean",
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeAttributeTypeDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeAttributeTypeReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeConditionAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeConditionDeleteVM"
                }
              ]
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_translatable",
                        "is_mandatory",
                        "is_html",
                        "is_space_inheritable",
                        "is_token_keyword",
                        "is_token_text",
                        "is_not_presented_in_changes",
                        "is_number",
                        "is_checkbox",
                        "is_date",
                        "has_multiple_values",
                        "has_no_results_label",
                        "is_multiline",
                        "is_static_select",
                        "is_sql_raw",
                        "is_not_presented_in_changes_but_send_to_fe",
                        "is_search_type_term",
                        "is_search_type_text",
                        "is_search_type_number_10",
                        "is_search_type_number_100",
                        "is_search_type_number_1_000",
                        "is_search_type_number_10_000",
                        "is_search_type_number_100_000",
                        "is_search_type_number_1_000_000",
                        "is_search_type_bool",
                        "is_search_type_date",
                        "sort_by_number",
                        "is_url_link",
                        "clear_new_line",
                        "is_datetime",
                        "is_time",
                        "is_sql_mariadb",
                        "is_sql_mysql",
                        "is_sql_postgresql",
                        "is_sql_db2",
                        "is_sql_plsql",
                        "is_sql_n1ql",
                        "is_sql_redshift",
                        "is_sql_spark",
                        "is_sql_tsql",
                        "force_comment",
                        "is_parent_inheritable",
                        "is_dependency_change",
                        "is_script_javascript",
                        "is_script_csharp",
                        "is_script_scala",
                        "is_script_typescript",
                        "is_script_html",
                        "is_script_css",
                        "is_script_xml",
                        "is_script_kotlin",
                        "is_script_php",
                        "is_script_python",
                        "is_attribute_type_domain_analysis",
                        "is_search_default_result_text",
                        "is_yes_no",
                        "is_yes_no_icon",
                        "is_attribute_type_fullness",
                        "is_jira_field",
                        "is_attribute_type_diagram_description",
                        "is_primary_key_attribute",
                        "is_data_type_attribute",
                        "is_nullability_attribute",
                        "is_core_diagram_attribute_primary_key",
                        "is_core_diagram_attribute_foreign_key",
                        "is_core_diagram_attribute_data_type",
                        "is_core_diagram_attribute_nullability",
                        "is_core_diagram_attribute_stereotype",
                        "can_be_shown_in_diagram",
                        "include_in_ai_summary",
                        "disable_excel_template_export",
                        "is_core_diagram_attribute_knowledge_weight",
                        "is_primary_definition",
                        "is_attribute_type_space_short_description",
                        "is_attribute_type_codelist_table",
                        "is_attribute_type_stereotype",
                        "is_attribute_type_is_public",
                        "is_attribute_type_concept_note",
                        "is_attribute_type_order_number",
                        "is_attribute_type_data_type",
                        "is_attribute_type_filter_field_name",
                        "is_attribute_type_key_column",
                        "is_attribute_type_description_column_en",
                        "is_attribute_type_description_column_cs",
                        "is_attribute_type_description_column_fr",
                        "is_attribute_type_value_column",
                        "is_attribute_type_diagram_data",
                        "is_attribute_type_process_codelist",
                        "is_attribute_type_name",
                        "is_ai_generated_summary",
                        "is_ai_generated_summary_toggle_value",
                        "is_attribute_type_diagram_recalculation_flag",
                        "is_attribute_type_recommended",
                        "is_domain_definition",
                        "is_core_diagram_data_type_icon",
                        "is_attribute_type_concept_approval_decision_note",
                        "is_attribute_type_concept_name",
                        "is_domain_alternative_names"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_translatable",
                        "is_mandatory",
                        "is_html",
                        "is_space_inheritable",
                        "is_token_keyword",
                        "is_token_text",
                        "is_not_presented_in_changes",
                        "is_number",
                        "is_checkbox",
                        "is_date",
                        "has_multiple_values",
                        "has_no_results_label",
                        "is_multiline",
                        "is_static_select",
                        "is_sql_raw",
                        "is_not_presented_in_changes_but_send_to_fe",
                        "is_search_type_term",
                        "is_search_type_text",
                        "is_search_type_number_10",
                        "is_search_type_number_100",
                        "is_search_type_number_1_000",
                        "is_search_type_number_10_000",
                        "is_search_type_number_100_000",
                        "is_search_type_number_1_000_000",
                        "is_search_type_bool",
                        "is_search_type_date",
                        "sort_by_number",
                        "is_url_link",
                        "clear_new_line",
                        "is_datetime",
                        "is_time",
                        "is_sql_mariadb",
                        "is_sql_mysql",
                        "is_sql_postgresql",
                        "is_sql_db2",
                        "is_sql_plsql",
                        "is_sql_n1ql",
                        "is_sql_redshift",
                        "is_sql_spark",
                        "is_sql_tsql",
                        "force_comment",
                        "is_parent_inheritable",
                        "is_dependency_change",
                        "is_script_javascript",
                        "is_script_csharp",
                        "is_script_scala",
                        "is_script_typescript",
                        "is_script_html",
                        "is_script_css",
                        "is_script_xml",
                        "is_script_kotlin",
                        "is_script_php",
                        "is_script_python",
                        "is_attribute_type_domain_analysis",
                        "is_search_default_result_text",
                        "is_yes_no",
                        "is_yes_no_icon",
                        "is_attribute_type_fullness",
                        "is_jira_field",
                        "is_attribute_type_diagram_description",
                        "is_primary_key_attribute",
                        "is_data_type_attribute",
                        "is_nullability_attribute",
                        "is_core_diagram_attribute_primary_key",
                        "is_core_diagram_attribute_foreign_key",
                        "is_core_diagram_attribute_data_type",
                        "is_core_diagram_attribute_nullability",
                        "is_core_diagram_attribute_stereotype",
                        "can_be_shown_in_diagram",
                        "include_in_ai_summary",
                        "disable_excel_template_export",
                        "is_core_diagram_attribute_knowledge_weight",
                        "is_primary_definition",
                        "is_attribute_type_space_short_description",
                        "is_attribute_type_codelist_table",
                        "is_attribute_type_stereotype",
                        "is_attribute_type_is_public",
                        "is_attribute_type_concept_note",
                        "is_attribute_type_order_number",
                        "is_attribute_type_data_type",
                        "is_attribute_type_filter_field_name",
                        "is_attribute_type_key_column",
                        "is_attribute_type_description_column_en",
                        "is_attribute_type_description_column_cs",
                        "is_attribute_type_description_column_fr",
                        "is_attribute_type_value_column",
                        "is_attribute_type_diagram_data",
                        "is_attribute_type_process_codelist",
                        "is_attribute_type_name",
                        "is_ai_generated_summary",
                        "is_ai_generated_summary_toggle_value",
                        "is_attribute_type_diagram_recalculation_flag",
                        "is_attribute_type_recommended",
                        "is_domain_definition",
                        "is_core_diagram_data_type_icon",
                        "is_attribute_type_concept_approval_decision_note",
                        "is_attribute_type_concept_name",
                        "is_domain_alternative_names",
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "delete"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeAttributeTypeUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeConditionVM"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_translatable",
                        "is_mandatory",
                        "is_html",
                        "is_space_inheritable",
                        "is_token_keyword",
                        "is_token_text",
                        "is_not_presented_in_changes",
                        "is_number",
                        "is_checkbox",
                        "is_date",
                        "has_multiple_values",
                        "has_no_results_label",
                        "is_multiline",
                        "is_static_select",
                        "is_sql_raw",
                        "is_not_presented_in_changes_but_send_to_fe",
                        "is_search_type_term",
                        "is_search_type_text",
                        "is_search_type_number_10",
                        "is_search_type_number_100",
                        "is_search_type_number_1_000",
                        "is_search_type_number_10_000",
                        "is_search_type_number_100_000",
                        "is_search_type_number_1_000_000",
                        "is_search_type_bool",
                        "is_search_type_date",
                        "sort_by_number",
                        "is_url_link",
                        "clear_new_line",
                        "is_datetime",
                        "is_time",
                        "is_sql_mariadb",
                        "is_sql_mysql",
                        "is_sql_postgresql",
                        "is_sql_db2",
                        "is_sql_plsql",
                        "is_sql_n1ql",
                        "is_sql_redshift",
                        "is_sql_spark",
                        "is_sql_tsql",
                        "force_comment",
                        "is_parent_inheritable",
                        "is_dependency_change",
                        "is_script_javascript",
                        "is_script_csharp",
                        "is_script_scala",
                        "is_script_typescript",
                        "is_script_html",
                        "is_script_css",
                        "is_script_xml",
                        "is_script_kotlin",
                        "is_script_php",
                        "is_script_python",
                        "is_attribute_type_domain_analysis",
                        "is_search_default_result_text",
                        "is_yes_no",
                        "is_yes_no_icon",
                        "is_attribute_type_fullness",
                        "is_jira_field",
                        "is_attribute_type_diagram_description",
                        "is_primary_key_attribute",
                        "is_data_type_attribute",
                        "is_nullability_attribute",
                        "is_core_diagram_attribute_primary_key",
                        "is_core_diagram_attribute_foreign_key",
                        "is_core_diagram_attribute_data_type",
                        "is_core_diagram_attribute_nullability",
                        "is_core_diagram_attribute_stereotype",
                        "can_be_shown_in_diagram",
                        "include_in_ai_summary",
                        "disable_excel_template_export",
                        "is_core_diagram_attribute_knowledge_weight",
                        "is_primary_definition",
                        "is_attribute_type_space_short_description",
                        "is_attribute_type_codelist_table",
                        "is_attribute_type_stereotype",
                        "is_attribute_type_is_public",
                        "is_attribute_type_concept_note",
                        "is_attribute_type_order_number",
                        "is_attribute_type_data_type",
                        "is_attribute_type_filter_field_name",
                        "is_attribute_type_key_column",
                        "is_attribute_type_description_column_en",
                        "is_attribute_type_description_column_cs",
                        "is_attribute_type_description_column_fr",
                        "is_attribute_type_value_column",
                        "is_attribute_type_diagram_data",
                        "is_attribute_type_process_codelist",
                        "is_attribute_type_name",
                        "is_ai_generated_summary",
                        "is_ai_generated_summary_toggle_value",
                        "is_attribute_type_diagram_recalculation_flag",
                        "is_attribute_type_recommended",
                        "is_domain_definition",
                        "is_core_diagram_data_type_icon",
                        "is_attribute_type_concept_approval_decision_note",
                        "is_attribute_type_concept_name",
                        "is_domain_alternative_names"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "hasUserAutofill": {
            "type": "boolean",
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeConditionAddVM": {
        "required": [
          "action",
          "userRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "userRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "workflowStateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeConditionDeleteVM": {
        "required": [
          "action",
          "userRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "userRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "workflowStateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeDomainTypeAddVM": {
        "required": [
          "action",
          "value"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeDomainTypeDeleteVM": {
        "required": [
          "action",
          "value"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeGraphObjectTypeAddVM": {
        "required": [
          "action",
          "displayLevelKey",
          "metamodelKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "displayLevelKey": {
            "minLength": 1,
            "type": "string"
          },
          "metamodelKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeGraphObjectTypeDeleteVM": {
        "required": [
          "action",
          "metamodelKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "metamodelKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeGraphObjectTypeUpdateVM": {
        "required": [
          "action",
          "displayLevelKey",
          "metamodelKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "displayLevelKey": {
            "minLength": 1,
            "type": "string"
          },
          "metamodelKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeInApplicationAddVM": {
        "required": [
          "action",
          "applicationKey",
          "objectTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeInApplicationDeleteVM": {
        "required": [
          "action",
          "applicationKey",
          "objectTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "attributeTypes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeAttributeTypeReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeAttributeTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeAttributeTypeDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeAttributeTypeUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "domainTypeKeys": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeDomainTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeDomainTypeDeleteVM"
                }
              ]
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_data_dictionary_type",
                        "create_from_child_panel_only",
                        "create_without_concept",
                        "is_dependency_change",
                        "not_creatable_in_root",
                        "is_token_exact_value_match",
                        "is_condition_based_editable",
                        "disable_child_creation_based_on_workflow_state",
                        "anonymous_concept_check_workflow_on_publish",
                        "is_data_model_object",
                        "is_data_model_column",
                        "is_object_type_diagram",
                        "is_object_type_error",
                        "is_object_type_script",
                        "is_object_type_space",
                        "is_object_type_code_list_table",
                        "is_object_type_code_list_column",
                        "is_object_type_pdm_app_model",
                        "is_object_type_file",
                        "is_object_type_model",
                        "is_object_type_table",
                        "is_object_type_view",
                        "is_object_type_column",
                        "is_object_type_domain",
                        "is_object_type_domain_area"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "facet_sort_order"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "integer",
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_data_dictionary_type",
                        "create_from_child_panel_only",
                        "create_without_concept",
                        "is_dependency_change",
                        "not_creatable_in_root",
                        "is_token_exact_value_match",
                        "is_condition_based_editable",
                        "disable_child_creation_based_on_workflow_state",
                        "anonymous_concept_check_workflow_on_publish",
                        "is_data_model_object",
                        "is_data_model_column",
                        "is_object_type_diagram",
                        "is_object_type_error",
                        "is_object_type_script",
                        "is_object_type_space",
                        "is_object_type_code_list_table",
                        "is_object_type_code_list_column",
                        "is_object_type_pdm_app_model",
                        "is_object_type_file",
                        "is_object_type_model",
                        "is_object_type_table",
                        "is_object_type_view",
                        "is_object_type_column",
                        "is_object_type_domain",
                        "is_object_type_domain_area",
                        "facet_sort_order"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "delete"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "graphDisplayLevels": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeGraphObjectTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeGraphObjectTypeDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchObjectTypeGraphObjectTypeUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "templates": {
            "$ref": "#/components/schemas/PkgPatchObjectTemplateVM"
          },
          "translations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "userRelationTypes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgObjectTypeUserRelationTypeReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgObjectTypeUserRelationTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgObjectTypeUserRelationTypeDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgObjectTypeUserRelationTypeUpdateVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchObjectTypeUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "attributeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeAttributeTypeVM"
            },
            "nullable": true
          },
          "categoryKey": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "domainTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_data_dictionary_type",
                        "create_from_child_panel_only",
                        "create_without_concept",
                        "is_dependency_change",
                        "not_creatable_in_root",
                        "is_token_exact_value_match",
                        "is_condition_based_editable",
                        "disable_child_creation_based_on_workflow_state",
                        "anonymous_concept_check_workflow_on_publish",
                        "is_data_model_object",
                        "is_data_model_column",
                        "is_object_type_diagram",
                        "is_object_type_error",
                        "is_object_type_script",
                        "is_object_type_space",
                        "is_object_type_code_list_table",
                        "is_object_type_code_list_column",
                        "is_object_type_pdm_app_model",
                        "is_object_type_file",
                        "is_object_type_model",
                        "is_object_type_table",
                        "is_object_type_view",
                        "is_object_type_column",
                        "is_object_type_domain",
                        "is_object_type_domain_area"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "facet_sort_order"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "integer",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "graphDisplayLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeGraphObjectTypeVM"
            },
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "initialWorkflowStateKey": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "moduleKey": {
            "enum": [
              "dictionary",
              "glossary",
              "hidden",
              "branching",
              "simple_flow"
            ],
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationObjectTypeVM"
            },
            "nullable": true
          },
          "search": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "templates": {
            "$ref": "#/components/schemas/PkgObjectTemplateVM"
          },
          "tooltipAttributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "userRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgObjectTypeUserRelationTypeVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchPageAddVM": {
        "required": [
          "action",
          "key",
          "name",
          "template"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_space_dashboard",
                        "is_application_dashboard"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "locationKey": {
            "enum": [
              "dashboard",
              "homepage-tabs",
              "top-menu"
            ],
            "type": "string",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentKey": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "template": {
            "$ref": "#/components/schemas/MainDatabaseTemplate"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchPageDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchPageReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_space_dashboard",
                        "is_application_dashboard"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "template": {
            "$ref": "#/components/schemas/MainDatabasePatchTemplate"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchPageUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_space_dashboard",
                        "is_application_dashboard"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "locationKey": {
            "enum": [
              "dashboard",
              "homepage-tabs",
              "top-menu"
            ],
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentKey": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "template": {
            "$ref": "#/components/schemas/MainDatabaseTemplate"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryAddVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgQueryColumnVM"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "$ref": "#/components/schemas/PkgQueryPropertyVM"
          },
          "statement": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryColumnAddVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "columnIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "expression": {
            "type": "string",
            "nullable": true
          },
          "isFromKey": {
            "type": "boolean",
            "nullable": true
          },
          "isKey": {
            "type": "boolean",
            "nullable": true
          },
          "isParentKey": {
            "type": "boolean",
            "nullable": true
          },
          "isRelationType": {
            "type": "boolean",
            "nullable": true
          },
          "isSortOrder": {
            "type": "boolean",
            "nullable": true
          },
          "isToKey": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "sourceDataType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryColumnDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryColumnUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "columnIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "expression": {
            "type": "string",
            "nullable": true
          },
          "isFromKey": {
            "type": "boolean",
            "nullable": true
          },
          "isKey": {
            "type": "boolean",
            "nullable": true
          },
          "isParentKey": {
            "type": "boolean",
            "nullable": true
          },
          "isRelationType": {
            "type": "boolean",
            "nullable": true
          },
          "isSortOrder": {
            "type": "boolean",
            "nullable": true
          },
          "isToKey": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "sourceDataType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryMappingAddVM": {
        "required": [
          "action",
          "key",
          "name",
          "queries"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "queries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgQueryMappingQueryVM"
            }
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryMappingDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryMappingQueryAddVM": {
        "required": [
          "action",
          "columns",
          "creationOrder",
          "objectTypeKey",
          "queryKey",
          "querySetKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgQueryMappingQueryColumnVM"
            }
          },
          "creationOrder": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "parentObjectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "queryKey": {
            "minLength": 1,
            "type": "string"
          },
          "querySetKey": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryMappingQueryColumnAddVM": {
        "required": [
          "action",
          "attributeTypeKey",
          "columnKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "attributeTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "columnKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryMappingQueryColumnDeleteVM": {
        "required": [
          "action",
          "attributeTypeKey",
          "columnKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "attributeTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "columnKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryMappingQueryDeleteVM": {
        "required": [
          "action",
          "objectTypeKey",
          "queryKey",
          "querySetKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "queryKey": {
            "minLength": 1,
            "type": "string"
          },
          "querySetKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryMappingQueryReferenceVM": {
        "required": [
          "objectTypeKey",
          "queryKey",
          "querySetKey"
        ],
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchQueryMappingQueryColumnAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchQueryMappingQueryColumnDeleteVM"
                }
              ]
            },
            "nullable": true
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "queryKey": {
            "minLength": 1,
            "type": "string"
          },
          "querySetKey": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationUpdateVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryMappingQueryUpdateVM": {
        "required": [
          "action",
          "columns",
          "creationOrder",
          "objectTypeKey",
          "queryKey",
          "querySetKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgQueryMappingQueryColumnVM"
            }
          },
          "creationOrder": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "parentObjectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "queryKey": {
            "minLength": 1,
            "type": "string"
          },
          "querySetKey": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryMappingReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "queries": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchQueryMappingQueryReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchQueryMappingQueryAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchQueryMappingQueryDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchQueryMappingQueryUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationUpdateVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryMappingUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "queries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgQueryMappingQueryVM"
            },
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchQueryColumnAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchQueryColumnDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchQueryColumnUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQuerySetAddVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "queries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgQueryVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQuerySetDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQuerySetReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "queries": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchQueryReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchQueryAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchQueryDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchQueryUpdateVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQuerySetUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "queries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgQueryVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchQueryUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgQueryColumnVM"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "$ref": "#/components/schemas/PkgQueryPropertyVM"
          },
          "statement": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchRCommentTypeCategoryApplicationAddVM": {
        "required": [
          "action",
          "applicationKey",
          "commentTypeCategoryKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "minLength": 1,
            "type": "string"
          },
          "commentTypeCategoryKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchRCommentTypeCategoryApplicationDeleteVM": {
        "required": [
          "action",
          "applicationKey",
          "commentTypeCategoryKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "minLength": 1,
            "type": "string"
          },
          "commentTypeCategoryKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchRelationTypeAddVM": {
        "required": [
          "action",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "categoryKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_generated_by_keyword",
                        "is_searchable_attribute",
                        "is_self_targetable",
                        "is_generated_by_exactMatch",
                        "force_comment",
                        "is_dependency",
                        "is_dependency_change",
                        "is_mandatory",
                        "is_implicit",
                        "is_relation_type_child_of",
                        "is_relation_type_parent_of",
                        "is_relation_type_referencing",
                        "is_relation_type_referenced_by",
                        "is_relation_type_in_diagram",
                        "is_relation_type_diagram_contains",
                        "is_relation_type_using_text_of",
                        "is_relation_type_used_text_in",
                        "is_relation_type_text_based_on",
                        "is_relation_type_text_based_in",
                        "is_relation_type_synonym_of",
                        "is_relation_type_acronym_of",
                        "is_relation_type_has_acronym",
                        "is_relation_type_has_domain",
                        "is_relation_type_domain_of",
                        "is_single_value",
                        "is_parent_inheritable",
                        "is_foreign_key",
                        "is_stereotype",
                        "include_in_ai_summary",
                        "is_creatable_on_child_add",
                        "is_relation_space_of",
                        "is_relation_in_space",
                        "is_not_presented_in_changes",
                        "can_be_shown_in_diagram",
                        "is_domain_of"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "graphLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgRelationTypeGraphRelationTypeVM"
            },
            "nullable": true
          },
          "isOriented": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationRelationTypeVM"
            },
            "nullable": true
          },
          "reverseKey": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchRelationTypeCategoryAddVM": {
        "required": [
          "action",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchRelationTypeCategoryDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchRelationTypeConditionAddVM": {
        "required": [
          "action",
          "objectTypeKey",
          "unlockedRelationTypeKey",
          "userRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "unlockedRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "userRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "workflowStateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchRelationTypeConditionDeleteVM": {
        "required": [
          "action",
          "objectTypeKey",
          "unlockedRelationTypeKey",
          "userRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "unlockedRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "userRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "workflowStateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchRelationTypeDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchRelationTypeObjectFeatureAddVM": {
        "required": [
          "action",
          "feature",
          "objectTypeKey",
          "relationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "feature": {
            "oneOf": [
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "is_generated_by_keyword",
                      "is_searchable_attribute",
                      "is_self_targetable",
                      "is_generated_by_exactMatch",
                      "force_comment",
                      "is_dependency",
                      "is_dependency_change",
                      "is_mandatory",
                      "is_implicit",
                      "is_relation_type_child_of",
                      "is_relation_type_parent_of",
                      "is_relation_type_referencing",
                      "is_relation_type_referenced_by",
                      "is_relation_type_in_diagram",
                      "is_relation_type_diagram_contains",
                      "is_relation_type_using_text_of",
                      "is_relation_type_used_text_in",
                      "is_relation_type_text_based_on",
                      "is_relation_type_text_based_in",
                      "is_relation_type_synonym_of",
                      "is_relation_type_acronym_of",
                      "is_relation_type_has_acronym",
                      "is_relation_type_has_domain",
                      "is_relation_type_domain_of",
                      "is_single_value",
                      "is_parent_inheritable",
                      "is_foreign_key",
                      "is_stereotype",
                      "include_in_ai_summary",
                      "is_creatable_on_child_add",
                      "is_relation_space_of",
                      "is_relation_in_space",
                      "is_not_presented_in_changes",
                      "can_be_shown_in_diagram",
                      "is_domain_of"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "fullness_score_value"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "number",
                    "format": "double",
                    "nullable": true
                  }
                }
              }
            ]
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "relationTypeKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchRelationTypeObjectFeatureDeleteVM": {
        "required": [
          "action",
          "objectTypeKey",
          "relationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "feature": {
            "$ref": "#/components/schemas/PkgPatchRelationTypeObjectFeatureKeyDeleteVM"
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "relationTypeKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchRelationTypeObjectFeatureKeyDeleteVM": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchRelationTypeObjectFeatureUpdateVM": {
        "required": [
          "action",
          "feature",
          "objectTypeKey",
          "relationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "feature": {
            "oneOf": [
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "is_generated_by_keyword",
                      "is_searchable_attribute",
                      "is_self_targetable",
                      "is_generated_by_exactMatch",
                      "force_comment",
                      "is_dependency",
                      "is_dependency_change",
                      "is_mandatory",
                      "is_implicit",
                      "is_relation_type_child_of",
                      "is_relation_type_parent_of",
                      "is_relation_type_referencing",
                      "is_relation_type_referenced_by",
                      "is_relation_type_in_diagram",
                      "is_relation_type_diagram_contains",
                      "is_relation_type_using_text_of",
                      "is_relation_type_used_text_in",
                      "is_relation_type_text_based_on",
                      "is_relation_type_text_based_in",
                      "is_relation_type_synonym_of",
                      "is_relation_type_acronym_of",
                      "is_relation_type_has_acronym",
                      "is_relation_type_has_domain",
                      "is_relation_type_domain_of",
                      "is_single_value",
                      "is_parent_inheritable",
                      "is_foreign_key",
                      "is_stereotype",
                      "include_in_ai_summary",
                      "is_creatable_on_child_add",
                      "is_relation_space_of",
                      "is_relation_in_space",
                      "is_not_presented_in_changes",
                      "can_be_shown_in_diagram",
                      "is_domain_of"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "fullness_score_value"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "number",
                    "format": "double",
                    "nullable": true
                  }
                }
              }
            ]
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "relationTypeKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchRelationTypeReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_generated_by_keyword",
                        "is_searchable_attribute",
                        "is_self_targetable",
                        "is_generated_by_exactMatch",
                        "force_comment",
                        "is_dependency",
                        "is_dependency_change",
                        "is_mandatory",
                        "is_implicit",
                        "is_relation_type_child_of",
                        "is_relation_type_parent_of",
                        "is_relation_type_referencing",
                        "is_relation_type_referenced_by",
                        "is_relation_type_in_diagram",
                        "is_relation_type_diagram_contains",
                        "is_relation_type_using_text_of",
                        "is_relation_type_used_text_in",
                        "is_relation_type_text_based_on",
                        "is_relation_type_text_based_in",
                        "is_relation_type_synonym_of",
                        "is_relation_type_acronym_of",
                        "is_relation_type_has_acronym",
                        "is_relation_type_has_domain",
                        "is_relation_type_domain_of",
                        "is_single_value",
                        "is_parent_inheritable",
                        "is_foreign_key",
                        "is_stereotype",
                        "include_in_ai_summary",
                        "is_creatable_on_child_add",
                        "is_relation_space_of",
                        "is_relation_in_space",
                        "is_not_presented_in_changes",
                        "can_be_shown_in_diagram",
                        "is_domain_of"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_generated_by_keyword",
                        "is_searchable_attribute",
                        "is_self_targetable",
                        "is_generated_by_exactMatch",
                        "force_comment",
                        "is_dependency",
                        "is_dependency_change",
                        "is_mandatory",
                        "is_implicit",
                        "is_relation_type_child_of",
                        "is_relation_type_parent_of",
                        "is_relation_type_referencing",
                        "is_relation_type_referenced_by",
                        "is_relation_type_in_diagram",
                        "is_relation_type_diagram_contains",
                        "is_relation_type_using_text_of",
                        "is_relation_type_used_text_in",
                        "is_relation_type_text_based_on",
                        "is_relation_type_text_based_in",
                        "is_relation_type_synonym_of",
                        "is_relation_type_acronym_of",
                        "is_relation_type_has_acronym",
                        "is_relation_type_has_domain",
                        "is_relation_type_domain_of",
                        "is_single_value",
                        "is_parent_inheritable",
                        "is_foreign_key",
                        "is_stereotype",
                        "include_in_ai_summary",
                        "is_creatable_on_child_add",
                        "is_relation_space_of",
                        "is_relation_in_space",
                        "is_not_presented_in_changes",
                        "can_be_shown_in_diagram",
                        "is_domain_of",
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "delete"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchRelationTypeUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "categoryKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_generated_by_keyword",
                        "is_searchable_attribute",
                        "is_self_targetable",
                        "is_generated_by_exactMatch",
                        "force_comment",
                        "is_dependency",
                        "is_dependency_change",
                        "is_mandatory",
                        "is_implicit",
                        "is_relation_type_child_of",
                        "is_relation_type_parent_of",
                        "is_relation_type_referencing",
                        "is_relation_type_referenced_by",
                        "is_relation_type_in_diagram",
                        "is_relation_type_diagram_contains",
                        "is_relation_type_using_text_of",
                        "is_relation_type_used_text_in",
                        "is_relation_type_text_based_on",
                        "is_relation_type_text_based_in",
                        "is_relation_type_synonym_of",
                        "is_relation_type_acronym_of",
                        "is_relation_type_has_acronym",
                        "is_relation_type_has_domain",
                        "is_relation_type_domain_of",
                        "is_single_value",
                        "is_parent_inheritable",
                        "is_foreign_key",
                        "is_stereotype",
                        "include_in_ai_summary",
                        "is_creatable_on_child_add",
                        "is_relation_space_of",
                        "is_relation_in_space",
                        "is_not_presented_in_changes",
                        "can_be_shown_in_diagram",
                        "is_domain_of"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "graphLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgRelationTypeGraphRelationTypeVM"
            },
            "nullable": true
          },
          "isOriented": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationRelationTypeVM"
            },
            "nullable": true
          },
          "reverseKey": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchFormAddVM": {
        "required": [
          "action",
          "iconKey",
          "key",
          "searchIndexKey",
          "template"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "iconKey": {
            "minLength": 1,
            "type": "string"
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "replaceSynonyms": {
            "type": "boolean",
            "nullable": true
          },
          "searchIndexKey": {
            "minLength": 1,
            "type": "string"
          },
          "searchQueryKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "template": {
            "$ref": "#/components/schemas/PkgFacetedSearchDefinitionVM"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchFormDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchFormQueryKeyAddVM": {
        "required": [
          "action",
          "value"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchFormQueryKeyDeleteVM": {
        "required": [
          "action",
          "value"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchFormReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "searchQueryKeys": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchSearchFormQueryKeyAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchFormQueryKeyDeleteVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchFormUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "replaceSynonyms": {
            "type": "boolean",
            "nullable": true
          },
          "searchIndexKey": {
            "type": "string",
            "nullable": true
          },
          "searchQueryKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "template": {
            "$ref": "#/components/schemas/PkgFacetedSearchDefinitionVM"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchIndexAddVM": {
        "required": [
          "action",
          "indexName",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "indexName": {
            "minLength": 1,
            "type": "string"
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "searchIndexSettingsKey": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchIndexDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchIndexSettingsAddVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/SearchIndexSettingsVM"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchIndexSettingsDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchIndexSettingsUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/SearchIndexSettingsVM"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchIndexUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "indexName": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "searchIndexSettingsKey": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchQueryAddVM": {
        "required": [
          "action",
          "key",
          "searchQuery",
          "searchQueryTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "searchQuery": {
            "minLength": 1,
            "type": "string"
          },
          "searchQueryTypeKey": {
            "minLength": 1,
            "enum": [
              "basic",
              "advanced",
              "empty",
              "detail_basic",
              "detail_advanced",
              "detail_empty",
              "desc_basic",
              "desc_advanced",
              "desc_empty",
              "data"
            ],
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchQueryDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchQueryUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "searchQuery": {
            "type": "string",
            "nullable": true
          },
          "searchQueryTypeKey": {
            "enum": [
              "basic",
              "advanced",
              "empty",
              "detail_basic",
              "detail_advanced",
              "detail_empty",
              "desc_basic",
              "desc_advanced",
              "desc_empty",
              "data"
            ],
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchTemplateFacetedAddVM": {
        "required": [
          "action",
          "enumKey",
          "enumKeyType"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "defaultCollapsed": {
            "type": "boolean",
            "nullable": true
          },
          "elementType": {
            "enum": [
              "valueList"
            ],
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKeyType": {
            "minLength": 1,
            "enum": [
              "application",
              "objectType",
              "space",
              "attribute",
              "relation",
              "userRelation",
              "codelist",
              "modelChanges",
              "script",
              "mr_data",
              "workflowState",
              "creator",
              "addRelation",
              "domainTypes"
            ],
            "type": "string"
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "maxBucketCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderBucketsReverse": {
            "type": "boolean",
            "nullable": true
          },
          "orderBucketsType": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchTemplateFacetedParameterVM"
            },
            "nullable": true
          },
          "primaryResultText": {
            "type": "boolean",
            "nullable": true
          },
          "showSelectAllValuesCheckBox": {
            "type": "boolean",
            "nullable": true
          },
          "subFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchTemplateFacetedBaseVM"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "valueType": {
            "enum": [
              "none",
              "isText",
              "isTranslationKey",
              "isBoolean",
              "isNumber",
              "isDate",
              "isDateTime"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchTemplateFacetedDeleteVM": {
        "required": [
          "action",
          "enumKey",
          "enumKeyType"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKeyType": {
            "minLength": 1,
            "enum": [
              "application",
              "objectType",
              "space",
              "attribute",
              "relation",
              "userRelation",
              "codelist",
              "modelChanges",
              "script",
              "mr_data",
              "workflowState",
              "creator",
              "addRelation",
              "domainTypes"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchTemplateFacetedParameterAddVM": {
        "required": [
          "action",
          "enumKey",
          "enumKeyType"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKeyType": {
            "minLength": 1,
            "enum": [
              "application",
              "objectType",
              "space",
              "attribute",
              "relation",
              "userRelation",
              "codelist",
              "modelChanges",
              "script",
              "mr_data",
              "workflowState",
              "creator",
              "addRelation",
              "domainTypes"
            ],
            "type": "string"
          },
          "valueType": {
            "enum": [
              "none",
              "isText",
              "isTranslationKey",
              "isBoolean",
              "isNumber",
              "isDate",
              "isDateTime"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchTemplateFacetedParameterDeleteVM": {
        "required": [
          "action",
          "enumKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchTemplateFacetedParameterUpdateVM": {
        "required": [
          "action",
          "enumKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKeyType": {
            "enum": [
              "application",
              "objectType",
              "space",
              "attribute",
              "relation",
              "userRelation",
              "codelist",
              "modelChanges",
              "script",
              "mr_data",
              "workflowState",
              "creator",
              "addRelation",
              "domainTypes"
            ],
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "enum": [
              "none",
              "isText",
              "isTranslationKey",
              "isBoolean",
              "isNumber",
              "isDate",
              "isDateTime"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchTemplateFacetedReferenceVM": {
        "required": [
          "enumKey",
          "enumKeyType"
        ],
        "type": "object",
        "properties": {
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKeyType": {
            "minLength": 1,
            "enum": [
              "application",
              "objectType",
              "space",
              "attribute",
              "relation",
              "userRelation",
              "codelist",
              "modelChanges",
              "script",
              "mr_data",
              "workflowState",
              "creator",
              "addRelation",
              "domainTypes"
            ],
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchSearchTemplateFacetedParameterAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchTemplateFacetedParameterDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchTemplateFacetedParameterUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "subFacets": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchSearchTemplateFacetedReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchTemplateFacetedAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchTemplateFacetedDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchTemplateFacetedUpdateVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchSearchTemplateFacetedUpdateVM": {
        "required": [
          "action",
          "enumKey",
          "enumKeyType"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "defaultCollapsed": {
            "type": "boolean",
            "nullable": true
          },
          "elementType": {
            "enum": [
              "valueList"
            ],
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKeyType": {
            "enum": [
              "application",
              "objectType",
              "space",
              "attribute",
              "relation",
              "userRelation",
              "codelist",
              "modelChanges",
              "script",
              "mr_data",
              "workflowState",
              "creator",
              "addRelation",
              "domainTypes"
            ],
            "type": "string"
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "maxBucketCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderBucketsReverse": {
            "type": "boolean",
            "nullable": true
          },
          "orderBucketsType": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchTemplateFacetedParameterVM"
            },
            "nullable": true
          },
          "primaryResultText": {
            "type": "boolean",
            "nullable": true
          },
          "showSelectAllValuesCheckBox": {
            "type": "boolean",
            "nullable": true
          },
          "subFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchTemplateFacetedBaseVM"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "valueType": {
            "enum": [
              "none",
              "isText",
              "isTranslationKey",
              "isBoolean",
              "isNumber",
              "isDate",
              "isDateTime"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchTranslationAddVM": {
        "required": [
          "action",
          "key",
          "values"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgTranslationValueVM"
            }
          }
        },
        "additionalProperties": false
      },
      "PkgPatchTranslationDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchTranslationReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchTranslationValueAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchTranslationValueDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchTranslationValueUpdateVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchTranslationUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgTranslationValueVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchTranslationValueAddVM": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "languageKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchTranslationValueDeleteVM": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "languageKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchTranslationValueUpdateVM": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "languageKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchUserRelationTypeAddVM": {
        "required": [
          "action",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_searchable_attribute",
                        "is_mandatory",
                        "is_space_inheritable",
                        "is_parent_object_inheritable",
                        "force_comment",
                        "is_dependency_change",
                        "can_change_impact_analysis",
                        "is_user_object_relation_type_admin",
                        "is_user_object_relation_type_steward",
                        "is_user_object_relation_type_business_owner",
                        "is_user_object_relation_type_private_space_owner",
                        "is_not_versioned",
                        "is_not_presented_in_changes",
                        "is_default_user_space_relation",
                        "is_single_value",
                        "disable_excel_template_export",
                        "is_allowed_to_move_in_move_object_based_on_role",
                        "can_be_shown_in_diagram",
                        "is_user_object_relation_type_favourite",
                        "is_user_object_relation_type_watch",
                        "is_user_object_relation_type_shared_with_me",
                        "is_user_object_relation_type_liked",
                        "is_user_object_relation_type_disliked"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationUserRelationTypeVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchUserRelationTypeDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchUserRelationTypeObjectConditionAddVM": {
        "required": [
          "action",
          "objectTypeKey",
          "unlockedUserRelationTypeKey",
          "userRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "unlockedUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "userRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "workflowStateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchUserRelationTypeObjectConditionDeleteVM": {
        "required": [
          "action",
          "objectTypeKey",
          "unlockedUserRelationTypeKey",
          "userRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "unlockedUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "userRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "workflowStateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchUserRelationTypeReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_searchable_attribute",
                        "is_mandatory",
                        "is_space_inheritable",
                        "is_parent_object_inheritable",
                        "force_comment",
                        "is_dependency_change",
                        "can_change_impact_analysis",
                        "is_user_object_relation_type_admin",
                        "is_user_object_relation_type_steward",
                        "is_user_object_relation_type_business_owner",
                        "is_user_object_relation_type_private_space_owner",
                        "is_not_versioned",
                        "is_not_presented_in_changes",
                        "is_default_user_space_relation",
                        "is_single_value",
                        "disable_excel_template_export",
                        "is_allowed_to_move_in_move_object_based_on_role",
                        "can_be_shown_in_diagram",
                        "is_user_object_relation_type_favourite",
                        "is_user_object_relation_type_watch",
                        "is_user_object_relation_type_shared_with_me",
                        "is_user_object_relation_type_liked",
                        "is_user_object_relation_type_disliked"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "add",
                        "update"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                {
                  "required": [
                    "key",
                    "action"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_searchable_attribute",
                        "is_mandatory",
                        "is_space_inheritable",
                        "is_parent_object_inheritable",
                        "force_comment",
                        "is_dependency_change",
                        "can_change_impact_analysis",
                        "is_user_object_relation_type_admin",
                        "is_user_object_relation_type_steward",
                        "is_user_object_relation_type_business_owner",
                        "is_user_object_relation_type_private_space_owner",
                        "is_not_versioned",
                        "is_not_presented_in_changes",
                        "is_default_user_space_relation",
                        "is_single_value",
                        "disable_excel_template_export",
                        "is_allowed_to_move_in_move_object_based_on_role",
                        "can_be_shown_in_diagram",
                        "is_user_object_relation_type_favourite",
                        "is_user_object_relation_type_watch",
                        "is_user_object_relation_type_shared_with_me",
                        "is_user_object_relation_type_liked",
                        "is_user_object_relation_type_disliked",
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "action": {
                      "minLength": 1,
                      "enum": [
                        "delete"
                      ],
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchUserRelationTypeUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_searchable_attribute",
                        "is_mandatory",
                        "is_space_inheritable",
                        "is_parent_object_inheritable",
                        "force_comment",
                        "is_dependency_change",
                        "can_change_impact_analysis",
                        "is_user_object_relation_type_admin",
                        "is_user_object_relation_type_steward",
                        "is_user_object_relation_type_business_owner",
                        "is_user_object_relation_type_private_space_owner",
                        "is_not_versioned",
                        "is_not_presented_in_changes",
                        "is_default_user_space_relation",
                        "is_single_value",
                        "disable_excel_template_export",
                        "is_allowed_to_move_in_move_object_based_on_role",
                        "can_be_shown_in_diagram",
                        "is_user_object_relation_type_favourite",
                        "is_user_object_relation_type_watch",
                        "is_user_object_relation_type_shared_with_me",
                        "is_user_object_relation_type_liked",
                        "is_user_object_relation_type_disliked"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationUserRelationTypeVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowAddVM": {
        "required": [
          "action",
          "initStateKey",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "diagramContent": {
            "type": "string",
            "nullable": true
          },
          "diagramContentType": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "initStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          },
          "isEmpty": {
            "type": "boolean",
            "nullable": true
          },
          "isSelectable": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "transitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgWorkflowStateTransitionVM"
            },
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowNotificationAddVM": {
        "required": [
          "action",
          "notificationTemplateKey",
          "recipientUserRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "notificationTemplateKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "recipientUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowNotificationDeleteVM": {
        "required": [
          "action",
          "notificationTemplateKey",
          "recipientUserRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "notificationTemplateKey": {
            "minLength": 1,
            "type": "string"
          },
          "recipientUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowNotificationUpdateVM": {
        "required": [
          "action",
          "notificationTemplateKey",
          "recipientUserRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "notificationTemplateKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "recipientUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "transitions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowStateTransitionReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowStateTransitionAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowStateTransitionDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowStateTransitionUpdateVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowStateAddVM": {
        "required": [
          "action",
          "colorKey",
          "iconKey",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "childCreationConditionallyDisabled": {
            "type": "boolean",
            "nullable": true
          },
          "colorKey": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "iconKey": {
            "minLength": 1,
            "type": "string"
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "userRelationTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowStateDeleteVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowStateReferenceVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "userRelationTypeKeys": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgWorkflowStateUserRelationTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgWorkflowStateUserRelationTypeDeleteVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowStateTransitionAddVM": {
        "required": [
          "action",
          "fromStateKey",
          "toStateKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "changeThresholdTypeKey": {
            "enum": [
              "one_user",
              "all_users_one_from_groups",
              "all_users_all_from_groups"
            ],
            "type": "string",
            "nullable": true
          },
          "fromStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgWorkflowNotificationVM"
            },
            "nullable": true
          },
          "toStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "triggers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgWorkflowTransitionTriggerVM"
            },
            "nullable": true
          },
          "userRelationTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowStateTransitionDeleteVM": {
        "required": [
          "action",
          "fromStateKey",
          "toStateKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "fromStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "toStateKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowStateTransitionReferenceVM": {
        "required": [
          "fromStateKey",
          "toStateKey"
        ],
        "type": "object",
        "properties": {
          "fromStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowNotificationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowNotificationDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowNotificationUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "toStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchEntityTranslationUpdateVM"
                }
              ]
            },
            "nullable": true
          },
          "triggers": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowTransitionTriggerAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowTransitionTriggerDeleteVM"
                }
              ]
            },
            "nullable": true
          },
          "userRelationTypeKeys": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowUserRelationTypeAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchWorkflowUserRelationTypeDeleteVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowStateTransitionUpdateVM": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "changeThresholdTypeKey": {
            "enum": [
              "one_user",
              "all_users_one_from_groups",
              "all_users_all_from_groups"
            ],
            "type": "string",
            "nullable": true
          },
          "fromStateKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgWorkflowNotificationVM"
            },
            "nullable": true
          },
          "toStateKey": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "triggers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgWorkflowTransitionTriggerVM"
            },
            "nullable": true
          },
          "userRelationTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowStateUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "childCreationConditionallyDisabled": {
            "type": "boolean",
            "nullable": true
          },
          "colorKey": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "userRelationTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowTransitionTriggerAddVM": {
        "required": [
          "action",
          "changeUserRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "changeToValueUserRelationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "changeUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pipelineKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "default",
              "to_current_user",
              "select_user_from_allowed"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowTransitionTriggerDeleteVM": {
        "required": [
          "action",
          "changeUserRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "changeToValueUserRelationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "changeUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "pipelineKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "default",
              "to_current_user",
              "select_user_from_allowed"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowTransitionTriggerFullAddVM": {
        "required": [
          "action",
          "changeUserRelationTypeKey",
          "fromStateKey",
          "orderNumber",
          "toStateKey",
          "workflowKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "changeToValueUserRelationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "changeUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "fromStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pipelineKey": {
            "type": "string",
            "nullable": true
          },
          "toStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "enum": [
              "default",
              "to_current_user",
              "select_user_from_allowed"
            ],
            "type": "string",
            "nullable": true
          },
          "workflowKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowTransitionTriggerFullDeleteVM": {
        "required": [
          "action",
          "changeUserRelationTypeKey",
          "fromStateKey",
          "toStateKey",
          "workflowKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "changeToValueUserRelationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "changeUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "fromStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "pipelineKey": {
            "type": "string",
            "nullable": true
          },
          "toStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "enum": [
              "default",
              "to_current_user",
              "select_user_from_allowed"
            ],
            "type": "string",
            "nullable": true
          },
          "workflowKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowTransitionTriggerFullUpdateVM": {
        "required": [
          "action",
          "changeUserRelationTypeKey",
          "fromStateKey",
          "orderNumber",
          "toStateKey"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "changeToValueUserRelationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "changeUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "fromStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pipelineKey": {
            "type": "string",
            "nullable": true
          },
          "toStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "enum": [
              "default",
              "to_current_user",
              "select_user_from_allowed"
            ],
            "type": "string",
            "nullable": true
          },
          "workflowKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowUpdateVM": {
        "required": [
          "action",
          "key"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "diagramContent": {
            "type": "string",
            "nullable": true
          },
          "diagramContentType": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "initStateKey": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          },
          "isEmpty": {
            "type": "boolean",
            "nullable": true
          },
          "isSelectable": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "transitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgWorkflowStateTransitionVM"
            },
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowUserRelationTypeAddVM": {
        "required": [
          "action",
          "value"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgPatchWorkflowUserRelationTypeDeleteVM": {
        "required": [
          "action",
          "value"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgQueryColumnVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "columnIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "expression": {
            "type": "string",
            "nullable": true
          },
          "isFromKey": {
            "type": "boolean",
            "nullable": true
          },
          "isKey": {
            "type": "boolean",
            "nullable": true
          },
          "isParentKey": {
            "type": "boolean",
            "nullable": true
          },
          "isRelationType": {
            "type": "boolean",
            "nullable": true
          },
          "isSortOrder": {
            "type": "boolean",
            "nullable": true
          },
          "isToKey": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "sourceDataType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgQueryMappingQueryColumnVM": {
        "required": [
          "attributeTypeKey",
          "columnKey"
        ],
        "type": "object",
        "properties": {
          "attributeTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "columnKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgQueryMappingQueryVM": {
        "required": [
          "columns",
          "creationOrder",
          "objectTypeKey",
          "queryKey",
          "querySetKey"
        ],
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgQueryMappingQueryColumnVM"
            }
          },
          "creationOrder": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "parentObjectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "queryKey": {
            "minLength": 1,
            "type": "string"
          },
          "querySetKey": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgQueryMappingVM": {
        "required": [
          "key",
          "name",
          "queries"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "queries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgQueryMappingQueryVM"
            }
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgQueryPropertyVM": {
        "type": "object",
        "properties": {
          "temporaryTableName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgQuerySetVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "queries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgQueryVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgQueryVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgQueryColumnVM"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "$ref": "#/components/schemas/PkgQueryPropertyVM"
          },
          "statement": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgRCommentTypeCategoryApplicationVM": {
        "required": [
          "applicationKey",
          "commentTypeCategoryKey"
        ],
        "type": "object",
        "properties": {
          "applicationKey": {
            "minLength": 1,
            "type": "string"
          },
          "commentTypeCategoryKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgRelationTypeCategoryVM": {
        "required": [
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgRelationTypeConditionVM": {
        "required": [
          "objectTypeKey",
          "unlockedRelationTypeKey",
          "userRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "unlockedRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "userRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "workflowStateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgRelationTypeGraphRelationTypeVM": {
        "required": [
          "lineDisplayTypeKey",
          "metamodelKey"
        ],
        "type": "object",
        "properties": {
          "lineDisplayTypeKey": {
            "minLength": 1,
            "enum": [
              "data_lineage",
              "foreign_key",
              "knowledge_relation",
              "knowledge_parent",
              "indirect_flow"
            ],
            "type": "string"
          },
          "metamodelKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgRelationTypeObjectFeatureVM": {
        "required": [
          "feature",
          "objectTypeKey",
          "relationTypeKey"
        ],
        "type": "object",
        "properties": {
          "feature": {
            "oneOf": [
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "is_generated_by_keyword",
                      "is_searchable_attribute",
                      "is_self_targetable",
                      "is_generated_by_exactMatch",
                      "force_comment",
                      "is_dependency",
                      "is_dependency_change",
                      "is_mandatory",
                      "is_implicit",
                      "is_relation_type_child_of",
                      "is_relation_type_parent_of",
                      "is_relation_type_referencing",
                      "is_relation_type_referenced_by",
                      "is_relation_type_in_diagram",
                      "is_relation_type_diagram_contains",
                      "is_relation_type_using_text_of",
                      "is_relation_type_used_text_in",
                      "is_relation_type_text_based_on",
                      "is_relation_type_text_based_in",
                      "is_relation_type_synonym_of",
                      "is_relation_type_acronym_of",
                      "is_relation_type_has_acronym",
                      "is_relation_type_has_domain",
                      "is_relation_type_domain_of",
                      "is_single_value",
                      "is_parent_inheritable",
                      "is_foreign_key",
                      "is_stereotype",
                      "include_in_ai_summary",
                      "is_creatable_on_child_add",
                      "is_relation_space_of",
                      "is_relation_in_space",
                      "is_not_presented_in_changes",
                      "can_be_shown_in_diagram",
                      "is_domain_of"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              },
              {
                "required": [
                  "key"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "minLength": 1,
                    "enum": [
                      "fullness_score_value"
                    ],
                    "type": "string",
                    "readOnly": true
                  },
                  "value": {
                    "type": "number",
                    "format": "double",
                    "nullable": true
                  }
                }
              }
            ]
          },
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "relationTypeKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgRelationTypeVM": {
        "required": [
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "categoryKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_generated_by_keyword",
                        "is_searchable_attribute",
                        "is_self_targetable",
                        "is_generated_by_exactMatch",
                        "force_comment",
                        "is_dependency",
                        "is_dependency_change",
                        "is_mandatory",
                        "is_implicit",
                        "is_relation_type_child_of",
                        "is_relation_type_parent_of",
                        "is_relation_type_referencing",
                        "is_relation_type_referenced_by",
                        "is_relation_type_in_diagram",
                        "is_relation_type_diagram_contains",
                        "is_relation_type_using_text_of",
                        "is_relation_type_used_text_in",
                        "is_relation_type_text_based_on",
                        "is_relation_type_text_based_in",
                        "is_relation_type_synonym_of",
                        "is_relation_type_acronym_of",
                        "is_relation_type_has_acronym",
                        "is_relation_type_has_domain",
                        "is_relation_type_domain_of",
                        "is_single_value",
                        "is_parent_inheritable",
                        "is_foreign_key",
                        "is_stereotype",
                        "include_in_ai_summary",
                        "is_creatable_on_child_add",
                        "is_relation_space_of",
                        "is_relation_in_space",
                        "is_not_presented_in_changes",
                        "can_be_shown_in_diagram",
                        "is_domain_of"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "graphLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgRelationTypeGraphRelationTypeVM"
            },
            "nullable": true
          },
          "isOriented": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationRelationTypeVM"
            },
            "nullable": true
          },
          "reverseKey": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgSearchFormVM": {
        "required": [
          "iconKey",
          "key",
          "searchIndexKey",
          "template"
        ],
        "type": "object",
        "properties": {
          "iconKey": {
            "minLength": 1,
            "type": "string"
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "replaceSynonyms": {
            "type": "boolean",
            "nullable": true
          },
          "searchIndexKey": {
            "minLength": 1,
            "type": "string"
          },
          "searchQueryKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "template": {
            "$ref": "#/components/schemas/PkgFacetedSearchDefinitionVM"
          }
        },
        "additionalProperties": false
      },
      "PkgSearchIndexSettingsVM": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/SearchIndexSettingsVM"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgSearchIndexVM": {
        "required": [
          "indexName",
          "key"
        ],
        "type": "object",
        "properties": {
          "indexName": {
            "minLength": 1,
            "type": "string"
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "searchIndexSettingsKey": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgSearchPatchTemplateVM": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchSearchTemplateFacetedReferenceVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchTemplateFacetedAddVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchTemplateFacetedDeleteVM"
                },
                {
                  "$ref": "#/components/schemas/PkgPatchSearchTemplateFacetedUpdateVM"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgSearchQueryVM": {
        "required": [
          "key",
          "searchQuery",
          "searchQueryTypeKey"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "searchQuery": {
            "minLength": 1,
            "type": "string"
          },
          "searchQueryTypeKey": {
            "minLength": 1,
            "enum": [
              "basic",
              "advanced",
              "empty",
              "detail_basic",
              "detail_advanced",
              "detail_empty",
              "desc_basic",
              "desc_advanced",
              "desc_empty",
              "data"
            ],
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgSearchTemplateFacetedBaseVM": {
        "required": [
          "enumKey",
          "enumKeyType"
        ],
        "type": "object",
        "properties": {
          "defaultCollapsed": {
            "type": "boolean",
            "nullable": true
          },
          "elementType": {
            "enum": [
              "valueList"
            ],
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKeyType": {
            "minLength": 1,
            "enum": [
              "application",
              "objectType",
              "space",
              "attribute",
              "relation",
              "userRelation",
              "codelist",
              "modelChanges",
              "script",
              "mr_data",
              "workflowState",
              "creator",
              "addRelation",
              "domainTypes"
            ],
            "type": "string"
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "maxBucketCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderBucketsReverse": {
            "type": "boolean",
            "nullable": true
          },
          "orderBucketsType": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchTemplateFacetedParameterVM"
            },
            "nullable": true
          },
          "primaryResultText": {
            "type": "boolean",
            "nullable": true
          },
          "showSelectAllValuesCheckBox": {
            "type": "boolean",
            "nullable": true
          },
          "subFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchTemplateFacetedBaseVM"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "valueType": {
            "enum": [
              "none",
              "isText",
              "isTranslationKey",
              "isBoolean",
              "isNumber",
              "isDate",
              "isDateTime"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgSearchTemplateFacetedParameterVM": {
        "required": [
          "enumKey",
          "enumKeyType"
        ],
        "type": "object",
        "properties": {
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKeyType": {
            "minLength": 1,
            "enum": [
              "application",
              "objectType",
              "space",
              "attribute",
              "relation",
              "userRelation",
              "codelist",
              "modelChanges",
              "script",
              "mr_data",
              "workflowState",
              "creator",
              "addRelation",
              "domainTypes"
            ],
            "type": "string"
          },
          "valueType": {
            "enum": [
              "none",
              "isText",
              "isTranslationKey",
              "isBoolean",
              "isNumber",
              "isDate",
              "isDateTime"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgSearchTemplateFacetedVM": {
        "required": [
          "enumKey",
          "enumKeyType"
        ],
        "type": "object",
        "properties": {
          "defaultCollapsed": {
            "type": "boolean",
            "nullable": true
          },
          "elementType": {
            "enum": [
              "valueList"
            ],
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKeyType": {
            "minLength": 1,
            "enum": [
              "application",
              "objectType",
              "space",
              "attribute",
              "relation",
              "userRelation",
              "codelist",
              "modelChanges",
              "script",
              "mr_data",
              "workflowState",
              "creator",
              "addRelation",
              "domainTypes"
            ],
            "type": "string"
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iconKey": {
            "type": "string",
            "nullable": true
          },
          "maxBucketCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderBucketsReverse": {
            "type": "boolean",
            "nullable": true
          },
          "orderBucketsType": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchTemplateFacetedParameterVM"
            },
            "nullable": true
          },
          "primaryResultText": {
            "type": "boolean",
            "nullable": true
          },
          "showSelectAllValuesCheckBox": {
            "type": "boolean",
            "nullable": true
          },
          "subFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchTemplateFacetedBaseVM"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "valueType": {
            "enum": [
              "none",
              "isText",
              "isTranslationKey",
              "isBoolean",
              "isNumber",
              "isDate",
              "isDateTime"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgSearchTemplateVM": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchTemplateFacetedVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgSearchVM": {
        "required": [
          "isSearchable"
        ],
        "type": "object",
        "properties": {
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "attributeTypeKey": {
            "type": "string",
            "nullable": true
          },
          "boost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "functionKey": {
            "type": "string",
            "nullable": true
          },
          "indexKey": {
            "type": "string",
            "nullable": true
          },
          "isSearchable": {
            "type": "boolean"
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "searchAttachments": {
            "type": "boolean",
            "nullable": true
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          },
          "tagKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgSettingVM": {
        "type": "object",
        "properties": {
          "createAssetMappingsForExistingAssets": {
            "type": "boolean",
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationVM"
            },
            "nullable": true
          },
          "search": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgSearchVM"
            },
            "nullable": true
          },
          "useDefaultTranslationsNamespace": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgSpaceApplicationVM": {
        "required": [
          "spacePath",
          "workflowKey"
        ],
        "type": "object",
        "properties": {
          "settings": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "hide_comment_section",
                        "read_only_hierarchy",
                        "object_not_creatable",
                        "snapshot_enabled",
                        "word_export_enabled",
                        "excel_export_enabled",
                        "pdf_export_enabled",
                        "excel_import_enabled",
                        "versioning_on_sort_order_enabled",
                        "change_analysis_enabled",
                        "disable_change_of_numbering",
                        "disable_sort_objects",
                        "has_token_keywords",
                        "has_token_texts",
                        "check_exact_match",
                        "exact_match_spaces",
                        "disable_duplicate_validation_for_spaceapp",
                        "force_confirmation_after_object_move",
                        "copy_paste_as_plaintext_like",
                        "object_workflow_space_admin_as_regular_user",
                        "move_object_based_on_role"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "order_number"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "integer",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "object_ladder_numbering_pattern",
                        "changed_text_color",
                        "deleted_text_color"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "excel_import_settings"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "$ref": "#/components/schemas/ImportSettingsBase"
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "excel_export_settings"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "$ref": "#/components/schemas/ExportSettingsBase"
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "external_loads"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "$ref": "#/components/schemas/ExternalLoadsSettingsBase"
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "token_keyword_spaces",
                        "token_keyword_apps"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "spacePath": {
            "minLength": 1,
            "type": "string"
          },
          "workflowKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgTranslationVM": {
        "required": [
          "key",
          "values"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgTranslationValueVM"
            }
          }
        },
        "additionalProperties": false
      },
      "PkgTranslationValueVM": {
        "type": "object",
        "properties": {
          "languageKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgUserRelationTypeObjectConditionVM": {
        "required": [
          "objectTypeKey",
          "unlockedUserRelationTypeKey",
          "userRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "objectTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "unlockedUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "userRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "workflowStateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgUserRelationTypeVM": {
        "required": [
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "is_searchable_attribute",
                        "is_mandatory",
                        "is_space_inheritable",
                        "is_parent_object_inheritable",
                        "force_comment",
                        "is_dependency_change",
                        "can_change_impact_analysis",
                        "is_user_object_relation_type_admin",
                        "is_user_object_relation_type_steward",
                        "is_user_object_relation_type_business_owner",
                        "is_user_object_relation_type_private_space_owner",
                        "is_not_versioned",
                        "is_not_presented_in_changes",
                        "is_default_user_space_relation",
                        "is_single_value",
                        "disable_excel_template_export",
                        "is_allowed_to_move_in_move_object_based_on_role",
                        "can_be_shown_in_diagram",
                        "is_user_object_relation_type_favourite",
                        "is_user_object_relation_type_watch",
                        "is_user_object_relation_type_shared_with_me",
                        "is_user_object_relation_type_liked",
                        "is_user_object_relation_type_disliked"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "boolean",
                      "nullable": true
                    }
                  }
                },
                {
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "properties": {
                    "key": {
                      "minLength": 1,
                      "enum": [
                        "fullness_score_value"
                      ],
                      "type": "string",
                      "readOnly": true
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    }
                  }
                }
              ]
            },
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgNotificationUserRelationTypeVM"
            },
            "nullable": true
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgWorkflowNotificationVM": {
        "required": [
          "notificationTemplateKey",
          "recipientUserRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "applicationKey": {
            "type": "string",
            "nullable": true
          },
          "notificationTemplateKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "recipientUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "spacePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgWorkflowStateTransitionVM": {
        "required": [
          "fromStateKey",
          "toStateKey"
        ],
        "type": "object",
        "properties": {
          "changeThresholdTypeKey": {
            "enum": [
              "one_user",
              "all_users_one_from_groups",
              "all_users_all_from_groups"
            ],
            "type": "string",
            "nullable": true
          },
          "fromStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgWorkflowNotificationVM"
            },
            "nullable": true
          },
          "toStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "triggers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgWorkflowTransitionTriggerVM"
            },
            "nullable": true
          },
          "userRelationTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgWorkflowStateUserRelationTypeAddVM": {
        "required": [
          "action",
          "value"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgWorkflowStateUserRelationTypeDeleteVM": {
        "required": [
          "action",
          "value"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "delete"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgWorkflowStateVM": {
        "required": [
          "colorKey",
          "iconKey",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "childCreationConditionallyDisabled": {
            "type": "boolean",
            "nullable": true
          },
          "colorKey": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "iconKey": {
            "minLength": 1,
            "type": "string"
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          },
          "userRelationTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgWorkflowTransitionTriggerFullVM": {
        "required": [
          "changeUserRelationTypeKey",
          "fromStateKey",
          "orderNumber",
          "toStateKey",
          "workflowKey"
        ],
        "type": "object",
        "properties": {
          "changeToValueUserRelationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "changeUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "fromStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pipelineKey": {
            "type": "string",
            "nullable": true
          },
          "toStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "enum": [
              "default",
              "to_current_user",
              "select_user_from_allowed"
            ],
            "type": "string",
            "nullable": true
          },
          "workflowKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PkgWorkflowTransitionTriggerVM": {
        "required": [
          "changeUserRelationTypeKey"
        ],
        "type": "object",
        "properties": {
          "changeToValueUserRelationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "changeUserRelationTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pipelineKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "default",
              "to_current_user",
              "select_user_from_allowed"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PkgWorkflowVM": {
        "required": [
          "initStateKey",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "diagramContent": {
            "type": "string",
            "nullable": true
          },
          "diagramContentType": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "initStateKey": {
            "minLength": 1,
            "type": "string"
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          },
          "isEmpty": {
            "type": "boolean",
            "nullable": true
          },
          "isSelectable": {
            "type": "boolean",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "enum": [
              "active",
              "inactive",
              "in-validation",
              "hidden"
            ],
            "type": "string",
            "nullable": true
          },
          "transitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgWorkflowStateTransitionVM"
            },
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PkgEntityTranslationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "PullRequestComment": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PullRequestFilter": {
        "type": "object",
        "properties": {
          "fromBasedOnModelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromBasedOnVersionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromBranchName": {
            "type": "string",
            "nullable": true
          },
          "modelsCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pullRequestCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pullRequestCreator": {
            "type": "string",
            "nullable": true
          },
          "pullRequestCreatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pullRequestName": {
            "type": "string",
            "nullable": true
          },
          "pullRequestStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toBasedOnModelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toBasedOnVersionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toBranchName": {
            "type": "string",
            "nullable": true
          },
          "versionsCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PullRequestFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/PullRequestFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PullRequestPermissionInfo": {
        "required": [
          "canCancel",
          "canPropagate",
          "canRead"
        ],
        "type": "object",
        "properties": {
          "canCancel": {
            "type": "boolean"
          },
          "canPropagate": {
            "type": "boolean"
          },
          "canRead": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PullRequestSummaryVM": {
        "required": [
          "branchId",
          "fromBranchId",
          "modelId",
          "pullRequestId",
          "pullRequestStateId",
          "toBranchId",
          "versionsCount"
        ],
        "type": "object",
        "properties": {
          "approved": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "approver": {
            "type": "string",
            "nullable": true
          },
          "approverColorHex": {
            "type": "string",
            "nullable": true
          },
          "approverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "modelId": {
            "type": "integer",
            "format": "int32"
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "pullRequestId": {
            "type": "integer",
            "format": "int32"
          },
          "pullRequestingToVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pullRequestStateId": {
            "type": "integer",
            "format": "int32"
          },
          "resolved": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolver": {
            "type": "string",
            "nullable": true
          },
          "resolverColorHex": {
            "type": "string",
            "nullable": true
          },
          "resolverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "versionsCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PullRequestVM": {
        "required": [
          "modelsCount",
          "pullRequestId",
          "versionsCount"
        ],
        "type": "object",
        "properties": {
          "fromBasedOnModelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromBasedOnVersionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromBranchName": {
            "type": "string",
            "nullable": true
          },
          "modelsCount": {
            "type": "integer",
            "format": "int32"
          },
          "pullRequestCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pullRequestCreator": {
            "type": "string",
            "nullable": true
          },
          "pullRequestCreatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "pullRequestCreatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pullRequestId": {
            "type": "integer",
            "format": "int32"
          },
          "pullRequestName": {
            "type": "string",
            "nullable": true
          },
          "pullRequestStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toBasedOnModelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toBasedOnVersionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toBranchName": {
            "type": "string",
            "nullable": true
          },
          "versionsCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PullRequestVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PullRequestVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PwdModelChangesSettings": {
        "required": [
          "changesLimit"
        ],
        "type": "object",
        "properties": {
          "changesLimit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PwdWorkerSettings": {
        "required": [
          "generateTransactionLogs",
          "maxNumberOfGettingPwdInstanceRetries",
          "retrieveComparisonActionsTimeout",
          "retrieveModelTimeout",
          "taskTimeout"
        ],
        "type": "object",
        "properties": {
          "generateTransactionLogs": {
            "type": "boolean"
          },
          "maxNumberOfGettingPwdInstanceRetries": {
            "type": "integer",
            "format": "int32"
          },
          "pdmFileFormat": {
            "type": "string",
            "nullable": true
          },
          "pwdProcessName": {
            "type": "string",
            "nullable": true
          },
          "retrieveComparisonActionsTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "retrieveModelTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "taskTimeout": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RAttributeTypeConditionVM": {
        "required": [
          "attributeTypeConditionId",
          "objectTypeId",
          "unlockedAttributeTypeId",
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeConditionId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "unlockedAttributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RObjectAttributeAddVM": {
        "required": [
          "attributeTypeId",
          "hasUserAutoFill",
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "hasUserAutoFill": {
            "type": "boolean"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RObjectAttributeDeleteVM": {
        "required": [
          "attributeTypeId",
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RObjectAttributeVM": {
        "required": [
          "attributeTypeId",
          "hasUserAutofill",
          "isReadOnly"
        ],
        "type": "object",
        "properties": {
          "attributeTypeDescriptionKey": {
            "type": "string",
            "nullable": true
          },
          "attributeTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "hasUserAutofill": {
            "type": "boolean"
          },
          "isReadOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RObjectInApplicationAddVM": {
        "required": [
          "applicationId",
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RObjectInApplicationDeleteVM": {
        "required": [
          "applicationId",
          "objectTypeId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RObjectRelationTypeAddVM": {
        "required": [
          "fromObjectTypeId",
          "relationTypeId",
          "toObjectTypeId"
        ],
        "type": "object",
        "properties": {
          "fromObjectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RObjectRelationTypeDeleteVM": {
        "required": [
          "fromObjectTypeId",
          "relationTypeId",
          "toObjectTypeId"
        ],
        "type": "object",
        "properties": {
          "fromObjectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RObjectRelationTypeEditVM": {
        "required": [
          "fromObjectTypeIdNew",
          "fromObjectTypeIdOld",
          "relationTypeIdNew",
          "relationTypeIdOld",
          "toObjectTypeIdNew",
          "toObjectTypeIdOld"
        ],
        "type": "object",
        "properties": {
          "fromObjectTypeIdNew": {
            "type": "integer",
            "format": "int32"
          },
          "fromObjectTypeIdOld": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeIdNew": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeIdOld": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectTypeIdNew": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectTypeIdOld": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RObjectRelationTypeFilter": {
        "type": "object",
        "properties": {
          "fromObjectTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "fromObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromObjectTypeNameEn": {
            "type": "string",
            "nullable": true
          },
          "fromObjectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "relationTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationTypeNameEn": {
            "type": "string",
            "nullable": true
          },
          "relationTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "toObjectTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "toObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toObjectTypeNameEn": {
            "type": "string",
            "nullable": true
          },
          "toObjectTypeNameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RObjectRelationTypeFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/RObjectRelationTypeFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RObjectRelationTypeVM": {
        "required": [
          "fromObjectTypeId",
          "relationTypeId",
          "toObjectTypeId"
        ],
        "type": "object",
        "properties": {
          "fromObjectTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "fromObjectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "fromObjectTypeNameEn": {
            "type": "string",
            "nullable": true
          },
          "fromObjectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "relationTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeNameEn": {
            "type": "string",
            "nullable": true
          },
          "relationTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "toObjectTypeEnumKey": {
            "type": "string",
            "nullable": true
          },
          "toObjectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectTypeNameEn": {
            "type": "string",
            "nullable": true
          },
          "toObjectTypeNameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RObjectRelationTypeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RObjectRelationTypeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RObjectTypeUserObjectRelationTypeVM": {
        "required": [
          "descriptionKey",
          "enumKey",
          "nameKey",
          "objectTypeId",
          "objectTypeUserObjectRelationTypeId",
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeUserObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RRelationTypeConditionVM": {
        "required": [
          "objectTypeId",
          "relationTypeConditionId",
          "unlockedRelationTypeId",
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeConditionId": {
            "type": "integer",
            "format": "int32"
          },
          "unlockedRelationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RTourFeatureVM": {
        "required": [
          "tourFeatureId",
          "tourFeatureTourId"
        ],
        "type": "object",
        "properties": {
          "tourFeatureId": {
            "type": "integer",
            "format": "int32"
          },
          "tourFeatureNameKey": {
            "type": "string",
            "nullable": true
          },
          "tourFeatureTourId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RTourRoleVM": {
        "required": [
          "roleId",
          "tourRoleId"
        ],
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "roleNameKey": {
            "type": "string",
            "nullable": true
          },
          "tourRoleId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RUserObjectRelationFilter": {
        "required": [
          "objectId",
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "startVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RUserObjectRelationFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/RUserObjectRelationFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RUserObjectRelationTypeConditionVM": {
        "required": [
          "objectTypeId",
          "unlockedUserObjectRelationTypeId",
          "userObjectRelationTypeConditionId",
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "unlockedUserObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "userObjectRelationTypeConditionId": {
            "type": "integer",
            "format": "int32"
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RUserSpaceRelationsFilter": {
        "required": [
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userObjectRelationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "versionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RUserSpaceRelationsFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/RUserSpaceRelationsFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RUserTourStepCreate": {
        "required": [
          "tourIds",
          "tourStepIds"
        ],
        "type": "object",
        "properties": {
          "tourIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "tourStepIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "RUserTourStepFilter": {
        "type": "object",
        "additionalProperties": false
      },
      "RUserTourStepFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/RUserTourStepFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RUserTourStepVM": {
        "required": [
          "tourStepId",
          "tourStepStateId"
        ],
        "type": "object",
        "properties": {
          "tourStepId": {
            "type": "integer",
            "format": "int32"
          },
          "tourStepStateId": {
            "$ref": "#/components/schemas/CTourStepStateEnum"
          }
        },
        "additionalProperties": false
      },
      "RUserTourStepVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RUserTourStepVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawMrCommentVM": {
        "required": [
          "branchId",
          "commentId",
          "creatorId",
          "objectId",
          "stateId"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "commentId": {
            "type": "integer",
            "format": "int32"
          },
          "commentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrCommentTypeVM"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "parentCommentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawPdmColumnMappingVM": {
        "required": [
          "creationTS",
          "modificationTS",
          "overallModificationTS"
        ],
        "type": "object",
        "properties": {
          "columnCode": {
            "type": "string",
            "nullable": true
          },
          "columnMappingComment": {
            "type": "string",
            "nullable": true
          },
          "creationTS": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "extendedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmExtendedAttributeVM"
            },
            "nullable": true
          },
          "mappingCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "originalModelCode": {
            "type": "string",
            "nullable": true
          },
          "overallModificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "ownerModelCode": {
            "type": "string",
            "nullable": true
          },
          "packageCode": {
            "type": "string",
            "nullable": true
          },
          "parentObjectId": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "replicaFlag": {
            "type": "string",
            "nullable": true
          },
          "sourceColumn": {
            "type": "string",
            "nullable": true
          },
          "sourceModel": {
            "type": "string",
            "nullable": true
          },
          "sourceOriginalModel": {
            "type": "string",
            "nullable": true
          },
          "sourceOwnerModelCode": {
            "type": "string",
            "nullable": true
          },
          "sourceTable": {
            "type": "string",
            "nullable": true
          },
          "sourceTableOwner": {
            "type": "string",
            "nullable": true
          },
          "sourceTablePackage": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableOwner": {
            "type": "string",
            "nullable": true
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawPdmColumnVM": {
        "required": [
          "creationTS",
          "isPrimaryKey",
          "modificationTS",
          "overallModificationTS"
        ],
        "type": "object",
        "properties": {
          "columnAnnotation": {
            "type": "string",
            "nullable": true
          },
          "columnCode": {
            "type": "string",
            "nullable": true
          },
          "columnComment": {
            "type": "string",
            "nullable": true
          },
          "columnDataType": {
            "type": "string",
            "nullable": true
          },
          "columnDefaultValue": {
            "type": "string",
            "nullable": true
          },
          "columnDescription": {
            "type": "string",
            "nullable": true
          },
          "columnDisplayed": {
            "type": "string",
            "nullable": true
          },
          "columnFormat": {
            "type": "string",
            "nullable": true
          },
          "columnLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnListOfValues": {
            "type": "string",
            "nullable": true
          },
          "columnLowercase": {
            "type": "string",
            "nullable": true
          },
          "columnMandatory": {
            "type": "string",
            "nullable": true
          },
          "columnMaxValue": {
            "type": "string",
            "nullable": true
          },
          "columnMinValue": {
            "type": "string",
            "nullable": true
          },
          "columnName": {
            "type": "string",
            "nullable": true
          },
          "columnNbr": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnPhysicalOption": {
            "type": "string",
            "nullable": true
          },
          "columnPrecision": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnStereotype": {
            "type": "string",
            "nullable": true
          },
          "columnUnit": {
            "type": "string",
            "nullable": true
          },
          "columnUppercase": {
            "type": "string",
            "nullable": true
          },
          "creationTS": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "domainCode": {
            "type": "string",
            "nullable": true
          },
          "extendedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmExtendedAttributeVM"
            },
            "nullable": true
          },
          "isPrimaryKey": {
            "type": "boolean"
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "overallModificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "ownerModelCode": {
            "type": "string",
            "nullable": true
          },
          "packageCode": {
            "type": "string",
            "nullable": true
          },
          "parentObjectId": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "replicaFlag": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableOwner": {
            "type": "string",
            "nullable": true
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawPdmExtendedAttributeVM": {
        "required": [
          "branchId",
          "objectTypeId",
          "startVersion"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "endVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "extendedAttributeName": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "parentObjectId": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "startVersion": {
            "type": "integer",
            "format": "int32"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawPdmMappingVM": {
        "required": [
          "creationTS",
          "modificationTS",
          "overallModificationTS"
        ],
        "type": "object",
        "properties": {
          "creationTS": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "extendedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmExtendedAttributeVM"
            },
            "nullable": true
          },
          "mappingAnnotation": {
            "type": "string",
            "nullable": true
          },
          "mappingCode": {
            "type": "string",
            "nullable": true
          },
          "mappingComment": {
            "type": "string",
            "nullable": true
          },
          "mappingCriteria": {
            "type": "string",
            "nullable": true
          },
          "mappingDescription": {
            "type": "string",
            "nullable": true
          },
          "mappingName": {
            "type": "string",
            "nullable": true
          },
          "mappingStereotype": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "originalModelCode": {
            "type": "string",
            "nullable": true
          },
          "overallModificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "packageCode": {
            "type": "string",
            "nullable": true
          },
          "parentObjectId": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "replicaFlag": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawPdmModelVM": {
        "required": [
          "creationTS",
          "modificationTS",
          "overallModificationTS"
        ],
        "type": "object",
        "properties": {
          "applicationVersion": {
            "type": "string",
            "nullable": true
          },
          "creationTS": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "defaultDiagram": {
            "type": "string",
            "nullable": true
          },
          "extendedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmExtendedAttributeVM"
            },
            "nullable": true
          },
          "modelAnnotation": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelComment": {
            "type": "string",
            "nullable": true
          },
          "modelDBMS": {
            "type": "string",
            "nullable": true
          },
          "modelDescription": {
            "type": "string",
            "nullable": true
          },
          "modelFilename": {
            "type": "string",
            "nullable": true
          },
          "modelKeywordList": {
            "type": "string",
            "nullable": true
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "modelStereotype": {
            "type": "string",
            "nullable": true
          },
          "modelVersion": {
            "type": "string",
            "nullable": true
          },
          "modificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "overallModificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawPdmPackageVM": {
        "required": [
          "creationTS",
          "modificationTS",
          "overallModificationTS"
        ],
        "type": "object",
        "properties": {
          "creationTS": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "defaultDiagram": {
            "type": "string",
            "nullable": true
          },
          "extendedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmExtendedAttributeVM"
            },
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "overallModificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "packageAnnotation": {
            "type": "string",
            "nullable": true
          },
          "packageCode": {
            "type": "string",
            "nullable": true
          },
          "packageComment": {
            "type": "string",
            "nullable": true
          },
          "packageDescription": {
            "type": "string",
            "nullable": true
          },
          "packageKeywordList": {
            "type": "string",
            "nullable": true
          },
          "packageName": {
            "type": "string",
            "nullable": true
          },
          "parentObject": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawPdmPermissionVM": {
        "required": [
          "branchId",
          "startVersion"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "dbIdentifier": {
            "type": "string",
            "nullable": true
          },
          "dbObject": {
            "type": "string",
            "nullable": true
          },
          "dbObjectType": {
            "type": "string",
            "nullable": true
          },
          "endVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "extendedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmExtendedAttributeVM"
            },
            "nullable": true
          },
          "grantWithOption": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "parentObjectId": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "permissionGrant": {
            "type": "string",
            "nullable": true
          },
          "permissionRevoke": {
            "type": "string",
            "nullable": true
          },
          "revokeWithCascade": {
            "type": "string",
            "nullable": true
          },
          "startVersion": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawPdmReferenceColumnVM": {
        "required": [
          "creationTS",
          "modificationTS",
          "overallModificationTS"
        ],
        "type": "object",
        "properties": {
          "childColumnCode": {
            "type": "string",
            "nullable": true
          },
          "childTableCode": {
            "type": "string",
            "nullable": true
          },
          "childTableOwner": {
            "type": "string",
            "nullable": true
          },
          "childTablePackage": {
            "type": "string",
            "nullable": true
          },
          "creationTS": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "extendedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmExtendedAttributeVM"
            },
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "overallModificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "parentColumnCode": {
            "type": "string",
            "nullable": true
          },
          "parentTableCode": {
            "type": "string",
            "nullable": true
          },
          "parentTableOwner": {
            "type": "string",
            "nullable": true
          },
          "parentTablePackage": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawPdmReferenceVM": {
        "required": [
          "creationTS",
          "modificationTS",
          "overallModificationTS"
        ],
        "type": "object",
        "properties": {
          "childTableCode": {
            "type": "string",
            "nullable": true
          },
          "childTableOwner": {
            "type": "string",
            "nullable": true
          },
          "childTablePackage": {
            "type": "string",
            "nullable": true
          },
          "creationTS": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "extendedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmExtendedAttributeVM"
            },
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "overallModificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "packageCode": {
            "type": "string",
            "nullable": true
          },
          "parentTableCode": {
            "type": "string",
            "nullable": true
          },
          "parentTableOwner": {
            "type": "string",
            "nullable": true
          },
          "parentTablePackage": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "referenceCode": {
            "type": "string",
            "nullable": true
          },
          "referenceGenerated": {
            "type": "string",
            "nullable": true
          },
          "referenceType": {
            "type": "string",
            "nullable": true
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawPdmSourceModelVM": {
        "required": [
          "creationTS",
          "modificationTS",
          "overallModificationTS"
        ],
        "type": "object",
        "properties": {
          "creationTS": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "dataSourceCode": {
            "type": "string",
            "nullable": true
          },
          "extendedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmExtendedAttributeVM"
            },
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "overallModificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "parentObjectId": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "sourceModel": {
            "type": "string",
            "nullable": true
          },
          "sourceModelTargetModelUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawPdmTableMappingVM": {
        "required": [
          "creationTS",
          "modificationTS",
          "overallModificationTS"
        ],
        "type": "object",
        "properties": {
          "creationTS": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "extendedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmExtendedAttributeVM"
            },
            "nullable": true
          },
          "mappingCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "originalModelCode": {
            "type": "string",
            "nullable": true
          },
          "overallModificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "ownerModelCode": {
            "type": "string",
            "nullable": true
          },
          "packageCode": {
            "type": "string",
            "nullable": true
          },
          "parentObjectId": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "replicaFlag": {
            "type": "string",
            "nullable": true
          },
          "sourceModel": {
            "type": "string",
            "nullable": true
          },
          "sourceObjectType": {
            "type": "string",
            "nullable": true
          },
          "sourceOriginalModel": {
            "type": "string",
            "nullable": true
          },
          "sourceOwnerModelCode": {
            "type": "string",
            "nullable": true
          },
          "sourceTable": {
            "type": "string",
            "nullable": true
          },
          "sourceTableOwner": {
            "type": "string",
            "nullable": true
          },
          "sourceTablePackage": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableOwner": {
            "type": "string",
            "nullable": true
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawPdmTableVM": {
        "required": [
          "creationTS",
          "modificationTS",
          "overallModificationTS"
        ],
        "type": "object",
        "properties": {
          "creationTS": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "extendedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmExtendedAttributeVM"
            },
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "originalModelCode": {
            "type": "string",
            "nullable": true
          },
          "overallModificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "ownerModelCode": {
            "type": "string",
            "nullable": true
          },
          "packageCode": {
            "type": "string",
            "nullable": true
          },
          "parentObjectId": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "replicaFlag": {
            "type": "string",
            "nullable": true
          },
          "tableAnnotation": {
            "type": "string",
            "nullable": true
          },
          "tableBeginScript": {
            "type": "string",
            "nullable": true
          },
          "tableCode": {
            "type": "string",
            "nullable": true
          },
          "tableComment": {
            "type": "string",
            "nullable": true
          },
          "tableDescription": {
            "type": "string",
            "nullable": true
          },
          "tableEndScript": {
            "type": "string",
            "nullable": true
          },
          "tableGenerated": {
            "type": "string",
            "nullable": true
          },
          "tableKeywordList": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "tableOwner": {
            "type": "string",
            "nullable": true
          },
          "tablePhysicalOption": {
            "type": "string",
            "nullable": true
          },
          "tablePrimaryKey": {
            "type": "string",
            "nullable": true
          },
          "tableStereotype": {
            "type": "string",
            "nullable": true
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawPdmUserVM": {
        "required": [
          "branchId",
          "startVersion"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "dbms": {
            "type": "string",
            "nullable": true
          },
          "endVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "extendedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmExtendedAttributeVM"
            },
            "nullable": true
          },
          "generated": {
            "type": "string",
            "nullable": true
          },
          "grantValue": {
            "type": "string",
            "nullable": true
          },
          "grantWithOption": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "originalModelCode": {
            "type": "string",
            "nullable": true
          },
          "parentObjectId": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "physicalOptions": {
            "type": "string",
            "nullable": true
          },
          "replicaFlag": {
            "type": "string",
            "nullable": true
          },
          "revokeValue": {
            "type": "string",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "startVersion": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          },
          "userCode": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawPdmViewColumnVM": {
        "required": [
          "creationTS",
          "modificationTS",
          "overallModificationTS",
          "viewColumnNbr"
        ],
        "type": "object",
        "properties": {
          "creationTS": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "extendedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmExtendedAttributeVM"
            },
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "overallModificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "ownerModelCode": {
            "type": "string",
            "nullable": true
          },
          "packageCode": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "replicaFlag": {
            "type": "string",
            "nullable": true
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          },
          "viewCode": {
            "type": "string",
            "nullable": true
          },
          "viewColumnCode": {
            "type": "string",
            "nullable": true
          },
          "viewColumnComment": {
            "type": "string",
            "nullable": true
          },
          "viewColumnDataType": {
            "type": "string",
            "nullable": true
          },
          "viewColumnDisplayed": {
            "type": "string",
            "nullable": true
          },
          "viewColumnExpression": {
            "type": "string",
            "nullable": true
          },
          "viewColumnLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "viewColumnName": {
            "type": "string",
            "nullable": true
          },
          "viewColumnNbr": {
            "type": "integer",
            "format": "int32"
          },
          "viewColumnPrecision": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "viewOwner": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawPdmViewVM": {
        "required": [
          "creationTS",
          "modificationTS",
          "overallModificationTS"
        ],
        "type": "object",
        "properties": {
          "creationTS": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "extendedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawPdmExtendedAttributeVM"
            },
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "originalModelCode": {
            "type": "string",
            "nullable": true
          },
          "overallModificationTS": {
            "type": "string",
            "format": "date-time"
          },
          "ownerModelCode": {
            "type": "string",
            "nullable": true
          },
          "packageCode": {
            "type": "string",
            "nullable": true
          },
          "parentObjectId": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "replicaFlag": {
            "type": "string",
            "nullable": true
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          },
          "viewAnnotation": {
            "type": "string",
            "nullable": true
          },
          "viewBeginScript": {
            "type": "string",
            "nullable": true
          },
          "viewCode": {
            "type": "string",
            "nullable": true
          },
          "viewComment": {
            "type": "string",
            "nullable": true
          },
          "viewDescription": {
            "type": "string",
            "nullable": true
          },
          "viewDisplayed": {
            "type": "string",
            "nullable": true
          },
          "viewEndScript": {
            "type": "string",
            "nullable": true
          },
          "viewGenerated": {
            "type": "string",
            "nullable": true
          },
          "viewName": {
            "type": "string",
            "nullable": true
          },
          "viewOwner": {
            "type": "string",
            "nullable": true
          },
          "viewSQLQuery": {
            "type": "string",
            "nullable": true
          },
          "viewStereotype": {
            "type": "string",
            "nullable": true
          },
          "viewUsage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "viewUserDefined": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RawValueDatabasePatchAddTemplate": {
        "required": [
          "action",
          "attributeTypeKey",
          "key",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "attributeTypeKey": {
            "type": "string"
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "raw-value"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RawValueDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "attributeTypeKey",
          "key",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "attributeTypeKey": {
            "type": "string"
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "raw-value"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RawValueDatabaseTemplate": {
        "required": [
          "attributeTypeKey",
          "key",
          "type"
        ],
        "type": "object",
        "properties": {
          "attributeTypeKey": {
            "type": "string"
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "raw-value"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RawValueOutputTemplate": {
        "required": [
          "subTypeId",
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "subTypeId": {
            "$ref": "#/components/schemas/RawValueSubTypeEnum"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "raw-value"
            ],
            "type": "string",
            "readOnly": true
          },
          "vmAttribute": {
            "$ref": "#/components/schemas/TemplateAttributesValue"
          }
        },
        "additionalProperties": false
      },
      "RawValueSubTypeEnum": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "RawWorkflowStateVM": {
        "required": [
          "colorHex",
          "descriptionKey",
          "enumKey",
          "iconId",
          "nameKey",
          "workflowStateId"
        ],
        "type": "object",
        "properties": {
          "colorHex": {
            "minLength": 1,
            "type": "string"
          },
          "colorHoverHex": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RawWorkflowStateVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawWorkflowStateVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterUserVM": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegistrationByCodeIM": {
        "required": [
          "companyName",
          "dataTeamSizeId",
          "email",
          "fullname",
          "jobPositionId",
          "password",
          "phoneNumber",
          "registrationGuid"
        ],
        "type": "object",
        "properties": {
          "companyName": {
            "minLength": 1,
            "type": "string"
          },
          "dataTeamSizeId": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "fullname": {
            "minLength": 1,
            "type": "string"
          },
          "jobPositionId": {
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string"
          },
          "registrationGuid": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RegistrationByCodeResultVM": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          },
          "tokenType": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RelationAttributesDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "relationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "relation-attributes"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationAttributesDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "relationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "relation-attributes"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationAttributesDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "objectTypeKey": {
            "type": "string",
            "nullable": true
          },
          "relationTypeKey": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "relation-attributes"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationAttributesOutputTemplate": {
        "required": [
          "objectTypeId",
          "relationTypeId",
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "relation-attributes"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RelationsOutputAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationVM": {
        "required": [
          "descriptionKey",
          "enumKey",
          "nameKey",
          "objectState",
          "relationTypeId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectState": {
            "$ref": "#/components/schemas/CObjectStateEnum"
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RelationsDatabaseAttribute": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "clearNewLine": {
            "type": "boolean",
            "nullable": true
          },
          "isHtml": {
            "type": "boolean",
            "nullable": true
          },
          "isSourceAttribute": {
            "type": "boolean",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "enum": [
              "attributeTypeKey"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RelationsDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/RelationsDatabaseAttribute"
                },
                {
                  "$ref": "#/components/schemas/RelationsDefinedDatabaseAttribute"
                }
              ]
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultSort": {
            "$ref": "#/components/schemas/DefaultDatabaseSortVM"
          },
          "diagramTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatabaseDiagramType"
            },
            "nullable": true
          },
          "elementType": {
            "enum": [
              "grouped-list",
              "table",
              "static-grouped-list",
              "static-table",
              "diagram",
              "child-relations-table",
              "simple-relation"
            ],
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "filterOut": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "hide": {
            "$ref": "#/components/schemas/HideRelationsSettings"
          },
          "isConditional": {
            "type": "boolean",
            "nullable": true
          },
          "levels": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "query": {
            "enum": [
              "default",
              "distinct"
            ],
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/RelationsSettingsDatabaseTemplate"
          },
          "startingLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "relations"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationsDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/RelationsDatabaseAttribute"
                },
                {
                  "$ref": "#/components/schemas/RelationsDefinedDatabaseAttribute"
                }
              ]
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultSort": {
            "$ref": "#/components/schemas/DefaultDatabaseSortVM"
          },
          "diagramTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatabaseDiagramType"
            },
            "nullable": true
          },
          "elementType": {
            "enum": [
              "grouped-list",
              "table",
              "static-grouped-list",
              "static-table",
              "diagram",
              "child-relations-table",
              "simple-relation"
            ],
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "filterOut": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "hide": {
            "$ref": "#/components/schemas/HideRelationsSettings"
          },
          "isConditional": {
            "type": "boolean",
            "nullable": true
          },
          "levels": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "query": {
            "enum": [
              "default",
              "distinct"
            ],
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/RelationsSettingsDatabaseTemplate"
          },
          "startingLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "relations"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationsDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/RelationsDatabaseAttribute"
                },
                {
                  "$ref": "#/components/schemas/RelationsDefinedDatabaseAttribute"
                }
              ]
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultSort": {
            "$ref": "#/components/schemas/DefaultDatabaseSortVM"
          },
          "diagramTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatabaseDiagramType"
            },
            "nullable": true
          },
          "elementType": {
            "enum": [
              "grouped-list",
              "table",
              "static-grouped-list",
              "static-table",
              "diagram",
              "child-relations-table",
              "simple-relation"
            ],
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "filterOut": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "hide": {
            "$ref": "#/components/schemas/HideRelationsSettings"
          },
          "isConditional": {
            "type": "boolean",
            "nullable": true
          },
          "levels": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "query": {
            "enum": [
              "default",
              "distinct"
            ],
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/RelationsSettingsDatabaseTemplate"
          },
          "startingLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "relations"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationsDefinedDatabaseAttribute": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "isSourceAttribute": {
            "type": "boolean",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "enum": [
              "definedKey"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "enum": [
              "dataDictionaryColumn",
              "dataDictionaryModel",
              "dataDictionaryObject",
              "fromObjectName",
              "fromObjectPathName",
              "fromObjectTypeName",
              "fromSpaceName",
              "relationName",
              "relationTextValue",
              "relationTypeName",
              "sourceTypeName",
              "toApplicationName",
              "toGrandParentObjectName",
              "toObjectName",
              "toObjectPathName",
              "toObjectTypeName",
              "toParentObjectName",
              "toSpaceName"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RelationsDefinedOutputAttribute": {
        "required": [
          "isSourceAttribute",
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "isSourceAttribute": {
            "type": "boolean"
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "definedKey"
            ],
            "type": "string",
            "readOnly": true
          },
          "value": {
            "minLength": 1,
            "enum": [
              "dataDictionaryColumn",
              "dataDictionaryModel",
              "dataDictionaryObject",
              "fromObjectName",
              "fromObjectPathName",
              "fromObjectTypeName",
              "fromSpaceName",
              "relationName",
              "relationTextValue",
              "relationTypeName",
              "sourceTypeName",
              "toApplicationName",
              "toGrandParentObjectName",
              "toObjectName",
              "toObjectPathName",
              "toObjectTypeName",
              "toParentObjectName",
              "toSpaceName"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RelationsOutputAttribute": {
        "required": [
          "attributeTypeId",
          "isSourceAttribute",
          "type"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AttributeFeatureOutputTemplate"
            },
            "nullable": true
          },
          "isSourceAttribute": {
            "type": "boolean"
          },
          "linkUrl": {
            "$ref": "#/components/schemas/LinkVM"
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "attributeTypeKey"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RelationsOutputTemplate": {
        "required": [
          "isConditional",
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/RelationsDefinedOutputAttribute"
                },
                {
                  "$ref": "#/components/schemas/RelationsOutputAttribute"
                }
              ]
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "defaultSort": {
            "$ref": "#/components/schemas/DefaultOutputSortVM"
          },
          "diagramTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutputDiagramType"
            },
            "nullable": true
          },
          "elementType": {
            "enum": [
              "grouped-list",
              "table",
              "static-grouped-list",
              "static-table",
              "diagram",
              "child-relations-table",
              "simple-relation"
            ],
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "filterOut": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "hide": {
            "$ref": "#/components/schemas/HideRelationsSettings"
          },
          "isConditional": {
            "type": "boolean"
          },
          "levels": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "query": {
            "enum": [
              "default",
              "distinct"
            ],
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/RelationsSettingsOutputTemplate"
          },
          "startingLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "relations"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationsSettingsDatabaseTemplate": {
        "type": "object",
        "properties": {
          "showAllColumnContent": {
            "type": "boolean",
            "nullable": true
          },
          "useDiagramDataAttribute": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationsSettingsOutputTemplate": {
        "required": [
          "showAllColumnContent",
          "useDiagramDataAttribute"
        ],
        "type": "object",
        "properties": {
          "showAllColumnContent": {
            "type": "boolean"
          },
          "useDiagramDataAttribute": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RemoteFileSystemSettings": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "apiUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResolvedConflictVM": {
        "required": [
          "transactionLogId"
        ],
        "type": "object",
        "properties": {
          "customValue": {
            "type": "string",
            "nullable": true
          },
          "selected": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "transactionLogId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RichTextEditorSettings": {
        "type": "object",
        "properties": {
          "applicationSystemQuery": {
            "type": "string",
            "nullable": true
          },
          "modelConfiguration": {
            "$ref": "#/components/schemas/ChatGptModelSettings"
          },
          "objectSystemQuery": {
            "type": "string",
            "nullable": true
          },
          "systemQuery": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SampleDataDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "sample-data"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SampleDataDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "sample-data"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SampleDataDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "sample-data"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SampleDataOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "sample-data"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Schedule": {
        "required": [
          "key",
          "required",
          "type"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "labelKey": {
            "type": "string",
            "nullable": true
          },
          "labelVariant": {
            "enum": [
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "paragraph",
              "body1",
              "body1underline",
              "captionText1",
              "captionText1underline",
              "captionText1caps",
              "captionText2",
              "captionText3"
            ],
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          },
          "tooltipKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "schedule"
            ],
            "type": "string",
            "readOnly": true
          },
          "variant": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SchedulerExternalConnectionSettings": {
        "required": [
          "commandTimeout"
        ],
        "type": "object",
        "properties": {
          "commandTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "snowflakeConnectionString": {
            "type": "string",
            "nullable": true
          },
          "snowflakePassword": {
            "type": "string",
            "nullable": true
          },
          "sqlServerConnectionString": {
            "type": "string",
            "nullable": true
          },
          "sqlServerPassword": {
            "type": "string",
            "nullable": true
          },
          "teradataConnectionString": {
            "type": "string",
            "nullable": true
          },
          "teradataPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SchedulerServiceSettings": {
        "required": [
          "restartTimeout"
        ],
        "type": "object",
        "properties": {
          "restartTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SchedulingSettings": {
        "required": [
          "defaultTaskCancelTimeout"
        ],
        "type": "object",
        "properties": {
          "cronExpression": {
            "type": "string",
            "nullable": true
          },
          "defaultTaskCancelTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "eventsCronExpression": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchDatabasePatchAddTemplate": {
        "required": [
          "action",
          "searchFormKey",
          "targetDataComponentId",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "placeholder": {
            "type": "string",
            "nullable": true
          },
          "searchFormKey": {
            "minLength": 1,
            "type": "string"
          },
          "targetDataComponentId": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "search"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "searchFormKey",
          "targetDataComponentId",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "placeholder": {
            "type": "string",
            "nullable": true
          },
          "searchFormKey": {
            "minLength": 1,
            "type": "string"
          },
          "targetDataComponentId": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "search"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchDatabaseTemplate": {
        "required": [
          "searchFormKey",
          "targetDataComponentId",
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "placeholder": {
            "type": "string",
            "nullable": true
          },
          "searchFormKey": {
            "minLength": 1,
            "type": "string"
          },
          "targetDataComponentId": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "search"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchDatabaseTemplateAdditionalRelationType": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SearchDatabaseTemplateAdditionalUserRelationType": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SearchDatabaseTemplateFavouriteObjectType": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SearchIndexSettingsVM": {
        "type": "object",
        "properties": {
          "mappings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchOutputTemplate": {
        "required": [
          "searchFormId",
          "targetDataComponentId",
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "placeholderKey": {
            "type": "string",
            "nullable": true
          },
          "searchFormId": {
            "minLength": 1,
            "type": "string"
          },
          "targetDataComponentId": {
            "minLength": 1,
            "type": "string"
          },
          "titleKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "enum": [
              "search"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchOutputTemplateAdditionalRelationType": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SearchOutputTemplateAdditionalUserRelationType": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SearchOutputTemplateFavouriteObjectType": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SearchRequestFacet": {
        "type": "object",
        "properties": {
          "bucketCountLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultCollapsed": {
            "type": "boolean",
            "nullable": true
          },
          "elementType": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "enumKeyType": {
            "type": "string",
            "nullable": true
          },
          "forcedFacetValue": {
            "type": "boolean",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderBucketsReverse": {
            "type": "boolean",
            "nullable": true
          },
          "orderBucketsType": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchRequestFacetParameters"
            },
            "nullable": true
          },
          "primaryResultText": {
            "type": "boolean",
            "nullable": true
          },
          "subFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchRequestSubFacet"
            },
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchRequestFacetParameters": {
        "type": "object",
        "properties": {
          "bucketCountLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "enumKeyType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchRequestFilter": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchRequestSubFacet": {
        "type": "object",
        "properties": {
          "bucketCountLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultCollapsed": {
            "type": "boolean",
            "nullable": true
          },
          "elementType": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "enumKeyType": {
            "type": "string",
            "nullable": true
          },
          "orderBucketsReverse": {
            "type": "boolean",
            "nullable": true
          },
          "orderBucketsType": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchRequestFacetParameters"
            },
            "nullable": true
          },
          "subFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchRequestSubFacet"
            },
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchSort": {
        "required": [
          "reverse"
        ],
        "type": "object",
        "properties": {
          "predicate": {
            "type": "string",
            "nullable": true
          },
          "reverse": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SearchedDictionaryAddVM": {
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "objectCode": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "searchText": {
            "type": "string",
            "nullable": true
          },
          "subObjectCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchedObjectInputVM": {
        "required": [
          "objectId"
        ],
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "searchText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Section": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Input"
                },
                {
                  "$ref": "#/components/schemas/Schedule"
                },
                {
                  "$ref": "#/components/schemas/Section"
                },
                {
                  "$ref": "#/components/schemas/Select"
                },
                {
                  "$ref": "#/components/schemas/Text"
                },
                {
                  "$ref": "#/components/schemas/Title"
                },
                {
                  "$ref": "#/components/schemas/Checkbox"
                },
                {
                  "$ref": "#/components/schemas/WorkflowSelect"
                },
                {
                  "$ref": "#/components/schemas/SpaceSelect"
                },
                {
                  "$ref": "#/components/schemas/JsonInput"
                }
              ]
            },
            "nullable": true
          },
          "titleKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "section"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleActionTypeButtonDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "button"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "enum": [
                "addSpace",
                "addObject",
                "export",
                "delete",
                "generateDomains"
              ],
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleActionTypeButtonOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "button"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "enum": [
                "addSpace",
                "addObject",
                "export",
                "delete",
                "generateDomains"
              ],
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleActionTypeFormAttributeTypeDatabaseTemplate": {
        "required": [
          "apiDataKey",
          "elementType",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "api": {
            "type": "string",
            "nullable": true
          },
          "apiDataKey": {
            "type": "string"
          },
          "elementType": {
            "enum": [
              "is_checkbox",
              "is_multiline",
              "is_single_line",
              "api"
            ],
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "enum": [
              "form-attribute"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleActionTypeFormAttributeTypeOutputTemplate": {
        "required": [
          "elementType",
          "key",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "api": {
            "type": "string",
            "nullable": true
          },
          "elementType": {
            "enum": [
              "is_checkbox",
              "is_multiline",
              "is_single_line",
              "api"
            ],
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "enum": [
              "form-attribute"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleActionTypeFormDatabaseTemplate": {
        "required": [
          "api",
          "errorApiCallToast",
          "formId",
          "successApiCallToast",
          "template",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "api": {
            "type": "string"
          },
          "errorApiCallToast": {
            "type": "string"
          },
          "formId": {
            "type": "string"
          },
          "successApiCallToast": {
            "type": "string"
          },
          "template": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeFormAttributeTypeDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeFormRelationTypeDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeFormUserRelationTypeDatabaseTemplate"
                }
              ]
            }
          },
          "title": {
            "type": "string"
          },
          "type": {
            "enum": [
              "form"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleActionTypeFormOutputTemplate": {
        "required": [
          "api",
          "errorApiCallToastKey",
          "formId",
          "successApiCallToastKey",
          "template",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "api": {
            "type": "string"
          },
          "errorApiCallToastKey": {
            "type": "string"
          },
          "formId": {
            "type": "string"
          },
          "successApiCallToastKey": {
            "type": "string"
          },
          "template": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeFormAttributeTypeOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeFormRelationTypeOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeFormUserRelationTypeOutputTemplate"
                }
              ]
            }
          },
          "title": {
            "type": "string"
          },
          "type": {
            "enum": [
              "form"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleActionTypeFormRelationTypeDatabaseTemplate": {
        "required": [
          "apiDataKey",
          "relationTypeKey",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "apiDataKey": {
            "type": "string"
          },
          "relationTypeKey": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "enum": [
              "form-relation"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleActionTypeFormRelationTypeOutputTemplate": {
        "required": [
          "key",
          "relationTypeKey",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "relationTypeKey": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "enum": [
              "form-relation"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleActionTypeFormUserRelationTypeDatabaseTemplate": {
        "required": [
          "apiDataKey",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "apiDataKey": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "enum": [
              "form-user"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleActionTypeFormUserRelationTypeOutputTemplate": {
        "required": [
          "key",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "enum": [
              "form-user"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleActionTypeIconDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "icon"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "enum": [
                "addSpace",
                "addObject",
                "export",
                "delete",
                "generateDomains"
              ],
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleActionTypeIconOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "icon"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "enum": [
                "addSpace",
                "addObject",
                "export",
                "delete",
                "generateDomains"
              ],
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleActionTypeSectionDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "section"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "enum": [
                "addSpace",
                "addObject",
                "export",
                "delete",
                "generateDomains"
              ],
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleActionTypeSectionOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "section"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "enum": [
                "addSpace",
                "addObject",
                "export",
                "delete",
                "generateDomains"
              ],
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "actions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeButtonDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeFormDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeIconDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeSectionDatabaseTemplate"
                }
              ]
            },
            "nullable": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "section-title"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "actions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeButtonDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeFormDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeIconDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeSectionDatabaseTemplate"
                }
              ]
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "section-title"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeButtonDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeFormDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeIconDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeSectionDatabaseTemplate"
                }
              ]
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "section-title"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SectionTitleOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeButtonOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeFormOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeIconOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleActionTypeSectionOutputTemplate"
                }
              ]
            },
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "section-title"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Select": {
        "required": [
          "key",
          "multiselect",
          "onEditDeletePassword",
          "required",
          "type"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectItem"
            },
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "labelKey": {
            "type": "string",
            "nullable": true
          },
          "labelVariant": {
            "enum": [
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "paragraph",
              "body1",
              "body1underline",
              "captionText1",
              "captionText1underline",
              "captionText1caps",
              "captionText2",
              "captionText3"
            ],
            "type": "string",
            "nullable": true
          },
          "multiselect": {
            "type": "boolean"
          },
          "onEditDeletePassword": {
            "type": "boolean"
          },
          "placeholderKey": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          },
          "tooltipKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "select"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SelectItem": {
        "type": "object",
        "properties": {
          "labelKey": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetPasswordOutputVM": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetPasswordVM": {
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "registerToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShortestPathInputVM": {
        "required": [
          "metamodelId",
          "nodeId",
          "nodeId2"
        ],
        "type": "object",
        "properties": {
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "nodeId": {
            "type": "integer",
            "format": "int32"
          },
          "nodeId2": {
            "type": "integer",
            "format": "int32"
          },
          "nodeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SimpleRelationsDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "delimiter": {
            "type": "string",
            "nullable": true
          },
          "relationTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "simple-relation"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SimpleRelationsDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "delimiter": {
            "type": "string",
            "nullable": true
          },
          "relationTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "simple-relation"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SimpleRelationsDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "delimiter": {
            "type": "string",
            "nullable": true
          },
          "relationTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "simple-relation"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SimpleRelationsOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "delimiter": {
            "type": "string",
            "nullable": true
          },
          "relationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationVM"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "simple-relation"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SortView": {
        "required": [
          "reverse"
        ],
        "type": "object",
        "properties": {
          "predicate": {
            "type": "string",
            "description": "Name of the property by which the data is sorted.",
            "nullable": true
          },
          "reverse": {
            "type": "boolean",
            "description": "Boolean that specifies whether to sort in ascending or descending order. The default is ascending."
          }
        },
        "additionalProperties": false
      },
      "SpaceAppImportFilter": {
        "required": [
          "applicationId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SpaceCardDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "space-card"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SpaceCardDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "space-card"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SpaceCardDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "space-card"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SpaceCardOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "space-card"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SpaceCards2DatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "space-cards-2"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SpaceCards2DatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "space-cards-2"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SpaceCards2DatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "space-cards-2"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SpaceCards2OutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "space-cards-2"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SpaceCardsDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "space-cards"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SpaceCardsDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "space-cards"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SpaceCardsDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "space-cards"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SpaceCardsOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterVM"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "space-cards"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SpacePathVM": {
        "required": [
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "spaceId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SpaceSelect": {
        "required": [
          "key",
          "onEditDeletePassword",
          "required",
          "type"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "labelKey": {
            "type": "string",
            "nullable": true
          },
          "labelVariant": {
            "enum": [
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "paragraph",
              "body1",
              "body1underline",
              "captionText1",
              "captionText1underline",
              "captionText1caps",
              "captionText2",
              "captionText3"
            ],
            "type": "string",
            "nullable": true
          },
          "onEditDeletePassword": {
            "type": "boolean"
          },
          "placeholderKey": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          },
          "tooltipKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "space_select"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SplitterDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SplitterDatabaseSectionSettings"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "splitter"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SplitterDatabasePatchReferenceTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "splitter"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SplitterDatabaseSectionPatchSettings"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SplitterDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SplitterDatabaseSectionSettings"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "splitter"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SplitterDatabaseSectionPatchSettings": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TabSectionDatabasePatchTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SplitterDatabaseSectionSettings": {
        "required": [
          "values",
          "width"
        ],
        "type": "object",
        "properties": {
          "innerAlign": {
            "enum": [
              "left",
              "center",
              "right"
            ],
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TimeSelectorDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabaseTemplate"
                }
              ]
            },
            "nullable": true
          },
          "width": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SplitterDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SplitterDatabaseSectionSettings"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "splitter"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SplitterOutputSectionSettings": {
        "type": "object",
        "properties": {
          "innerAlign": {
            "enum": [
              "left",
              "center",
              "right"
            ],
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2OutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudOutputTemplate"
                }
              ]
            },
            "nullable": true
          },
          "width": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SplitterOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SplitterOutputSectionSettings"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "splitter"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SqlApiFormActionRequest": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SqlColumn": {
        "type": "object",
        "properties": {
          "clearNewline": {
            "type": "boolean",
            "nullable": true
          },
          "isHtml": {
            "type": "boolean",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SqlExternalRequest": {
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SqlColumn"
            },
            "nullable": true
          },
          "customInfo": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SqlExternalSettings": {
        "type": "object",
        "properties": {
          "apiProcedureName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusCodeResult": {
        "required": [
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Step": {
        "type": "object",
        "properties": {
          "buttons": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Button"
            },
            "nullable": true
          },
          "centerArea": {
            "$ref": "#/components/schemas/Area"
          }
        },
        "additionalProperties": false
      },
      "StringObjectDictionaryPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringResultVM": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringSinglePropertyWrapperVM": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringStringDictionaryPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StructuredDocumentExportOptions": {
        "required": [
          "formatType",
          "splitByTopParent",
          "userId"
        ],
        "type": "object",
        "properties": {
          "comparingVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "formatType": {
            "$ref": "#/components/schemas/FormatTypeEnum"
          },
          "selectedObjectFilter": {
            "$ref": "#/components/schemas/MrObjectExportFromSelectedFilter"
          },
          "splitByTopParent": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SubgraphRelationsInputVM": {
        "required": [
          "metamodelId"
        ],
        "type": "object",
        "properties": {
          "metamodelId": {
            "type": "integer",
            "format": "int32"
          },
          "newNodeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "oldNodeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SwaggerConfigurationSettings": {
        "type": "object",
        "properties": {
          "endpointsPrefixesToShow": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabAttributesDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/AttributesSettings"
          },
          "staticValues": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "tab-attributes"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabAttributesDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/AttributesSettings"
          },
          "staticValues": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "tab-attributes"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabAttributesDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/AttributesSettings"
          },
          "staticValues": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "tab-attributes"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabAttributesOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/AttributesSettings"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "tab-attributes"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateAttributesValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabSectionDatabasePatchTemplate": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDeleteComponent"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchUpdateTemplate"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabSectionDatabaseTemplate": {
        "required": [
          "values"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TimeSelectorDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabaseTemplate"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabSectionOutputTemplate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2OutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsOutputTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudOutputTemplate"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabSettings": {
        "type": "object",
        "properties": {
          "maxSizeInPx": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabTableDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "tab-tables"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabTableDatabasePatchReferenceTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "tab-tables"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TabSectionDatabasePatchTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabTableDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "tab-tables"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabTableDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "tab-tables"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabTableOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "tab-tables"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiTableOutputTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TableOfContentsDatabasePatchAddTemplate": {
        "required": [
          "action",
          "lookupAttributeTypeKey",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "lookupAttributeTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "lookupHeadings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "table-of-contents"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TableOfContentsDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "lookupAttributeTypeKey",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "lookupAttributeTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "lookupHeadings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "table-of-contents"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TableOfContentsDatabaseTemplate": {
        "required": [
          "lookupAttributeTypeKey",
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "lookupAttributeTypeKey": {
            "minLength": 1,
            "type": "string"
          },
          "lookupHeadings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "table-of-contents"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TableOfContentsOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "lookupAttribute": {
            "type": "string",
            "nullable": true
          },
          "lookupHeadings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "table-of-contents"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TabsDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/TabSettings"
          },
          "type": {
            "enum": [
              "tabs"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TabSectionDatabaseTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabsDatabasePatchReferenceTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "wrapper"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TabSectionDatabasePatchTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabsDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/TabSettings"
          },
          "type": {
            "enum": [
              "tabs"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TabSectionDatabaseTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabsDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/TabSettings"
          },
          "type": {
            "enum": [
              "tabs"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TabSectionDatabaseTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TabsOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/TabSettings"
          },
          "type": {
            "enum": [
              "tabs"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TabSectionOutputTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TargetObjectRelationShortInfoVM": {
        "required": [
          "applicationId",
          "objectId",
          "relationTypeId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "objectPathName": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TaskListVM": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskResultEnum": {
        "enum": [
          10,
          20,
          30,
          40,
          50,
          60,
          70,
          80,
          90,
          100,
          110
        ],
        "type": "integer",
        "format": "int32"
      },
      "TaskStateEnum": {
        "enum": [
          10,
          20,
          30,
          40,
          50,
          60
        ],
        "type": "integer",
        "format": "int32"
      },
      "TaskTypeEnum": {
        "enum": [
          10,
          20,
          30,
          40,
          50,
          60,
          70,
          80,
          90,
          100,
          110,
          120,
          130,
          140,
          150,
          160,
          170,
          180,
          190,
          200,
          210,
          220,
          230,
          240,
          250,
          260,
          270,
          300,
          310,
          320,
          330,
          340,
          350,
          360,
          370,
          380,
          390,
          400,
          410,
          420,
          430,
          440,
          450,
          460,
          470,
          480,
          490,
          500,
          510,
          520,
          530,
          540,
          550,
          560,
          570,
          580,
          590,
          600,
          610,
          620,
          630,
          640,
          650,
          660,
          670,
          680,
          690,
          700,
          710,
          720,
          730,
          740,
          750,
          760,
          770,
          780,
          790,
          800,
          810,
          820,
          830,
          840,
          850,
          860,
          870,
          880,
          890,
          900,
          910,
          920,
          930,
          940,
          950,
          960,
          970,
          980,
          -2,
          -1
        ],
        "type": "integer",
        "format": "int32"
      },
      "TemplateAttributesValue": {
        "required": [
          "attributeTypeId"
        ],
        "type": "object",
        "properties": {
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AttributeFeatureOutputTemplate"
            },
            "nullable": true
          },
          "linkUrl": {
            "$ref": "#/components/schemas/LinkVM"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "placeholderKey": {
            "type": "string",
            "nullable": true
          },
          "staticValues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "valuesUrl": {
            "$ref": "#/components/schemas/LinkVM"
          }
        },
        "additionalProperties": false
      },
      "TemplateDefinedKeyVM": {
        "type": "object",
        "properties": {
          "value": {
            "enum": [
              "accessedTime",
              "applicationName",
              "created",
              "creatorName",
              "lastChange",
              "numberOfFavourites",
              "numberOfRelations",
              "objectKarma",
              "objectName",
              "objectPath",
              "objectTypeName",
              "path",
              "spaceName",
              "statusName",
              "updaterName",
              "viewsAlltime",
              "viewsIn1M"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TemplateDocumentFilter": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "documentTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updater": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TemplateDocumentFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/TemplateDocumentFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TemplateDocumentVm": {
        "required": [
          "created",
          "creator",
          "creatorHexColor",
          "creatorId",
          "documentTypeId",
          "updated",
          "updater",
          "updaterHexColor",
          "updaterId"
        ],
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "minLength": 1,
            "type": "string"
          },
          "creatorHexColor": {
            "minLength": 1,
            "type": "string"
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "documentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "updater": {
            "minLength": 1,
            "type": "string"
          },
          "updaterHexColor": {
            "minLength": 1,
            "type": "string"
          },
          "updaterId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TemplateDocumentVmPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateDocumentVm"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TemplateExternalKey": {
        "type": "object",
        "properties": {
          "features": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AttributeFeatureOutputTemplate"
            },
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TemplateOutputSettings": {
        "required": [
          "rightPanelClosed"
        ],
        "type": "object",
        "properties": {
          "attributeLayout": {
            "enum": [
              "single-row",
              "multiline"
            ],
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "header": {
            "$ref": "#/components/schemas/HeaderSectionOutputSettings"
          },
          "hide": {
            "$ref": "#/components/schemas/HideOutputSectionSettings"
          },
          "layout": {
            "enum": [
              "default",
              "no-panel-border"
            ],
            "type": "string",
            "nullable": true
          },
          "rightPanelClosed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TemplateRefreshVM": {
        "required": [
          "force"
        ],
        "type": "object",
        "properties": {
          "force": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TemplatesVM": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CApplicationTemplateVM"
            },
            "nullable": true
          },
          "hash": {
            "type": "string",
            "nullable": true
          },
          "hierarchyLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CHierarchyLevelVM"
            },
            "nullable": true
          },
          "objectTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CObjectTypeTemplateVM"
            },
            "nullable": true
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CPageRouteVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Text": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "tooltipKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "text"
            ],
            "type": "string",
            "readOnly": true
          },
          "valueKey": {
            "type": "string",
            "nullable": true
          },
          "variant": {
            "enum": [
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "paragraph",
              "body1",
              "body1underline",
              "captionText1",
              "captionText1underline",
              "captionText1caps",
              "captionText2",
              "captionText3"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TextEditorAiInputVM": {
        "required": [
          "query"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "chatId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "query": {
            "minLength": 1,
            "type": "string"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TextEditorAiMessageVM": {
        "required": [
          "chatId"
        ],
        "type": "object",
        "properties": {
          "chatId": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TextEditorAiSectionsVM": {
        "type": "object",
        "properties": {
          "aiResponseSections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CTextEditorAiSectionVM"
            },
            "nullable": true
          },
          "textSelectionSections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CTextEditorAiSectionVM"
            },
            "nullable": true
          },
          "wholeTextSections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CTextEditorAiSectionVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TextEditorAiSettings": {
        "required": [
          "aiSuggestionEnabled"
        ],
        "type": "object",
        "properties": {
          "aiSuggestionEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TimeSelectorDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "targetDataComponentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "enum": [
              "time-selector"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Title": {
        "required": [
          "showAppIcon",
          "type"
        ],
        "type": "object",
        "properties": {
          "showAppIcon": {
            "type": "boolean"
          },
          "subtitleKey": {
            "type": "string",
            "nullable": true
          },
          "titleKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "title"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TokenInputVM": {
        "required": [
          "issuer",
          "role",
          "secret",
          "userId",
          "username"
        ],
        "type": "object",
        "properties": {
          "issuer": {
            "minLength": 1,
            "type": "string"
          },
          "role": {
            "minLength": 1,
            "enum": [
              "admin",
              "contributor",
              "viewer",
              "guest"
            ],
            "type": "string"
          },
          "secret": {
            "minLength": 1,
            "type": "string"
          },
          "userId": {
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TokenizationSettings": {
        "required": [
          "batchSize",
          "minLength"
        ],
        "type": "object",
        "properties": {
          "batchSize": {
            "type": "integer",
            "format": "int32"
          },
          "keyWordsDelimiter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "minLength": {
            "type": "integer",
            "format": "int32"
          },
          "sentenceDelimiters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TourCreateVM": {
        "required": [
          "description",
          "features",
          "name",
          "roles",
          "urlId"
        ],
        "type": "object",
        "properties": {
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CTourFeatureEnum"
            }
          },
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppRoleEnum"
            }
          },
          "urlId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TourEditVM": {
        "required": [
          "description",
          "features",
          "name",
          "roles",
          "urlId"
        ],
        "type": "object",
        "properties": {
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CTourFeatureEnum"
            }
          },
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppRoleEnum"
            }
          },
          "urlId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TourFilter": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "tourDescription": {
            "type": "string",
            "nullable": true
          },
          "tourStepCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "urlId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "urlName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TourFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/TourFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TourLink": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TourStepCreateVM": {
        "required": [
          "name",
          "pageElementId",
          "values"
        ],
        "type": "object",
        "properties": {
          "learnMoreUrl": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "pageElementId": {
            "type": "integer",
            "format": "int32"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TourStepValueInStepVM"
            }
          }
        },
        "additionalProperties": false
      },
      "TourStepDetailVM": {
        "required": [
          "created",
          "creatorId",
          "htmlElementId",
          "name",
          "orderNumber",
          "pageElementEnumKey",
          "pageElementId",
          "pageElementNameKey",
          "tourId",
          "tourStepId",
          "values"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "htmlElementId": {
            "minLength": 1,
            "type": "string"
          },
          "learnMoreUrl": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageElementEnumKey": {
            "minLength": 1,
            "type": "string"
          },
          "pageElementId": {
            "type": "integer",
            "format": "int32"
          },
          "pageElementNameKey": {
            "minLength": 1,
            "type": "string"
          },
          "tourId": {
            "type": "integer",
            "format": "int32"
          },
          "tourStepId": {
            "type": "integer",
            "format": "int32"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TourStepValueInStepVM"
            }
          }
        },
        "additionalProperties": false
      },
      "TourStepDetailVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TourStepDetailVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TourStepEditVM": {
        "required": [
          "name",
          "pageElementId",
          "values"
        ],
        "type": "object",
        "properties": {
          "learnMoreUrl": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "pageElementId": {
            "type": "integer",
            "format": "int32"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TourStepValueInStepVM"
            }
          }
        },
        "additionalProperties": false
      },
      "TourStepFilter": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "htmlElementId": {
            "type": "string",
            "nullable": true
          },
          "learnMoreUrl": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "pageElementId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tourId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TourStepFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/TourStepFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TourStepVM": {
        "required": [
          "created",
          "creatorId",
          "htmlElementId",
          "name",
          "orderNumber",
          "pageElementEnumKey",
          "pageElementId",
          "pageElementNameKey",
          "tourId",
          "tourStepId"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "htmlElementId": {
            "minLength": 1,
            "type": "string"
          },
          "learnMoreUrl": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageElementEnumKey": {
            "minLength": 1,
            "type": "string"
          },
          "pageElementId": {
            "type": "integer",
            "format": "int32"
          },
          "pageElementNameKey": {
            "minLength": 1,
            "type": "string"
          },
          "tourId": {
            "type": "integer",
            "format": "int32"
          },
          "tourStepId": {
            "type": "integer",
            "format": "int32"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TourStepValueDataVM": {
        "required": [
          "contentType",
          "name",
          "tourId",
          "tourStepValueDataId"
        ],
        "type": "object",
        "properties": {
          "contentType": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "tourId": {
            "type": "integer",
            "format": "int32"
          },
          "tourStepValueDataId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TourStepValueDataVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TourStepValueDataVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TourStepValueInStepVM": {
        "required": [
          "languageId",
          "name",
          "textValue"
        ],
        "type": "object",
        "properties": {
          "languageId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "textValue": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TourVM": {
        "required": [
          "created",
          "creatorId",
          "name",
          "tourDescription",
          "tourId",
          "tourStepCount",
          "urlId",
          "urlName"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "rTourFeatures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RTourFeatureVM"
            },
            "nullable": true
          },
          "rTourRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RTourRoleVM"
            },
            "nullable": true
          },
          "tourDescription": {
            "minLength": 1,
            "type": "string"
          },
          "tourId": {
            "type": "integer",
            "format": "int32"
          },
          "tourStepCount": {
            "type": "integer",
            "format": "int32"
          },
          "tourSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TourStepVM"
            },
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "urlId": {
            "type": "integer",
            "format": "int32"
          },
          "urlName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TourVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TourVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionLogShortInfoVM": {
        "required": [
          "changeTypeId",
          "transactionLogId"
        ],
        "type": "object",
        "properties": {
          "changeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "extendedAttributeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectProperty": {
            "type": "string",
            "nullable": true
          },
          "objectPropertyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeName": {
            "type": "string",
            "nullable": true
          },
          "parentUniqueKey": {
            "type": "string",
            "nullable": true
          },
          "previousTextValue": {
            "type": "string",
            "nullable": true
          },
          "propertyObjectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "transactionLogId": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionLogStateVM": {
        "required": [
          "stateId"
        ],
        "type": "object",
        "properties": {
          "stateId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TransitionRoleUserObjectRelationTypeInfo": {
        "required": [
          "descriptionKey",
          "enumKey",
          "nameKey",
          "objectStateId",
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectStateId": {
            "type": "integer",
            "format": "int32"
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TranslationAddVM": {
        "required": [
          "isProtected",
          "key",
          "translation"
        ],
        "type": "object",
        "properties": {
          "isProtected": {
            "type": "boolean"
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "translation": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TranslationEditBatchVM": {
        "type": "object",
        "properties": {
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationEditInBatch"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TranslationEditInBatch": {
        "required": [
          "isProtected",
          "key",
          "languageId",
          "namespaceId",
          "translation"
        ],
        "type": "object",
        "properties": {
          "isProtected": {
            "type": "boolean"
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "languageId": {
            "type": "integer",
            "format": "int32"
          },
          "namespaceId": {
            "type": "integer",
            "format": "int32"
          },
          "translation": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TranslationEditVM": {
        "required": [
          "isProtected",
          "key",
          "translation"
        ],
        "type": "object",
        "properties": {
          "isProtected": {
            "type": "boolean"
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "translation": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TranslationNamespaceAddVM": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TranslationNamespaceVM": {
        "required": [
          "translationNamespaceId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "translationNamespaceId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TranslationNamespaceVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationNamespaceVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbFulltextSearchFilter": {
        "type": "object",
        "additionalProperties": false
      },
      "UbFulltextSearchFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/UbFulltextSearchFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbFulltextSearchVM": {
        "required": [
          "created",
          "fulltextSearchedId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "fulltextSearchedId": {
            "type": "integer",
            "format": "int32"
          },
          "searchTerm": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UbFulltextSearchVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UbFulltextSearchVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbLastVisitedObjectFilter": {
        "type": "object",
        "properties": {
          "accessed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "accessedCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbLastVisitedObjectFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/UbLastVisitedObjectFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbLastVisitedObjectOverviewFilter": {
        "type": "object",
        "properties": {
          "accessedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "additionalAttributes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeName": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "statusIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "statusName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbLastVisitedObjectOverviewFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/UbLastVisitedObjectOverviewFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbLastVisitedObjectOverviewVM": {
        "required": [
          "accessedTime",
          "objectId"
        ],
        "type": "object",
        "properties": {
          "accessedTime": {
            "type": "string",
            "format": "date-time"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "objectType": {
            "$ref": "#/components/schemas/CObjectTypeInObjectVM"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeName": {
            "type": "string",
            "nullable": true
          },
          "pathNameObject": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "statusName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbLastVisitedObjectOverviewVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UbLastVisitedObjectOverviewVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbLastVisitedObjectVM": {
        "type": "object",
        "properties": {
          "accessed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "accessedCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean",
            "nullable": true
          },
          "isWatched": {
            "type": "boolean",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectType": {
            "$ref": "#/components/schemas/CObjectTypeInObjectVM"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbLastVisitedObjectVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UbLastVisitedObjectVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbMostSearchedTermFilter": {
        "required": [
          "fromDateTime"
        ],
        "type": "object",
        "properties": {
          "fromDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "maxItemLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbMostSearchedTermFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/UbMostSearchedTermFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbSavedSearchFilterAddVM": {
        "required": [
          "formId",
          "savedFilterValue"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "filterKey": {
            "type": "string",
            "nullable": true
          },
          "formId": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "savedFilterValue": {
            "minLength": 1,
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbSavedSearchFilterFilter": {
        "type": "object",
        "properties": {
          "filterKey": {
            "type": "string",
            "nullable": true
          },
          "formId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbSavedSearchFilterFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/UbSavedSearchFilterFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbSavedSearchFilterVM": {
        "required": [
          "created",
          "creatorId",
          "savedSearchFilterId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "filterKey": {
            "type": "string",
            "nullable": true
          },
          "formId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "savedFilterValue": {
            "type": "string",
            "nullable": true
          },
          "savedSearchFilterId": {
            "type": "integer",
            "format": "int32"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UbSavedSearchFilterVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UbSavedSearchFilterVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbSearchedTermsForPeriodVM": {
        "required": [
          "count"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "term": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbSearchedTermsForPeriodVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UbSearchedTermsForPeriodVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbVisitedApplicationSpaceFilter": {
        "type": "object",
        "properties": {
          "accessedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "visitedCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "visitedSpaceApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbVisitedApplicationSpaceFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/UbVisitedApplicationSpaceFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbVisitedObjectFilter": {
        "type": "object",
        "properties": {
          "accessedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbVisitedObjectFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/UbVisitedObjectFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbVisitedObjectVM": {
        "required": [
          "accessedCount",
          "isFavourite",
          "userId"
        ],
        "type": "object",
        "properties": {
          "accessedCount": {
            "type": "integer",
            "format": "int32"
          },
          "accessedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "accessedModel": {
            "type": "string",
            "nullable": true
          },
          "accessedObject": {
            "type": "string",
            "nullable": true
          },
          "accessedSubObject": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationNameKey": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean"
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectPath": {
            "$ref": "#/components/schemas/ObjectPathVM"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeNameKey": {
            "type": "string",
            "nullable": true
          },
          "pathNameObject": {
            "$ref": "#/components/schemas/PathNameList"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UbVisitedObjectVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UbVisitedObjectVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbVisitedObjectsPeriodFilter": {
        "required": [
          "fromDateTime"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "maxItemLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbVisitedObjectsPeriodFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/UbVisitedObjectsPeriodFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UbVisitedSpaceApplicationVM": {
        "required": [
          "accessedDate",
          "userId",
          "visitedCount",
          "visitedSpaceApplicationId"
        ],
        "type": "object",
        "properties": {
          "accessedDate": {
            "type": "string",
            "format": "date-time"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "spaceIconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "visitedCount": {
            "type": "integer",
            "format": "int32"
          },
          "visitedSpaceApplicationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UbVisitedSpaceApplicationVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UbVisitedSpaceApplicationVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserBranchPermissionFilter": {
        "type": "object",
        "properties": {
          "hasRead": {
            "type": "boolean",
            "nullable": true
          },
          "hasSetInactive": {
            "type": "boolean",
            "nullable": true
          },
          "hasSetOwner": {
            "type": "boolean",
            "nullable": true
          },
          "hasWrite": {
            "type": "boolean",
            "nullable": true
          },
          "isGroup": {
            "type": "boolean",
            "nullable": true
          },
          "isOwner": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserBranchPermissionFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/UserBranchPermissionFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserBranchPermissionVM": {
        "required": [
          "hasRead",
          "hasSetInactive",
          "hasSetOwner",
          "hasWrite",
          "isGroup",
          "isOwner",
          "userId"
        ],
        "type": "object",
        "properties": {
          "hasRead": {
            "type": "boolean"
          },
          "hasSetInactive": {
            "type": "boolean"
          },
          "hasSetOwner": {
            "type": "boolean"
          },
          "hasWrite": {
            "type": "boolean"
          },
          "isGroup": {
            "type": "boolean"
          },
          "isOwner": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserBranchPermissionVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserBranchPermissionVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserCodeVM": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "categoryKey": {
            "type": "string",
            "nullable": true
          },
          "colorHex": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "subLabel": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserCodeVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserCodeVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserContextVM": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserDefinedPageVM": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dictionaryProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileName": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updater": {
            "type": "string",
            "nullable": true
          },
          "updaterColorHex": {
            "type": "string",
            "nullable": true
          },
          "updaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userDefinedPageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "windowDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "windowDefinitionName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDefinedPageVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDefinedPageVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserFolderPermissionFilter": {
        "type": "object",
        "properties": {
          "hasRead": {
            "type": "boolean",
            "nullable": true
          },
          "hasWrite": {
            "type": "boolean",
            "nullable": true
          },
          "isGroup": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserFolderPermissionFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/UserFolderPermissionFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserFolderPermissionVM": {
        "required": [
          "hasRead",
          "hasWrite",
          "isGroup",
          "userId"
        ],
        "type": "object",
        "properties": {
          "hasRead": {
            "type": "boolean"
          },
          "hasWrite": {
            "type": "boolean"
          },
          "isGroup": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserFolderPermissionVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserFolderPermissionVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserLastActivityVM": {
        "required": [
          "pagesViewedLastMonth"
        ],
        "type": "object",
        "properties": {
          "lastActivity": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pagesViewedLastMonth": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserObjectRelationTypeTransitionVM": {
        "required": [
          "orderNumber",
          "userObjectRelationTypeId"
        ],
        "type": "object",
        "properties": {
          "changeType": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "selectUserObjectRelationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userObjectRelationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserReactionSummary": {
        "required": [
          "count",
          "reactionTypeId"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "reactionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRelationWithFeaturesVM": {
        "required": [
          "descriptionKey",
          "enumKey",
          "nameKey",
          "objectState",
          "relationTypeId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CUserObjectRelationTypeFeatureVM"
            },
            "nullable": true
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "objectState": {
            "$ref": "#/components/schemas/CObjectStateEnum"
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserWithSpaceRightsFilter": {
        "type": "object",
        "properties": {
          "hasRead": {
            "type": "boolean",
            "nullable": true
          },
          "hasWrite": {
            "type": "boolean",
            "nullable": true
          },
          "isGroup": {
            "type": "boolean",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserWithSpaceRightsFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/UserWithSpaceRightsFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserWithSpaceRightsVM": {
        "required": [
          "hasRead",
          "hasWrite",
          "isGroup",
          "userId"
        ],
        "type": "object",
        "properties": {
          "hasRead": {
            "type": "boolean"
          },
          "hasWrite": {
            "type": "boolean"
          },
          "isGroup": {
            "type": "boolean"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionVM"
            },
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userColorHex": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserWithSpaceRightsVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserWithSpaceRightsVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VFolderPermissionFilter": {
        "type": "object",
        "properties": {
          "isInherited": {
            "type": "boolean",
            "nullable": true
          },
          "permissionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "refObjectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VFolderPermissionFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/VFolderPermissionFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VModelVersionChangesFilter": {
        "type": "object",
        "properties": {
          "baseBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseBranchName": {
            "type": "string",
            "nullable": true
          },
          "baseModelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseModelVersionNumber": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "includeEmpty": {
            "type": "boolean",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "modelVersionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelVersionStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelVersionStateIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "modelVersionStateName": {
            "type": "string",
            "nullable": true
          },
          "numberOfChanges": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "numberOfDiagramChanges": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tags": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VModelVersionChangesFilterFilterView": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/VModelVersionChangesFilter"
          },
          "skip": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to skip. Default is 0.",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "$ref": "#/components/schemas/SortView"
          },
          "take": {
            "type": "integer",
            "description": "Pagination property that specifies how many objects to take. Default is 50.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VModelVersionChangesVM": {
        "required": [
          "created",
          "creatorId",
          "modelId",
          "modelVersionId",
          "modelVersionStateId",
          "numberOfChanges",
          "numberOfDiagramChanges"
        ],
        "type": "object",
        "properties": {
          "baseBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseBranchName": {
            "type": "string",
            "nullable": true
          },
          "baseModelVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseModelVersionNumber": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "canAddTag": {
            "type": "boolean",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32"
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "modelVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "modelVersionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelVersionStateId": {
            "type": "integer",
            "format": "int32"
          },
          "modelVersionStateIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "modelVersionStateName": {
            "type": "string",
            "nullable": true
          },
          "numberOfChanges": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfDiagramChanges": {
            "type": "integer",
            "format": "int32"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppTagVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VModelVersionChangesVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VModelVersionChangesVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationLogParametersVM": {
        "type": "object",
        "properties": {
          "options": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "rowNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationLogVM": {
        "required": [
          "severityId"
        ],
        "type": "object",
        "properties": {
          "messageKey": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationLogParametersVM"
            },
            "nullable": true
          },
          "severityId": {
            "type": "integer",
            "format": "int32"
          },
          "severityNameKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VersionInfoVM": {
        "required": [
          "versionNumber"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorColorHex": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "versionNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "VersionVM": {
        "required": [
          "gitCommitDate"
        ],
        "type": "object",
        "properties": {
          "gitCommitDate": {
            "type": "string",
            "format": "date-time"
          },
          "gitCommitId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedApplicationAddVM": {
        "required": [
          "applicationId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedApplicationVM": {
        "required": [
          "applicationId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "visitedCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedApplicationVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VisitedApplicationVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedDictionaryAddVM": {
        "required": [
          "modelCode"
        ],
        "type": "object",
        "properties": {
          "modelCode": {
            "minLength": 1,
            "type": "string"
          },
          "objectCode": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "subObjectCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedDictionaryVM": {
        "required": [
          "visitedCount"
        ],
        "type": "object",
        "properties": {
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "objectCode": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "subObjectCode": {
            "type": "string",
            "nullable": true
          },
          "visitedCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "VisitedDictionaryVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VisitedDictionaryVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedObjectAddVM": {
        "required": [
          "objectId"
        ],
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedObjectVM": {
        "required": [
          "applicationId",
          "objectId",
          "objectTypeId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectName": {
            "type": "string",
            "nullable": true
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "visitedCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedObjectVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VisitedObjectVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedSpaceAddVM": {
        "required": [
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedSpaceApplicationAddVM": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedSpaceApplicationVM": {
        "required": [
          "applicationId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "visitedCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedSpaceApplicationVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VisitedSpaceApplicationVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedSpaceVM": {
        "required": [
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceName": {
            "type": "string",
            "nullable": true
          },
          "visitedCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedSpaceVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VisitedSpaceVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedUrlAddVM": {
        "type": "object",
        "properties": {
          "fromUrl": {
            "type": "string",
            "nullable": true
          },
          "toUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisitedUrlCountVM": {
        "required": [
          "visitedPagesCount"
        ],
        "type": "object",
        "properties": {
          "lastActivity": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visitedPagesCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WFGColumnMappigVM": {
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFGMappingColumnVM"
            },
            "nullable": true
          },
          "kbOriginalCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelDatabase": {
            "type": "string",
            "nullable": true
          },
          "modelStereotype": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WFGColumnVM": {
        "type": "object",
        "properties": {
          "columnDataType": {
            "type": "string",
            "nullable": true
          },
          "columnFormat": {
            "type": "string",
            "nullable": true
          },
          "columnLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnMandatory": {
            "type": "string",
            "nullable": true
          },
          "columnName": {
            "type": "string",
            "nullable": true
          },
          "columnPrecision": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnUnicode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WFGMappingColumnVM": {
        "type": "object",
        "properties": {
          "columnName": {
            "type": "string",
            "nullable": true
          },
          "sourceColumn": {
            "type": "string",
            "nullable": true
          },
          "sourceModel": {
            "type": "string",
            "nullable": true
          },
          "sourceTable": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WFGTableVM": {
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFGColumnVM"
            },
            "nullable": true
          },
          "kbOriginalCode": {
            "type": "string",
            "nullable": true
          },
          "modelCode": {
            "type": "string",
            "nullable": true
          },
          "modelDatabase": {
            "type": "string",
            "nullable": true
          },
          "modelDbms": {
            "type": "string",
            "nullable": true
          },
          "modelStereotype": {
            "type": "string",
            "nullable": true
          },
          "primaryKey": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WhiteListVM": {
        "type": "object",
        "properties": {
          "domainEmail": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userRoleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WhiteListVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhiteListVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WindowDefinitionSettingsVM": {
        "type": "object",
        "properties": {
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WordCloudDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "apiType": {
            "enum": [
              "visitedObjects",
              "searchedTerms"
            ],
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "wordcloud"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WordCloudDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "apiType": {
            "enum": [
              "visitedObjects",
              "searchedTerms"
            ],
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "wordcloud"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WordCloudDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "apiType": {
            "enum": [
              "visitedObjects",
              "searchedTerms"
            ],
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "wordcloud"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WordCloudOutputTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "apiType": {
            "enum": [
              "visitedObjects",
              "searchedTerms"
            ],
            "type": "string",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "wordcloud"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WorkerExternalConnectionSettings": {
        "required": [
          "commandTimeout"
        ],
        "type": "object",
        "properties": {
          "commandTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "snowflakeConnectionString": {
            "type": "string",
            "nullable": true
          },
          "snowflakePassword": {
            "type": "string",
            "nullable": true
          },
          "sqlServerConnectionString": {
            "type": "string",
            "nullable": true
          },
          "sqlServerPassword": {
            "type": "string",
            "nullable": true
          },
          "teradataConnectionString": {
            "type": "string",
            "nullable": true
          },
          "teradataPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkerServiceSettings": {
        "required": [
          "restartTimeout"
        ],
        "type": "object",
        "properties": {
          "restartTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkerSettings": {
        "required": [
          "genericProcedureProcessingTimeout"
        ],
        "type": "object",
        "properties": {
          "genericProcedureProcessingTimeout": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WorkflowCreateVM": {
        "required": [
          "initStateId",
          "isSelectable"
        ],
        "type": "object",
        "properties": {
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "initStateId": {
            "type": "integer",
            "format": "int32"
          },
          "isSelectable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WorkflowSelect": {
        "required": [
          "key",
          "onEditDeletePassword",
          "required",
          "type"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "labelKey": {
            "type": "string",
            "nullable": true
          },
          "labelVariant": {
            "enum": [
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "paragraph",
              "body1",
              "body1underline",
              "captionText1",
              "captionText1underline",
              "captionText1caps",
              "captionText2",
              "captionText3"
            ],
            "type": "string",
            "nullable": true
          },
          "onEditDeletePassword": {
            "type": "boolean"
          },
          "placeholderKey": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          },
          "tooltipKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "workflow_select"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowStateFilter": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowStateThresholdInfo": {
        "required": [
          "cChangeThresholdTypeEnum",
          "enumKey"
        ],
        "type": "object",
        "properties": {
          "cChangeThresholdTypeEnum": {
            "$ref": "#/components/schemas/CChangeThresholdTypeEnum"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WorkflowStateTransitionVM": {
        "required": [
          "canEdit",
          "changeThresholdTypeId",
          "stateFromId",
          "stateToId",
          "workflowId"
        ],
        "type": "object",
        "properties": {
          "canEdit": {
            "type": "boolean"
          },
          "changeThresholdTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "stateFromId": {
            "type": "integer",
            "format": "int32"
          },
          "stateToId": {
            "type": "integer",
            "format": "int32"
          },
          "workflowId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WorkflowStateTransitionsInfoVM": {
        "required": [
          "enumKey",
          "nameKey",
          "stateFromId",
          "stateToEnumKey",
          "stateToId",
          "thresholdInfo",
          "transitionRoleUserObjectRelationTypes",
          "worfklowEnumKey",
          "workflowId"
        ],
        "type": "object",
        "properties": {
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "stateFromId": {
            "type": "integer",
            "format": "int32"
          },
          "stateToEnumKey": {
            "minLength": 1,
            "type": "string"
          },
          "stateToId": {
            "type": "integer",
            "format": "int32"
          },
          "thresholdInfo": {
            "$ref": "#/components/schemas/WorkflowStateThresholdInfo"
          },
          "transitionRoleUserObjectRelationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransitionRoleUserObjectRelationTypeInfo"
            }
          },
          "worfklowEnumKey": {
            "minLength": 1,
            "type": "string"
          },
          "workflowId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WorkflowStateUserTransitionVM": {
        "required": [
          "approvedCount",
          "canApproveByAnyContributor",
          "canEdit",
          "changeThresholdTypeId",
          "stateFromId",
          "stateToId",
          "totalCountToApprove",
          "workflowId"
        ],
        "type": "object",
        "properties": {
          "approvedCount": {
            "type": "integer",
            "format": "int32"
          },
          "canApproveByAnyContributor": {
            "type": "boolean",
            "readOnly": true
          },
          "canEdit": {
            "type": "boolean"
          },
          "changeThresholdTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "stateFromId": {
            "type": "integer",
            "format": "int32"
          },
          "stateToId": {
            "type": "integer",
            "format": "int32"
          },
          "totalCountToApprove": {
            "type": "integer",
            "format": "int32"
          },
          "userObjectRelationTransitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserObjectRelationTypeTransitionVM"
            },
            "nullable": true
          },
          "userTransitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserInWorkflowTransitionVM"
            },
            "nullable": true
          },
          "workflowId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WorkflowStateUserTransitionVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStateUserTransitionVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowStateWithRolesVM": {
        "required": [
          "childCreationConditionallyDisabled",
          "colorHex",
          "descriptionKey",
          "enumKey",
          "iconId",
          "nameKey",
          "roles",
          "workflowStateId"
        ],
        "type": "object",
        "properties": {
          "childCreationConditionallyDisabled": {
            "type": "boolean"
          },
          "colorHex": {
            "minLength": 1,
            "type": "string"
          },
          "colorHoverHex": {
            "type": "string",
            "nullable": true
          },
          "descriptionKey": {
            "minLength": 1,
            "type": "string"
          },
          "enumKey": {
            "minLength": 1,
            "type": "string"
          },
          "iconId": {
            "type": "integer",
            "format": "int32"
          },
          "nameKey": {
            "minLength": 1,
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationVM"
            }
          },
          "workflowStateId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WorkflowVM": {
        "required": [
          "hasDiagram",
          "isDefault",
          "isEmpty",
          "workflowId"
        ],
        "type": "object",
        "properties": {
          "descriptionKey": {
            "type": "string",
            "nullable": true
          },
          "enumKey": {
            "type": "string",
            "nullable": true
          },
          "hasDiagram": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isEmpty": {
            "type": "boolean"
          },
          "nameKey": {
            "type": "string",
            "nullable": true
          },
          "workflowId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WorkflowVMPagedVM": {
        "required": [
          "data",
          "size"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowVM"
            },
            "description": "Current results."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Response status name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WrapperDatabasePatchAddTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "add"
            ],
            "type": "string",
            "readOnly": true
          },
          "addAfterComponentId": {
            "type": "string",
            "nullable": true
          },
          "addBeforeComponentId": {
            "type": "string",
            "nullable": true
          },
          "addToEnd": {
            "type": "boolean",
            "nullable": true
          },
          "addToStart": {
            "type": "boolean",
            "nullable": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "wrapper"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TimeSelectorDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabaseTemplate"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WrapperDatabasePatchReferenceTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "wrapper"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PkgPatchDeleteComponent"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ObjectDetailDatabaseSettingsPatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchReferenceTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabasePatchUpdateTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchAddTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaPatchUpdateTemplate"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WrapperDatabasePatchUpdateTemplate": {
        "required": [
          "action",
          "type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "enum": [
              "update"
            ],
            "type": "string",
            "readOnly": true
          },
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "wrapper"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TimeSelectorDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabaseTemplate"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WrapperDatabaseTemplate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "wrapper"
            ],
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiCardInlineDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApiTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationDataDictionaryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ApplicationRepositoryCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/AttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/BinaryValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ButtonLinkDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChartDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/ChildListDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/CodeTableLabelUserDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/DatabaseSettingsTemplate"
                },
                {
                  "$ref": "#/components/schemas/HeaderlessTextareaDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LastActivityDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/LengthStatisticsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/MultiRelationDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/NamedComponentDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PanelDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/PipelineRunDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RawValueDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/RelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SampleDataDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SectionTitleDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SearchDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SimpleRelationsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCards2DatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SpaceCardsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/SplitterDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabAttributesDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabTableDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TableOfContentsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TabsDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/TimeSelectorDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WordCloudDatabaseTemplate"
                },
                {
                  "$ref": "#/components/schemas/WrapperDatabaseTemplate"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "apiKey",
        "description": "Standard Authorization header using the Bearer scheme. Example: \"Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}